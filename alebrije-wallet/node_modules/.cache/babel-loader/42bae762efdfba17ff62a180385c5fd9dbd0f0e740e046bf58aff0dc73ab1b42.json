{"ast":null,"code":"var _jsxFileName = \"/Users/rastavo/alebrije-project/alebrije-wallet/src/components/WalletConnect.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Alert, Spinner } from 'react-bootstrap';\nimport WalletService from '../services/wallet-service';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WalletConnect = () => {\n  _s();\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  useEffect(() => {\n    // Check if already connected\n    if (WalletService.isConnected()) {\n      setAccounts(WalletService.getAccounts());\n    }\n  }, []);\n  const handleConnect = async () => {\n    setIsConnecting(true);\n    setError(null);\n    try {\n      const success = await WalletService.connect();\n      if (success) {\n        setAccounts(WalletService.getAccounts());\n      } else {\n        setError('Failed to connect wallet');\n      }\n    } catch (err) {\n      setError(err.message || 'An error occurred while connecting');\n      console.error('Connection error:', err);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  const handleDisconnect = async () => {\n    await WalletService.disconnect();\n    setAccounts([]);\n  };\n  const formatAddress = address => {\n    if (!address) return '';\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-connect-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), accounts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connected-wallet\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"account-label\",\n          children: \"Connected Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"account-address\",\n          children: formatAddress(accounts[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          size: \"sm\",\n          onClick: () => navigator.clipboard.writeText(accounts[0]),\n          title: \"Copy address\",\n          children: \"\\uD83D\\uDCCB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        onClick: handleDisconnect,\n        size: \"sm\",\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleConnect,\n      disabled: isConnecting,\n      children: isConnecting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          as: \"span\",\n          animation: \"border\",\n          size: \"sm\",\n          role: \"status\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ms-2\",\n          children: \"Connecting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : 'Connect Wallet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnect, \"MOB8AIBbJQfMPQe7I8FyhWTrPpk=\");\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","useState","useEffect","Button","Alert","Spinner","WalletService","jsxDEV","_jsxDEV","Fragment","_Fragment","WalletConnect","_s","isConnecting","setIsConnecting","error","setError","accounts","setAccounts","isConnected","getAccounts","handleConnect","success","connect","err","message","console","handleDisconnect","disconnect","formatAddress","address","substring","length","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","navigator","clipboard","writeText","title","disabled","as","animation","role","_c","$RefreshReg$"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/WalletConnect.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Alert, Spinner } from 'react-bootstrap';\nimport WalletService from '../services/wallet-service';\n\nconst WalletConnect = () => {\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  \n  useEffect(() => {\n    // Check if already connected\n    if (WalletService.isConnected()) {\n      setAccounts(WalletService.getAccounts());\n    }\n  }, []);\n  \n  const handleConnect = async () => {\n    setIsConnecting(true);\n    setError(null);\n    \n    try {\n      const success = await WalletService.connect();\n      if (success) {\n        setAccounts(WalletService.getAccounts());\n      } else {\n        setError('Failed to connect wallet');\n      }\n    } catch (err) {\n      setError(err.message || 'An error occurred while connecting');\n      console.error('Connection error:', err);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  \n  const handleDisconnect = async () => {\n    await WalletService.disconnect();\n    setAccounts([]);\n  };\n  \n  const formatAddress = (address) => {\n    if (!address) return '';\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n  \n  return (\n    <div className=\"wallet-connect-container\">\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      \n      {accounts.length > 0 ? (\n        <div className=\"connected-wallet\">\n          <div className=\"account-info\">\n            <span className=\"account-label\">Connected Account:</span>\n            <span className=\"account-address\">{formatAddress(accounts[0])}</span>\n            <Button \n              variant=\"link\" \n              size=\"sm\"\n              onClick={() => navigator.clipboard.writeText(accounts[0])}\n              title=\"Copy address\"\n            >\n              ðŸ“‹\n            </Button>\n          </div>\n          <Button \n            variant=\"outline-danger\" \n            onClick={handleDisconnect}\n            size=\"sm\"\n          >\n            Disconnect\n          </Button>\n        </div>\n      ) : (\n        <Button \n          variant=\"primary\" \n          onClick={handleConnect}\n          disabled={isConnecting}\n        >\n          {isConnecting ? (\n            <>\n              <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n              <span className=\"ms-2\">Connecting...</span>\n            </>\n          ) : (\n            'Connect Wallet'\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default WalletConnect; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}