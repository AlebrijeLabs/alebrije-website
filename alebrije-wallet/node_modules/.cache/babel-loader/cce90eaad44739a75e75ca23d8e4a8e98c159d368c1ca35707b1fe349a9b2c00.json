{"ast":null,"code":"import { generatePlatformLogger, getDefaultLoggerOptions } from '@walletconnect/logger';\nexport const LoggerUtil = {\n  createLogger(onError) {\n    let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'error';\n    const loggerOptions = getDefaultLoggerOptions({\n      level\n    });\n    const {\n      logger\n    } = generatePlatformLogger({\n      opts: loggerOptions\n    });\n    logger.error = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      for (const arg of args) {\n        if (arg instanceof Error) {\n          onError(arg, ...args);\n          return;\n        }\n      }\n      onError(undefined, ...args);\n    };\n    return logger;\n  }\n};","map":{"version":3,"names":["generatePlatformLogger","getDefaultLoggerOptions","LoggerUtil","createLogger","onError","level","arguments","length","undefined","loggerOptions","logger","opts","error","_len","args","Array","_key","arg","Error"],"sources":["../../../src/LoggerUtil.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,sBAAsB,EAAEC,uBAAuB,QAAQ,uBAAuB;AAEvF,OAAO,MAAMC,UAAU,GAAG;EACxBC,YAAYA,CAACC,OAAoD,EAAiB;IAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,OAAO;IAChF,MAAMG,aAAa,GAAGR,uBAAuB,CAAC;MAC5CI;KACD,CAAC;IAEF,MAAM;MAAEK;IAAM,CAAE,GAAGV,sBAAsB,CAAC;MACxCW,IAAI,EAAEF;KACP,CAAC;IAEFC,MAAM,CAACE,KAAK,GAAG,YAAuB;MAAA,SAAAC,IAAA,GAAAP,SAAA,CAAAC,MAAA,EAAnBO,IAAe,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;QAAfF,IAAe,CAAAE,IAAA,IAAAV,SAAA,CAAAU,IAAA;MAAA;MAChC,KAAK,MAAMC,GAAG,IAAIH,IAAI,EAAE;QACtB,IAAIG,GAAG,YAAYC,KAAK,EAAE;UACxBd,OAAO,CAACa,GAAG,EAAE,GAAGH,IAAI,CAAC;UAErB;QACF;MACF;MAEAV,OAAO,CAACI,SAAS,EAAE,GAAGM,IAAI,CAAC;IAC7B,CAAC;IAED,OAAOJ,MAAM;EACf;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}