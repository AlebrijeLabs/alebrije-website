{"ast":null,"code":"async function fetchData() {\n  const response = await fetch(...arguments);\n  if (!response.ok) {\n    // Create error object and reject if not a 2xx response code\n    const err = new Error(`HTTP status code: ${response.status}`, {\n      cause: response\n    });\n    throw err;\n  }\n  return response;\n}\n// -- Utility --------------------------------------------------------------------\nexport class FetchUtil {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      clientId\n    } = _ref;\n    this.baseUrl = baseUrl;\n    this.clientId = clientId;\n  }\n  async get(_ref2) {\n    let {\n      headers,\n      signal,\n      cache,\n      ...args\n    } = _ref2;\n    const url = this.createUrl(args);\n    const response = await fetchData(url, {\n      method: 'GET',\n      headers,\n      signal,\n      cache\n    });\n    return response.json();\n  }\n  async getBlob(_ref3) {\n    let {\n      headers,\n      signal,\n      ...args\n    } = _ref3;\n    const url = this.createUrl(args);\n    const response = await fetchData(url, {\n      method: 'GET',\n      headers,\n      signal\n    });\n    return response.blob();\n  }\n  async post(_ref4) {\n    let {\n      body,\n      headers,\n      signal,\n      ...args\n    } = _ref4;\n    const url = this.createUrl(args);\n    const response = await fetchData(url, {\n      method: 'POST',\n      headers,\n      body: body ? JSON.stringify(body) : undefined,\n      signal\n    });\n    return response.json();\n  }\n  async put(_ref5) {\n    let {\n      body,\n      headers,\n      signal,\n      ...args\n    } = _ref5;\n    const url = this.createUrl(args);\n    const response = await fetchData(url, {\n      method: 'PUT',\n      headers,\n      body: body ? JSON.stringify(body) : undefined,\n      signal\n    });\n    return response.json();\n  }\n  async delete(_ref6) {\n    let {\n      body,\n      headers,\n      signal,\n      ...args\n    } = _ref6;\n    const url = this.createUrl(args);\n    const response = await fetchData(url, {\n      method: 'DELETE',\n      headers,\n      body: body ? JSON.stringify(body) : undefined,\n      signal\n    });\n    return response.json();\n  }\n  createUrl(_ref7) {\n    let {\n      path,\n      params\n    } = _ref7;\n    const url = new URL(path, this.baseUrl);\n    if (params) {\n      Object.entries(params).forEach(_ref8 => {\n        let [key, value] = _ref8;\n        if (value) {\n          url.searchParams.append(key, value);\n        }\n      });\n    }\n    if (this.clientId) {\n      url.searchParams.append('clientId', this.clientId);\n    }\n    return url;\n  }\n}","map":{"version":3,"names":["fetchData","response","fetch","arguments","ok","err","Error","status","cause","FetchUtil","constructor","_ref","baseUrl","clientId","get","_ref2","headers","signal","cache","args","url","createUrl","method","json","getBlob","_ref3","blob","post","_ref4","body","JSON","stringify","undefined","put","_ref5","delete","_ref6","_ref7","path","params","URL","Object","entries","forEach","_ref8","key","value","searchParams","append"],"sources":["../../../../src/utils/FetchUtil.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}