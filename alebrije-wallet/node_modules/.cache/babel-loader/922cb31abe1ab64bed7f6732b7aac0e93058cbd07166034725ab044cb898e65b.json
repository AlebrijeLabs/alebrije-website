{"ast":null,"code":"var _jsxFileName = \"/Users/rastavo/alebrije-project/alebrije-wallet/src/components/Notifications.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/components.css';\n\n/**\n * Notification types\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NotificationType = {\n  SUCCESS: 'success',\n  INFO: 'info',\n  WARNING: 'warning',\n  ERROR: 'error'\n};\n\n/**\n * Notification component that displays messages with different styling based on type\n */\nconst Notification = ({\n  type,\n  title,\n  message,\n  onClose,\n  autoClose = true,\n  duration = 5000\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(true);\n  useEffect(() => {\n    if (autoClose) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n        setTimeout(onClose, 300); // Allow animation to complete\n      }, duration);\n      return () => clearTimeout(timer);\n    }\n  }, [autoClose, duration, onClose]);\n  const handleClose = () => {\n    setIsVisible(false);\n    setTimeout(onClose, 300); // Allow animation to complete\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `notification notification-${type} ${isVisible ? 'show' : 'hide'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: handleClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n/**\n * Notifications manager component that displays multiple notifications\n */\n_s(Notification, \"m22S9IQwDfEe/fCJY7LYj8YPDMo=\");\n_c = Notification;\nconst Notifications = () => {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n\n  // Global method to add a notification\n  window.notifyUser = ({\n    type,\n    title,\n    message,\n    duration\n  }) => {\n    const id = Date.now();\n    setNotifications(prevNotifications => [...prevNotifications, {\n      id,\n      type,\n      title,\n      message,\n      duration\n    }]);\n    return id; // Return ID for potential manual removal\n  };\n\n  // Remove a notification\n  const removeNotification = id => {\n    setNotifications(prevNotifications => prevNotifications.filter(notification => notification.id !== id));\n  };\n\n  // Convenience methods for different notification types\n  window.notifySuccess = (title, message, duration = 5000) => window.notifyUser({\n    type: NotificationType.SUCCESS,\n    title,\n    message,\n    duration\n  });\n  window.notifyInfo = (title, message, duration = 5000) => window.notifyUser({\n    type: NotificationType.INFO,\n    title,\n    message,\n    duration\n  });\n  window.notifyWarning = (title, message, duration = 5000) => window.notifyUser({\n    type: NotificationType.WARNING,\n    title,\n    message,\n    duration\n  });\n  window.notifyError = (title, message, duration = 8000) => window.notifyUser({\n    type: NotificationType.ERROR,\n    title,\n    message,\n    duration\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-container\",\n    children: notifications.map(notification => /*#__PURE__*/_jsxDEV(Notification, {\n      type: notification.type,\n      title: notification.title,\n      message: notification.message,\n      duration: notification.duration,\n      onClose: () => removeNotification(notification.id)\n    }, notification.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s2(Notifications, \"/HH3zTd3BUNOgnlhD79kguSWbWM=\");\n_c2 = Notifications;\nexport default Notifications;\nvar _c, _c2;\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NotificationType","SUCCESS","INFO","WARNING","ERROR","Notification","type","title","message","onClose","autoClose","duration","_s","isVisible","setIsVisible","timer","setTimeout","clearTimeout","handleClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Notifications","_s2","notifications","setNotifications","window","notifyUser","id","Date","now","prevNotifications","removeNotification","filter","notification","notifySuccess","notifyInfo","notifyWarning","notifyError","map","_c2","$RefreshReg$"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/Notifications.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/components.css';\n\n/**\n * Notification types\n */\nexport const NotificationType = {\n  SUCCESS: 'success',\n  INFO: 'info',\n  WARNING: 'warning',\n  ERROR: 'error'\n};\n\n/**\n * Notification component that displays messages with different styling based on type\n */\nconst Notification = ({ type, title, message, onClose, autoClose = true, duration = 5000 }) => {\n  const [isVisible, setIsVisible] = useState(true);\n  \n  useEffect(() => {\n    if (autoClose) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n        setTimeout(onClose, 300); // Allow animation to complete\n      }, duration);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [autoClose, duration, onClose]);\n  \n  const handleClose = () => {\n    setIsVisible(false);\n    setTimeout(onClose, 300); // Allow animation to complete\n  };\n  \n  return (\n    <div className={`notification notification-${type} ${isVisible ? 'show' : 'hide'}`}>\n      <div className=\"notification-header\">\n        <h4>{title}</h4>\n        <button className=\"close-btn\" onClick={handleClose}>Ã—</button>\n      </div>\n      <div className=\"notification-body\">\n        <p>{message}</p>\n      </div>\n    </div>\n  );\n};\n\n/**\n * Notifications manager component that displays multiple notifications\n */\nconst Notifications = () => {\n  const [notifications, setNotifications] = useState([]);\n  \n  // Global method to add a notification\n  window.notifyUser = ({ type, title, message, duration }) => {\n    const id = Date.now();\n    setNotifications(prevNotifications => [\n      ...prevNotifications,\n      { id, type, title, message, duration }\n    ]);\n    \n    return id; // Return ID for potential manual removal\n  };\n  \n  // Remove a notification\n  const removeNotification = (id) => {\n    setNotifications(prevNotifications => \n      prevNotifications.filter(notification => notification.id !== id)\n    );\n  };\n  \n  // Convenience methods for different notification types\n  window.notifySuccess = (title, message, duration = 5000) => \n    window.notifyUser({ type: NotificationType.SUCCESS, title, message, duration });\n    \n  window.notifyInfo = (title, message, duration = 5000) => \n    window.notifyUser({ type: NotificationType.INFO, title, message, duration });\n    \n  window.notifyWarning = (title, message, duration = 5000) => \n    window.notifyUser({ type: NotificationType.WARNING, title, message, duration });\n    \n  window.notifyError = (title, message, duration = 8000) => \n    window.notifyUser({ type: NotificationType.ERROR, title, message, duration });\n  \n  return (\n    <div className=\"notifications-container\">\n      {notifications.map(notification => (\n        <Notification\n          key={notification.id}\n          type={notification.type}\n          title={notification.title}\n          message={notification.message}\n          duration={notification.duration}\n          onClose={() => removeNotification(notification.id)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Notifications; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}