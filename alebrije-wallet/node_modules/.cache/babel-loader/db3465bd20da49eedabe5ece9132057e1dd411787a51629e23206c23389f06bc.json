{"ast":null,"code":"var _jsxFileName = \"/Users/rastavo/alebrije-project/alebrije-wallet/src/components/BurnToken.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useWallet } from '../contexts/WalletContext';\nimport TokenService, { burnTokens } from '../services/token-service';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BurnToken = ({\n  tokenAddress: propTokenAddress\n}) => {\n  _s();\n  const {\n    connected,\n    currentAccount,\n    publicKey,\n    connection\n  } = useWallet();\n  const [tokenAddress, setTokenAddress] = useState(propTokenAddress || '');\n  const [amount, setAmount] = useState('');\n  const [tokenInfo, setTokenInfo] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [result, setResult] = useState('');\n\n  // Load token info and balance when token address changes\n  useEffect(() => {\n    if (connected && currentAccount && tokenAddress) {\n      loadTokenInfo();\n      loadBalance();\n    }\n  }, [connected, currentAccount, tokenAddress]);\n\n  // Also update when propTokenAddress changes\n  useEffect(() => {\n    if (propTokenAddress) {\n      setTokenAddress(propTokenAddress);\n    }\n  }, [propTokenAddress]);\n  const loadTokenInfo = async () => {\n    if (!tokenAddress) return;\n    try {\n      setError(null);\n      // Skip tokenInfo for native SOL\n      if (isNativeToken(tokenAddress)) {\n        setTokenInfo({\n          name: \"Solana\",\n          symbol: \"SOL\",\n          decimals: 9,\n          address: \"native\"\n        });\n        return;\n      }\n      const info = await TokenService.getTokenInfo(tokenAddress);\n      setTokenInfo(info);\n    } catch (err) {\n      console.error('Error loading token info:', err);\n      setTokenInfo(null);\n      setError(`Error loading token info: ${err.message}`);\n    }\n  };\n  const loadBalance = async () => {\n    if (!connected || !currentAccount || !tokenAddress) return;\n    try {\n      // Handle native SOL differently\n      if (isNativeToken(tokenAddress)) {\n        const balance = await TokenService.getNativeBalance(currentAccount);\n        setBalance(balance);\n        return;\n      }\n      const balance = await TokenService.getTokenBalance(tokenAddress, currentAccount);\n      setBalance(balance);\n    } catch (err) {\n      console.error('Error loading token balance:', err);\n      setBalance(null);\n      setError(`Error loading token balance: ${err.message}`);\n    }\n  };\n  const handleTokenAddressChange = e => {\n    setTokenAddress(e.target.value);\n    // Reset error when user changes the address\n    setError(null);\n  };\n  const isNativeToken = address => {\n    return address.toLowerCase() === 'native' || address === '11111111111111111111111111111111';\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!connected || !publicKey) {\n      setError('Wallet not connected');\n      return;\n    }\n    if (!tokenAddress) {\n      setError('Token address is required');\n      return;\n    }\n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Amount must be greater than 0');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      setResult('');\n      console.log('Burning token:', tokenAddress, parseFloat(amount));\n\n      // Use the wallet object from context\n      const walletAdapter = window.solana || window.solflare;\n      if (!walletAdapter) {\n        throw new Error('No compatible wallet found. Please use Phantom or Solflare wallet.');\n      }\n\n      // Create a wallet object for the burnTokens function\n      const wallet = {\n        publicKey: publicKey,\n        sendTransaction: async tx => {\n          var _window$solana;\n          // For Phantom\n          if ((_window$solana = window.solana) !== null && _window$solana !== void 0 && _window$solana.isPhantom) {\n            const signedTx = await window.solana.signTransaction(tx);\n            const signature = await connection.sendRawTransaction(signedTx.serialize());\n            return signature;\n          }\n          // For Solflare\n          else if (window.solflare) {\n            const signedTx = await window.solflare.signTransaction(tx);\n            const signature = await connection.sendRawTransaction(signedTx.serialize());\n            return signature;\n          }\n          throw new Error('No compatible wallet found');\n        }\n      };\n\n      // Use the exported burnTokens function\n      const signature = await burnTokens(wallet, tokenAddress, parseFloat(amount));\n      console.log('Burn result:', signature);\n      setSuccess(`Burn successful! ${amount} tokens permanently removed from circulation. Signature: ${signature}`);\n      setResult(`Token burn successful! Signature: ${signature}`);\n      setAmount('');\n\n      // Reload balance after burn\n      setTimeout(() => {\n        loadBalance();\n      }, 2000);\n    } catch (err) {\n      console.error('Burn error:', err);\n      setError(`Burn failed: ${err.message}`);\n      setResult(`Burn failed: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleMaxAmount = () => {\n    if (balance !== null) {\n      setAmount(balance.toString());\n    }\n  };\n\n  // For native SOL, make it work without token info\n  const canBurn = connected && (tokenInfo !== null || isNativeToken(tokenAddress)) && amount && parseFloat(amount) > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"burn-token-container p-4 border rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Burn Tokens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Warning:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), \" Burning tokens permanently removes them from circulation. This action cannot be undone.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Token Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: tokenAddress,\n          onChange: handleTokenAddressChange,\n          placeholder: \"Enter the mint address of the token you want to burn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), isNativeToken(tokenAddress) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info mt-2\",\n          children: \"Native SOL token selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), tokenInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: tokenInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"card-subtitle mb-2 text-muted\",\n            children: tokenInfo.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: \"Decimals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: tokenInfo.decimals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: \"Your Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-0\",\n              children: balance !== null ? `${balance} ${tokenInfo.symbol}` : 'Loading balance...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), !connected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        children: \"Please connect your wallet to burn tokens.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Amount to Burn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            placeholder: \"Enter amount to burn\",\n            step: \"any\",\n            min: \"0\",\n            disabled: !connected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-group-text\",\n            children: tokenInfo ? tokenInfo.symbol : 'Tokens'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-secondary\",\n            onClick: handleMaxAmount,\n            disabled: !connected || balance === null,\n            children: \"Max\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mb-3\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success mb-3\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-danger w-100 mb-3\",\n        disabled: loading || !connected || !canBurn,\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner-border spinner-border-sm me-2\",\n            role: \"status\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), \"Processing...\"]\n        }, void 0, true) : `Burn ${tokenInfo ? tokenInfo.symbol : 'Tokens'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(BurnToken, \"rTcPeQD0DhNEjxkEEaJa4kXAdbE=\", false, function () {\n  return [useWallet];\n});\n_c = BurnToken;\nexport default BurnToken;\nvar _c;\n$RefreshReg$(_c, \"BurnToken\");","map":{"version":3,"names":["React","useState","useEffect","useWallet","TokenService","burnTokens","jsxDEV","_jsxDEV","Fragment","_Fragment","BurnToken","tokenAddress","propTokenAddress","_s","connected","currentAccount","publicKey","connection","setTokenAddress","amount","setAmount","tokenInfo","setTokenInfo","balance","setBalance","loading","setLoading","error","setError","success","setSuccess","result","setResult","loadTokenInfo","loadBalance","isNativeToken","name","symbol","decimals","address","info","getTokenInfo","err","console","message","getNativeBalance","getTokenBalance","handleTokenAddressChange","e","target","value","toLowerCase","handleSubmit","preventDefault","parseFloat","log","walletAdapter","window","solana","solflare","Error","wallet","sendTransaction","tx","_window$solana","isPhantom","signedTx","signTransaction","signature","sendRawTransaction","serialize","setTimeout","handleMaxAmount","toString","canBurn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","step","min","disabled","onClick","role","_c","$RefreshReg$"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/BurnToken.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useWallet } from '../contexts/WalletContext';\nimport TokenService, { burnTokens } from '../services/token-service';\n\nconst BurnToken = ({ tokenAddress: propTokenAddress }) => {\n  const { connected, currentAccount, publicKey, connection } = useWallet();\n  const [tokenAddress, setTokenAddress] = useState(propTokenAddress || '');\n  const [amount, setAmount] = useState('');\n  const [tokenInfo, setTokenInfo] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [result, setResult] = useState('');\n\n  // Load token info and balance when token address changes\n  useEffect(() => {\n    if (connected && currentAccount && tokenAddress) {\n      loadTokenInfo();\n      loadBalance();\n    }\n  }, [connected, currentAccount, tokenAddress]);\n\n  // Also update when propTokenAddress changes\n  useEffect(() => {\n    if (propTokenAddress) {\n      setTokenAddress(propTokenAddress);\n    }\n  }, [propTokenAddress]);\n\n  const loadTokenInfo = async () => {\n    if (!tokenAddress) return;\n    \n    try {\n      setError(null);\n      // Skip tokenInfo for native SOL\n      if (isNativeToken(tokenAddress)) {\n        setTokenInfo({\n          name: \"Solana\",\n          symbol: \"SOL\",\n          decimals: 9,\n          address: \"native\"\n        });\n        return;\n      }\n      \n      const info = await TokenService.getTokenInfo(tokenAddress);\n      setTokenInfo(info);\n    } catch (err) {\n      console.error('Error loading token info:', err);\n      setTokenInfo(null);\n      setError(`Error loading token info: ${err.message}`);\n    }\n  };\n\n  const loadBalance = async () => {\n    if (!connected || !currentAccount || !tokenAddress) return;\n    \n    try {\n      // Handle native SOL differently\n      if (isNativeToken(tokenAddress)) {\n        const balance = await TokenService.getNativeBalance(currentAccount);\n        setBalance(balance);\n        return;\n      }\n      \n      const balance = await TokenService.getTokenBalance(tokenAddress, currentAccount);\n      setBalance(balance);\n    } catch (err) {\n      console.error('Error loading token balance:', err);\n      setBalance(null);\n      setError(`Error loading token balance: ${err.message}`);\n    }\n  };\n\n  const handleTokenAddressChange = (e) => {\n    setTokenAddress(e.target.value);\n    // Reset error when user changes the address\n    setError(null);\n  };\n\n  const isNativeToken = (address) => {\n    return address.toLowerCase() === 'native' || address === '11111111111111111111111111111111';\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!connected || !publicKey) {\n      setError('Wallet not connected');\n      return;\n    }\n    \n    if (!tokenAddress) {\n      setError('Token address is required');\n      return;\n    }\n    \n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Amount must be greater than 0');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      setResult('');\n      \n      console.log('Burning token:', tokenAddress, parseFloat(amount));\n      \n      // Use the wallet object from context\n      const walletAdapter = window.solana || window.solflare;\n      \n      if (!walletAdapter) {\n        throw new Error('No compatible wallet found. Please use Phantom or Solflare wallet.');\n      }\n\n      // Create a wallet object for the burnTokens function\n      const wallet = {\n        publicKey: publicKey,\n        sendTransaction: async (tx) => {\n          // For Phantom\n          if (window.solana?.isPhantom) {\n            const signedTx = await window.solana.signTransaction(tx);\n            const signature = await connection.sendRawTransaction(signedTx.serialize());\n            return signature;\n          }\n          // For Solflare\n          else if (window.solflare) {\n            const signedTx = await window.solflare.signTransaction(tx);\n            const signature = await connection.sendRawTransaction(signedTx.serialize());\n            return signature;\n          }\n          throw new Error('No compatible wallet found');\n        }\n      };\n      \n      // Use the exported burnTokens function\n      const signature = await burnTokens(\n        wallet,\n        tokenAddress,\n        parseFloat(amount)\n      );\n      \n      console.log('Burn result:', signature);\n      \n      setSuccess(`Burn successful! ${amount} tokens permanently removed from circulation. Signature: ${signature}`);\n      setResult(`Token burn successful! Signature: ${signature}`);\n      setAmount('');\n      \n      // Reload balance after burn\n      setTimeout(() => {\n        loadBalance();\n      }, 2000);\n    } catch (err) {\n      console.error('Burn error:', err);\n      setError(`Burn failed: ${err.message}`);\n      setResult(`Burn failed: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMaxAmount = () => {\n    if (balance !== null) {\n      setAmount(balance.toString());\n    }\n  };\n\n  // For native SOL, make it work without token info\n  const canBurn = connected && ((tokenInfo !== null) || isNativeToken(tokenAddress)) && amount && parseFloat(amount) > 0;\n\n  return (\n    <div className=\"burn-token-container p-4 border rounded\">\n      <h3>Burn Tokens</h3>\n      <div className=\"alert alert-warning\">\n        <strong>Warning:</strong> Burning tokens permanently removes them from circulation. This action cannot be undone.\n      </div>\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Token Address</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            value={tokenAddress} \n            onChange={handleTokenAddressChange}\n            placeholder=\"Enter the mint address of the token you want to burn\"\n          />\n          {isNativeToken(tokenAddress) && (\n            <div className=\"alert alert-info mt-2\">\n              Native SOL token selected\n            </div>\n          )}\n        </div>\n        \n        {tokenInfo && (\n          <div className=\"card mb-3\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{tokenInfo.name}</h5>\n              <h6 className=\"card-subtitle mb-2 text-muted\">{tokenInfo.symbol}</h6>\n              <div className=\"mb-2\">\n                <small className=\"text-muted\">Decimals</small>\n                <p>{tokenInfo.decimals}</p>\n              </div>\n              <div>\n                <small className=\"text-muted\">Your Balance</small>\n                <p className=\"mb-0\">\n                  {balance !== null ? (\n                    `${balance} ${tokenInfo.symbol}`\n                  ) : (\n                    'Loading balance...'\n                  )}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {!connected && (\n          <div className=\"alert alert-warning\">\n            Please connect your wallet to burn tokens.\n          </div>\n        )}\n        \n        <div className=\"mb-3\">\n          <label className=\"form-label\">Amount to Burn</label>\n          <div className=\"input-group\">\n            <input \n              type=\"number\" \n              className=\"form-control\" \n              value={amount} \n              onChange={(e) => setAmount(e.target.value)}\n              placeholder=\"Enter amount to burn\"\n              step=\"any\"\n              min=\"0\"\n              disabled={!connected}\n            />\n            <span className=\"input-group-text\">\n              {tokenInfo ? tokenInfo.symbol : 'Tokens'}\n            </span>\n            <button \n              type=\"button\" \n              className=\"btn btn-outline-secondary\" \n              onClick={handleMaxAmount}\n              disabled={!connected || balance === null}\n            >\n              Max\n            </button>\n          </div>\n        </div>\n        \n        {error && (\n          <div className=\"alert alert-danger mb-3\">\n            {error}\n          </div>\n        )}\n        \n        {success && (\n          <div className=\"alert alert-success mb-3\">\n            {success}\n          </div>\n        )}\n        \n        <button\n          type=\"submit\"\n          className=\"btn btn-danger w-100 mb-3\"\n          disabled={loading || !connected || !canBurn}\n        >\n          {loading ? (\n            <>\n              <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n              Processing...\n            </>\n          ) : (\n            `Burn ${tokenInfo ? tokenInfo.symbol : 'Tokens'}`\n          )}\n        </button>\n      </form>\n      {result && <div className=\"result\">{result}</div>}\n    </div>\n  );\n};\n\nexport default BurnToken; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}