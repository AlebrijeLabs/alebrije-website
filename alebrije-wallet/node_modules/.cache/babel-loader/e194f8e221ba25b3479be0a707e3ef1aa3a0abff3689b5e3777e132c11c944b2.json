{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Card,Table,Badge,Spinner,Button}from'react-bootstrap';import TransactionHistoryService from'../services/transaction-history-service';import WalletService from'../services/wallet-service';import{ErrorDisplay}from'./ErrorDisplay';import{formatDistance}from'date-fns';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TransactionHistory=_ref=>{let{tokenName}=_ref;const[transactions,setTransactions]=useState([]);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const loadTransactions=async()=>{if(!WalletService.isConnected()){setError(new Error('Wallet not connected'));return;}setIsLoading(true);setError(null);try{await TransactionHistoryService.initialize(tokenName);const txHistory=await TransactionHistoryService.fetchTransactionHistory(tokenName);setTransactions(txHistory);}catch(err){setError(err);console.error('Failed to load transactions:',err);}finally{setIsLoading(false);}};useEffect(()=>{if(WalletService.isConnected()){loadTransactions();}return()=>{TransactionHistoryService.cleanup();};},[tokenName]);const formatAddress=address=>{if(!address)return'';return`${address.substring(0,6)}...${address.substring(address.length-4)}`;};const formatTime=timestamp=>{if(!timestamp)return'';return formatDistance(new Date(timestamp),new Date(),{addSuffix:true});};return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Transaction History\"}),error&&/*#__PURE__*/_jsx(ErrorDisplay,{error:error,onDismiss:()=>setError(null),onRetry:loadTransactions}),isLoading?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center p-4\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2\",children:\"Loading transactions...\"})]}):transactions.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-muted p-4\",children:\"No transactions found\"}):/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(Table,{hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"From/To\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:transactions.map(tx=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:tx.isIncoming?'success':'primary',children:tx.isIncoming?'Received':'Sent'})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"span\",{className:tx.isIncoming?'text-success':'text-primary',children:[tx.isIncoming?'+':'-',tx.value]})}),/*#__PURE__*/_jsx(\"td\",{children:tx.isIncoming?/*#__PURE__*/_jsxs(\"span\",{title:tx.from,children:[\"From: \",formatAddress(tx.from)]}):/*#__PURE__*/_jsxs(\"span\",{title:tx.to,children:[\"To: \",formatAddress(tx.to)]})}),/*#__PURE__*/_jsx(\"td\",{children:formatTime(tx.timestamp)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:tx.status==='confirmed'?'success':tx.status==='pending'?'warning':'danger',children:tx.status==='confirmed'?'Confirmed':tx.status==='pending'?'Pending':'Failed'})})]},tx.hash))})]})})]})});};export default TransactionHistory;","map":{"version":3,"names":["React","useState","useEffect","Card","Table","Badge","Spinner","Button","TransactionHistoryService","WalletService","ErrorDisplay","formatDistance","jsx","_jsx","jsxs","_jsxs","TransactionHistory","_ref","tokenName","transactions","setTransactions","isLoading","setIsLoading","error","setError","loadTransactions","isConnected","Error","initialize","txHistory","fetchTransactionHistory","err","console","cleanup","formatAddress","address","substring","length","formatTime","timestamp","Date","addSuffix","children","Body","Title","onDismiss","onRetry","className","animation","hover","map","tx","bg","isIncoming","value","title","from","to","status","hash"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/TransactionHistory.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Table, Badge, Spinner, Button } from 'react-bootstrap';\nimport TransactionHistoryService from '../services/transaction-history-service';\nimport WalletService from '../services/wallet-service';\nimport { ErrorDisplay } from './ErrorDisplay';\nimport { formatDistance } from 'date-fns';\n\nconst TransactionHistory = ({ tokenName }) => {\n  const [transactions, setTransactions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  const loadTransactions = async () => {\n    if (!WalletService.isConnected()) {\n      setError(new Error('Wallet not connected'));\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      await TransactionHistoryService.initialize(tokenName);\n      const txHistory = await TransactionHistoryService.fetchTransactionHistory(tokenName);\n      setTransactions(txHistory);\n    } catch (err) {\n      setError(err);\n      console.error('Failed to load transactions:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  useEffect(() => {\n    if (WalletService.isConnected()) {\n      loadTransactions();\n    }\n    \n    return () => {\n      TransactionHistoryService.cleanup();\n    };\n  }, [tokenName]);\n  \n  const formatAddress = (address) => {\n    if (!address) return '';\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n  \n  const formatTime = (timestamp) => {\n    if (!timestamp) return '';\n    return formatDistance(new Date(timestamp), new Date(), { addSuffix: true });\n  };\n  \n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>Transaction History</Card.Title>\n        \n        {error && (\n          <ErrorDisplay \n            error={error} \n            onDismiss={() => setError(null)} \n            onRetry={loadTransactions} \n          />\n        )}\n        \n        {isLoading ? (\n          <div className=\"text-center p-4\">\n            <Spinner animation=\"border\" />\n            <p className=\"mt-2\">Loading transactions...</p>\n          </div>\n        ) : transactions.length === 0 ? (\n          <div className=\"text-center text-muted p-4\">\n            No transactions found\n          </div>\n        ) : (\n          <div className=\"table-responsive\">\n            <Table hover>\n              <thead>\n                <tr>\n                  <th>Type</th>\n                  <th>Amount</th>\n                  <th>From/To</th>\n                  <th>Time</th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {transactions.map((tx) => (\n                  <tr key={tx.hash}>\n                    <td>\n                      <Badge bg={tx.isIncoming ? 'success' : 'primary'}>\n                        {tx.isIncoming ? 'Received' : 'Sent'}\n                      </Badge>\n                    </td>\n                    <td>\n                      <span className={tx.isIncoming ? 'text-success' : 'text-primary'}>\n                        {tx.isIncoming ? '+' : '-'}{tx.value}\n                      </span>\n                    </td>\n                    <td>\n                      {tx.isIncoming ? (\n                        <span title={tx.from}>From: {formatAddress(tx.from)}</span>\n                      ) : (\n                        <span title={tx.to}>To: {formatAddress(tx.to)}</span>\n                      )}\n                    </td>\n                    <td>{formatTime(tx.timestamp)}</td>\n                    <td>\n                      <Badge \n                        bg={\n                          tx.status === 'confirmed' ? 'success' : \n                          tx.status === 'pending' ? 'warning' : \n                          'danger'\n                        }\n                      >\n                        {tx.status === 'confirmed' ? 'Confirmed' : \n                         tx.status === 'pending' ? 'Pending' : \n                         'Failed'}\n                      </Badge>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TransactionHistory; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}