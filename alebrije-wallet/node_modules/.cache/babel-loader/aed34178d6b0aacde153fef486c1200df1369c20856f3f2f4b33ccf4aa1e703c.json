{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Button,Alert,Spinner}from'react-bootstrap';import WalletService from'../services/wallet-service';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const WalletConnect=()=>{const[isConnecting,setIsConnecting]=useState(false);const[error,setError]=useState(null);const[accounts,setAccounts]=useState([]);useEffect(()=>{// Check if already connected\nif(WalletService.isConnected()){setAccounts(WalletService.getAccounts());}},[]);const handleConnect=async()=>{setIsConnecting(true);setError(null);try{const success=await WalletService.connect();if(success){setAccounts(WalletService.getAccounts());}else{setError('Failed to connect wallet');}}catch(err){setError(err.message||'An error occurred while connecting');console.error('Connection error:',err);}finally{setIsConnecting(false);}};const handleDisconnect=async()=>{await WalletService.disconnect();setAccounts([]);};const formatAddress=address=>{if(!address)return'';return`${address.substring(0,6)}...${address.substring(address.length-4)}`;};return/*#__PURE__*/_jsxs(\"div\",{className:\"wallet-connect-container\",children:[error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),accounts.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"connected-wallet\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"account-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"account-label\",children:\"Connected Account:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"account-address\",children:formatAddress(accounts[0])}),/*#__PURE__*/_jsx(Button,{variant:\"link\",size:\"sm\",onClick:()=>navigator.clipboard.writeText(accounts[0]),title:\"Copy address\",children:\"\\uD83D\\uDCCB\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"outline-danger\",onClick:handleDisconnect,size:\"sm\",children:\"Disconnect\"})]}):/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleConnect,disabled:isConnecting,children:isConnecting?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{as:\"span\",animation:\"border\",size:\"sm\",role:\"status\",\"aria-hidden\":\"true\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ms-2\",children:\"Connecting...\"})]}):'Connect Wallet'})]});};export default WalletConnect;","map":{"version":3,"names":["React","useState","useEffect","Button","Alert","Spinner","WalletService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","WalletConnect","isConnecting","setIsConnecting","error","setError","accounts","setAccounts","isConnected","getAccounts","handleConnect","success","connect","err","message","console","handleDisconnect","disconnect","formatAddress","address","substring","length","className","children","variant","size","onClick","navigator","clipboard","writeText","title","disabled","as","animation","role"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/WalletConnect.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Alert, Spinner } from 'react-bootstrap';\nimport WalletService from '../services/wallet-service';\n\nconst WalletConnect = () => {\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  \n  useEffect(() => {\n    // Check if already connected\n    if (WalletService.isConnected()) {\n      setAccounts(WalletService.getAccounts());\n    }\n  }, []);\n  \n  const handleConnect = async () => {\n    setIsConnecting(true);\n    setError(null);\n    \n    try {\n      const success = await WalletService.connect();\n      if (success) {\n        setAccounts(WalletService.getAccounts());\n      } else {\n        setError('Failed to connect wallet');\n      }\n    } catch (err) {\n      setError(err.message || 'An error occurred while connecting');\n      console.error('Connection error:', err);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  \n  const handleDisconnect = async () => {\n    await WalletService.disconnect();\n    setAccounts([]);\n  };\n  \n  const formatAddress = (address) => {\n    if (!address) return '';\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n  \n  return (\n    <div className=\"wallet-connect-container\">\n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      \n      {accounts.length > 0 ? (\n        <div className=\"connected-wallet\">\n          <div className=\"account-info\">\n            <span className=\"account-label\">Connected Account:</span>\n            <span className=\"account-address\">{formatAddress(accounts[0])}</span>\n            <Button \n              variant=\"link\" \n              size=\"sm\"\n              onClick={() => navigator.clipboard.writeText(accounts[0])}\n              title=\"Copy address\"\n            >\n              ðŸ“‹\n            </Button>\n          </div>\n          <Button \n            variant=\"outline-danger\" \n            onClick={handleDisconnect}\n            size=\"sm\"\n          >\n            Disconnect\n          </Button>\n        </div>\n      ) : (\n        <Button \n          variant=\"primary\" \n          onClick={handleConnect}\n          disabled={isConnecting}\n        >\n          {isConnecting ? (\n            <>\n              <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n              <span className=\"ms-2\">Connecting...</span>\n            </>\n          ) : (\n            'Connect Wallet'\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default WalletConnect; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}