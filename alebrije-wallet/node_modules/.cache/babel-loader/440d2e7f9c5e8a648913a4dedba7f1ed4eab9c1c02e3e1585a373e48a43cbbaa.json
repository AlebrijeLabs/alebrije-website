{"ast":null,"code":"var _jsxFileName = \"/Users/rastavo/alebrije-project/alebrije-wallet/src/components/TokenTransfer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useWallet } from '../contexts/WalletContext';\nimport TokenService from '../services/token-service';\nimport { PublicKey } from '@solana/web3.js';\n\n// Popular tokens on Solana with their addresses\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst POPULAR_TOKENS = {\n  'SOL (Native)': 'native',\n  'USDC': 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n  'USDT': 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\n  'Bonk': 'DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263',\n  'Raydium': '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  'Serum': 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt'\n  // Add more popular tokens as needed\n};\nconst TokenTransfer = ({\n  tokenAddress: propTokenAddress\n}) => {\n  _s();\n  const {\n    connected,\n    currentAccount\n  } = useWallet();\n  const [tokenAddress, setTokenAddress] = useState(propTokenAddress || 'native'); // Default to native SOL\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [tokenInfo, setTokenInfo] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [selectedToken, setSelectedToken] = useState('SOL (Native)');\n\n  // Load token info and balance when token address changes\n  useEffect(() => {\n    if (connected && currentAccount && tokenAddress) {\n      loadTokenInfo();\n      loadBalance();\n    }\n  }, [connected, currentAccount, tokenAddress]);\n\n  // Load native SOL balance\n  useEffect(() => {\n    if (connected && currentAccount) {\n      loadNativeBalance();\n    }\n  }, [connected, currentAccount]);\n  const loadTokenInfo = async () => {\n    if (tokenAddress === 'native') {\n      setTokenInfo({\n        address: 'native',\n        name: 'Solana',\n        symbol: 'SOL',\n        decimals: 9\n      });\n      return;\n    }\n    try {\n      const info = await TokenService.getTokenInfo(tokenAddress);\n      setTokenInfo(info);\n    } catch (err) {\n      console.error('Error loading token info:', err);\n      setTokenInfo(null);\n    }\n  };\n  const loadBalance = async () => {\n    if (!connected || !currentAccount || !tokenAddress) return;\n    try {\n      if (tokenAddress === 'native') {\n        loadNativeBalance();\n        return;\n      }\n      const balance = await TokenService.getTokenBalance(tokenAddress, currentAccount);\n      setBalance(balance);\n    } catch (err) {\n      console.error('Error loading token balance:', err);\n      setBalance(null);\n    }\n  };\n  const loadNativeBalance = async () => {\n    if (!connected || !currentAccount) return;\n    try {\n      const balance = await TokenService.getNativeBalance(currentAccount);\n      if (tokenAddress === 'native') {\n        setBalance(balance);\n      }\n    } catch (err) {\n      console.error('Error loading native balance:', err);\n      if (tokenAddress === 'native') {\n        setBalance(null);\n      }\n    }\n  };\n  const handleTokenSelect = e => {\n    const selected = e.target.value;\n    setSelectedToken(selected);\n    setTokenAddress(POPULAR_TOKENS[selected]);\n  };\n  const handleTokenAddressChange = e => {\n    setTokenAddress(e.target.value);\n    setSelectedToken('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!connected || !currentAccount) {\n      setError('Wallet not connected');\n      return;\n    }\n    if (!tokenAddress) {\n      setError('Token address is required');\n      return;\n    }\n    if (!recipient) {\n      setError('Recipient address is required');\n      return;\n    }\n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Amount must be greater than 0');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      let result;\n      if (tokenAddress === 'native') {\n        result = await TokenService.transferNativeSOL(currentAccount, recipient, parseFloat(amount));\n      } else {\n        result = await TokenService.transferToken(tokenAddress, currentAccount, recipient, parseFloat(amount));\n      }\n      setSuccess(`Transaction successful! Signature: ${result.signature}`);\n      setAmount('');\n\n      // Reload balance after transfer\n      setTimeout(() => {\n        loadBalance();\n      }, 2000);\n    } catch (err) {\n      console.error('Transfer error:', err);\n      setError(`Transfer failed: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleMaxAmount = () => {\n    if (balance !== null) {\n      // Leave a small amount for transaction fees if it's SOL\n      if (tokenAddress === 'native' && balance > 0.01) {\n        setAmount((balance - 0.01).toFixed(9));\n      } else {\n        setAmount(balance.toString());\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"token-transfer-container p-4 border rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transfer Tokens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Select Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select mb-2\",\n          value: selectedToken,\n          onChange: handleTokenSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: selectedToken !== '',\n            children: \"Select a token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), Object.keys(POPULAR_TOKENS).map(token => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: token,\n            children: token\n          }, token, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Or Enter Token Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: tokenAddress,\n          onChange: handleTokenAddressChange,\n          placeholder: \"Enter the mint address of the token you want to transfer, or select from popular tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), tokenInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: tokenInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"card-subtitle mb-2 text-muted\",\n            children: tokenInfo.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: \"Decimals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: tokenInfo.decimals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: \"Your Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-0\",\n              children: balance !== null ? `${balance} ${tokenInfo.symbol}` : 'Loading balance...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), !connected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        children: \"Please connect your wallet to transfer tokens.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Recipient Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: recipient,\n          onChange: e => setRecipient(e.target.value),\n          placeholder: \"Enter the recipient's wallet address\",\n          disabled: !connected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            placeholder: \"Enter amount to transfer\",\n            step: \"any\",\n            min: \"0\",\n            disabled: !connected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-group-text\",\n            children: tokenInfo ? tokenInfo.symbol : 'Tokens'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-secondary\",\n            onClick: handleMaxAmount,\n            disabled: !connected || balance === null,\n            children: \"Max\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger mb-3\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success mb-3\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary w-100\",\n        disabled: loading || !connected || !tokenInfo || !recipient || !amount,\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner-border spinner-border-sm me-2\",\n            role: \"status\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), \"Processing...\"]\n        }, void 0, true) : `Transfer ${tokenInfo ? tokenInfo.symbol : 'Tokens'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenTransfer, \"qS700Ax9seqDIg64lQuj5RrftfM=\", false, function () {\n  return [useWallet];\n});\n_c = TokenTransfer;\nexport default TokenTransfer;\nvar _c;\n$RefreshReg$(_c, \"TokenTransfer\");","map":{"version":3,"names":["React","useState","useEffect","useWallet","TokenService","PublicKey","jsxDEV","_jsxDEV","Fragment","_Fragment","POPULAR_TOKENS","TokenTransfer","tokenAddress","propTokenAddress","_s","connected","currentAccount","setTokenAddress","recipient","setRecipient","amount","setAmount","tokenInfo","setTokenInfo","balance","setBalance","loading","setLoading","error","setError","success","setSuccess","selectedToken","setSelectedToken","loadTokenInfo","loadBalance","loadNativeBalance","address","name","symbol","decimals","info","getTokenInfo","err","console","getTokenBalance","getNativeBalance","handleTokenSelect","e","selected","target","value","handleTokenAddressChange","handleSubmit","preventDefault","parseFloat","result","transferNativeSOL","transferToken","signature","setTimeout","message","handleMaxAmount","toFixed","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","disabled","Object","keys","map","token","type","placeholder","step","min","onClick","role","_c","$RefreshReg$"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/TokenTransfer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useWallet } from '../contexts/WalletContext';\nimport TokenService from '../services/token-service';\nimport { PublicKey } from '@solana/web3.js';\n\n// Popular tokens on Solana with their addresses\nconst POPULAR_TOKENS = {\n  'SOL (Native)': 'native',\n  'USDC': 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n  'USDT': 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\n  'Bonk': 'DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263',\n  'Raydium': '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  'Serum': 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\n  // Add more popular tokens as needed\n};\n\nconst TokenTransfer = ({ tokenAddress: propTokenAddress }) => {\n  const { connected, currentAccount } = useWallet();\n  const [tokenAddress, setTokenAddress] = useState(propTokenAddress || 'native'); // Default to native SOL\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [tokenInfo, setTokenInfo] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [selectedToken, setSelectedToken] = useState('SOL (Native)');\n\n  // Load token info and balance when token address changes\n  useEffect(() => {\n    if (connected && currentAccount && tokenAddress) {\n      loadTokenInfo();\n      loadBalance();\n    }\n  }, [connected, currentAccount, tokenAddress]);\n\n  // Load native SOL balance\n  useEffect(() => {\n    if (connected && currentAccount) {\n      loadNativeBalance();\n    }\n  }, [connected, currentAccount]);\n\n  const loadTokenInfo = async () => {\n    if (tokenAddress === 'native') {\n      setTokenInfo({\n        address: 'native',\n        name: 'Solana',\n        symbol: 'SOL',\n        decimals: 9\n      });\n      return;\n    }\n    \n    try {\n      const info = await TokenService.getTokenInfo(tokenAddress);\n      setTokenInfo(info);\n    } catch (err) {\n      console.error('Error loading token info:', err);\n      setTokenInfo(null);\n    }\n  };\n\n  const loadBalance = async () => {\n    if (!connected || !currentAccount || !tokenAddress) return;\n    \n    try {\n      if (tokenAddress === 'native') {\n        loadNativeBalance();\n        return;\n      }\n      \n      const balance = await TokenService.getTokenBalance(tokenAddress, currentAccount);\n      setBalance(balance);\n    } catch (err) {\n      console.error('Error loading token balance:', err);\n      setBalance(null);\n    }\n  };\n\n  const loadNativeBalance = async () => {\n    if (!connected || !currentAccount) return;\n    \n    try {\n      const balance = await TokenService.getNativeBalance(currentAccount);\n      if (tokenAddress === 'native') {\n        setBalance(balance);\n      }\n    } catch (err) {\n      console.error('Error loading native balance:', err);\n      if (tokenAddress === 'native') {\n        setBalance(null);\n      }\n    }\n  };\n\n  const handleTokenSelect = (e) => {\n    const selected = e.target.value;\n    setSelectedToken(selected);\n    setTokenAddress(POPULAR_TOKENS[selected]);\n  };\n\n  const handleTokenAddressChange = (e) => {\n    setTokenAddress(e.target.value);\n    setSelectedToken('');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!connected || !currentAccount) {\n      setError('Wallet not connected');\n      return;\n    }\n    \n    if (!tokenAddress) {\n      setError('Token address is required');\n      return;\n    }\n    \n    if (!recipient) {\n      setError('Recipient address is required');\n      return;\n    }\n    \n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Amount must be greater than 0');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      \n      let result;\n      if (tokenAddress === 'native') {\n        result = await TokenService.transferNativeSOL(\n          currentAccount,\n          recipient,\n          parseFloat(amount)\n        );\n      } else {\n        result = await TokenService.transferToken(\n          tokenAddress,\n          currentAccount,\n          recipient,\n          parseFloat(amount)\n        );\n      }\n      \n      setSuccess(`Transaction successful! Signature: ${result.signature}`);\n      setAmount('');\n      \n      // Reload balance after transfer\n      setTimeout(() => {\n        loadBalance();\n      }, 2000);\n    } catch (err) {\n      console.error('Transfer error:', err);\n      setError(`Transfer failed: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMaxAmount = () => {\n    if (balance !== null) {\n      // Leave a small amount for transaction fees if it's SOL\n      if (tokenAddress === 'native' && balance > 0.01) {\n        setAmount((balance - 0.01).toFixed(9));\n      } else {\n        setAmount(balance.toString());\n      }\n    }\n  };\n\n  return (\n    <div className=\"token-transfer-container p-4 border rounded\">\n      <h3>Transfer Tokens</h3>\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Select Token</label>\n          <select \n            className=\"form-select mb-2\" \n            value={selectedToken} \n            onChange={handleTokenSelect}\n          >\n            <option value=\"\" disabled={selectedToken !== ''}>Select a token</option>\n            {Object.keys(POPULAR_TOKENS).map(token => (\n              <option key={token} value={token}>{token}</option>\n            ))}\n          </select>\n          \n          <label className=\"form-label\">Or Enter Token Address</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            value={tokenAddress} \n            onChange={handleTokenAddressChange}\n            placeholder=\"Enter the mint address of the token you want to transfer, or select from popular tokens\"\n          />\n        </div>\n        \n        {tokenInfo && (\n          <div className=\"card mb-3\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{tokenInfo.name}</h5>\n              <h6 className=\"card-subtitle mb-2 text-muted\">{tokenInfo.symbol}</h6>\n              <div className=\"mb-2\">\n                <small className=\"text-muted\">Decimals</small>\n                <p>{tokenInfo.decimals}</p>\n              </div>\n              <div>\n                <small className=\"text-muted\">Your Balance</small>\n                <p className=\"mb-0\">\n                  {balance !== null ? (\n                    `${balance} ${tokenInfo.symbol}`\n                  ) : (\n                    'Loading balance...'\n                  )}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {!connected && (\n          <div className=\"alert alert-warning\">\n            Please connect your wallet to transfer tokens.\n          </div>\n        )}\n        \n        <div className=\"mb-3\">\n          <label className=\"form-label\">Recipient Address</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            value={recipient} \n            onChange={(e) => setRecipient(e.target.value)}\n            placeholder=\"Enter the recipient's wallet address\"\n            disabled={!connected}\n          />\n        </div>\n        \n        <div className=\"mb-3\">\n          <label className=\"form-label\">Amount</label>\n          <div className=\"input-group\">\n            <input \n              type=\"number\" \n              className=\"form-control\" \n              value={amount} \n              onChange={(e) => setAmount(e.target.value)}\n              placeholder=\"Enter amount to transfer\"\n              step=\"any\"\n              min=\"0\"\n              disabled={!connected}\n            />\n            <span className=\"input-group-text\">\n              {tokenInfo ? tokenInfo.symbol : 'Tokens'}\n            </span>\n            <button \n              type=\"button\" \n              className=\"btn btn-outline-secondary\" \n              onClick={handleMaxAmount}\n              disabled={!connected || balance === null}\n            >\n              Max\n            </button>\n          </div>\n        </div>\n        \n        {error && (\n          <div className=\"alert alert-danger mb-3\">\n            {error}\n          </div>\n        )}\n        \n        {success && (\n          <div className=\"alert alert-success mb-3\">\n            {success}\n          </div>\n        )}\n        \n        <button\n          type=\"submit\"\n          className=\"btn btn-primary w-100\"\n          disabled={loading || !connected || !tokenInfo || !recipient || !amount}\n        >\n          {loading ? (\n            <>\n              <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n              Processing...\n            </>\n          ) : (\n            `Transfer ${tokenInfo ? tokenInfo.symbol : 'Tokens'}`\n          )}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default TokenTransfer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}