{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useWallet}from'../contexts/WalletContext';import TokenService from'../services/token-service';import{PublicKey}from'@solana/web3.js';// Popular tokens on Solana with their addresses\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const POPULAR_TOKENS={'SOL (Native)':'native','USDC':'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v','USDT':'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB','Bonk':'DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263','Raydium':'4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R','Serum':'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt'// Add more popular tokens as needed\n};const TokenTransfer=_ref=>{let{tokenAddress:propTokenAddress}=_ref;const{connected,currentAccount}=useWallet();const[tokenAddress,setTokenAddress]=useState(propTokenAddress||'native');// Default to native SOL\nconst[recipient,setRecipient]=useState('');const[amount,setAmount]=useState('');const[tokenInfo,setTokenInfo]=useState(null);const[balance,setBalance]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const[selectedToken,setSelectedToken]=useState('SOL (Native)');const[autoCreateAccount,setAutoCreateAccount]=useState(TokenService.getSettings().autoCreateTokenAccounts);// Load token info and balance when token address changes\nuseEffect(()=>{if(connected&&currentAccount&&tokenAddress){loadTokenInfo();loadBalance();}},[connected,currentAccount,tokenAddress]);// Load native SOL balance\nuseEffect(()=>{if(connected&&currentAccount){loadNativeBalance();}},[connected,currentAccount]);const loadTokenInfo=async()=>{if(tokenAddress==='native'){setTokenInfo({address:'native',name:'Solana',symbol:'SOL',decimals:9});return;}try{const info=await TokenService.getTokenInfo(tokenAddress);setTokenInfo(info);}catch(err){console.error('Error loading token info:',err);setTokenInfo(null);}};const loadBalance=async()=>{if(!connected||!currentAccount||!tokenAddress)return;try{if(tokenAddress==='native'){loadNativeBalance();return;}const balance=await TokenService.getTokenBalance(tokenAddress,currentAccount);setBalance(balance);}catch(err){console.error('Error loading token balance:',err);setBalance(null);}};const loadNativeBalance=async()=>{if(!connected||!currentAccount)return;try{const balance=await TokenService.getNativeBalance(currentAccount);if(tokenAddress==='native'){setBalance(balance);}}catch(err){console.error('Error loading native balance:',err);if(tokenAddress==='native'){setBalance(null);}}};const handleTokenSelect=e=>{const selected=e.target.value;setSelectedToken(selected);setTokenAddress(POPULAR_TOKENS[selected]);};const handleTokenAddressChange=e=>{setTokenAddress(e.target.value);setSelectedToken('');};const handleAutoCreateToggle=()=>{const newValue=!autoCreateAccount;setAutoCreateAccount(newValue);TokenService.updateSettings({autoCreateTokenAccounts:newValue});};const handleSubmit=async e=>{e.preventDefault();if(!connected||!currentAccount){setError('Wallet not connected');return;}if(!tokenAddress){setError('Token address is required');return;}if(!recipient){setError('Recipient address is required');return;}if(!amount||parseFloat(amount)<=0){setError('Amount must be greater than 0');return;}try{setLoading(true);setError(null);setSuccess(null);let result;if(tokenAddress==='native'){result=await TokenService.transferNativeSOL(currentAccount,recipient,parseFloat(amount));}else{// Before transfer, update token service settings with current state\nTokenService.updateSettings({autoCreateTokenAccounts:autoCreateAccount,shouldShowNotifications:true});result=await TokenService.transferToken(tokenAddress,currentAccount,recipient,parseFloat(amount));// Check if an account was created and show notification\nif(result.accountCreated){window.notifyInfo('Token Account Created','A token account was automatically created for the recipient.',5000);}}setSuccess(`Transaction successful! Signature: ${result.signature}`);window.notifySuccess('Transfer Complete',`Successfully transferred ${amount} ${(tokenInfo===null||tokenInfo===void 0?void 0:tokenInfo.symbol)||'tokens'} to ${recipient.slice(0,4)}...${recipient.slice(-4)}`,5000);setAmount('');// Reload balance after transfer\nsetTimeout(()=>{loadBalance();},2000);}catch(err){console.error('Transfer error:',err);setError(`Transfer failed: ${err.message}`);// Show error notification\nwindow.notifyError('Transfer Failed',err.message,8000);}finally{setLoading(false);}};const handleMaxAmount=()=>{if(balance!==null){// Leave a small amount for transaction fees if it's SOL\nif(tokenAddress==='native'&&balance>0.01){setAmount((balance-0.01).toFixed(9));}else{setAmount(balance.toString());}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"token-transfer-container p-4 border rounded\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Transfer Tokens\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Select Token\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select mb-2\",value:selectedToken,onChange:handleTokenSelect,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:selectedToken!=='',children:\"Select a token\"}),Object.keys(POPULAR_TOKENS).map(token=>/*#__PURE__*/_jsx(\"option\",{value:token,children:token},token))]}),/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Or Enter Token Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:tokenAddress,onChange:handleTokenAddressChange,placeholder:\"Enter the mint address of the token you want to transfer, or select from popular tokens\"})]}),tokenInfo&&/*#__PURE__*/_jsx(\"div\",{className:\"card mb-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:tokenInfo.name}),/*#__PURE__*/_jsx(\"h6\",{className:\"card-subtitle mb-2 text-muted\",children:tokenInfo.symbol}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Decimals\"}),/*#__PURE__*/_jsx(\"p\",{children:tokenInfo.decimals})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Your Balance\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:balance!==null?`${balance} ${tokenInfo.symbol}`:'Loading balance...'})]})]})}),!connected&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-warning\",children:\"Please connect your wallet to transfer tokens.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Recipient Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:recipient,onChange:e=>setRecipient(e.target.value),placeholder:\"Enter the recipient's wallet address\",disabled:!connected})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Amount\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-control\",value:amount,onChange:e=>setAmount(e.target.value),placeholder:\"0.00\",step:\"0.000000001\",min:\"0\",disabled:!connected}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-outline-secondary\",onClick:handleMaxAmount,disabled:!connected||balance===null,children:\"MAX\"})]})]}),tokenAddress!=='native'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-check form-switch mb-3\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",id:\"autoCreateTokenAccount\",checked:autoCreateAccount,onChange:handleAutoCreateToggle}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",htmlFor:\"autoCreateTokenAccount\",children:\"Automatically create token accounts for recipients\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-text\",children:autoCreateAccount?\"Token accounts will be created for recipients who don't have one (small fee applies)\":\"You must ensure the recipient already has a token account for this token\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-success\",children:success}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:!connected||loading||!recipient||!amount||parseFloat(amount)<=0,children:loading?'Processing...':'Transfer'})]})]});};export default TokenTransfer;","map":{"version":3,"names":["React","useState","useEffect","useWallet","TokenService","PublicKey","jsx","_jsx","jsxs","_jsxs","POPULAR_TOKENS","TokenTransfer","_ref","tokenAddress","propTokenAddress","connected","currentAccount","setTokenAddress","recipient","setRecipient","amount","setAmount","tokenInfo","setTokenInfo","balance","setBalance","loading","setLoading","error","setError","success","setSuccess","selectedToken","setSelectedToken","autoCreateAccount","setAutoCreateAccount","getSettings","autoCreateTokenAccounts","loadTokenInfo","loadBalance","loadNativeBalance","address","name","symbol","decimals","info","getTokenInfo","err","console","getTokenBalance","getNativeBalance","handleTokenSelect","e","selected","target","value","handleTokenAddressChange","handleAutoCreateToggle","newValue","updateSettings","handleSubmit","preventDefault","parseFloat","result","transferNativeSOL","shouldShowNotifications","transferToken","accountCreated","window","notifyInfo","signature","notifySuccess","slice","setTimeout","message","notifyError","handleMaxAmount","toFixed","toString","className","children","onSubmit","onChange","disabled","Object","keys","map","token","type","placeholder","step","min","onClick","id","checked","htmlFor"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/TokenTransfer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useWallet } from '../contexts/WalletContext';\nimport TokenService from '../services/token-service';\nimport { PublicKey } from '@solana/web3.js';\n\n// Popular tokens on Solana with their addresses\nconst POPULAR_TOKENS = {\n  'SOL (Native)': 'native',\n  'USDC': 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n  'USDT': 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\n  'Bonk': 'DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263',\n  'Raydium': '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  'Serum': 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\n  // Add more popular tokens as needed\n};\n\nconst TokenTransfer = ({ tokenAddress: propTokenAddress }) => {\n  const { connected, currentAccount } = useWallet();\n  const [tokenAddress, setTokenAddress] = useState(propTokenAddress || 'native'); // Default to native SOL\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [tokenInfo, setTokenInfo] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [selectedToken, setSelectedToken] = useState('SOL (Native)');\n  const [autoCreateAccount, setAutoCreateAccount] = useState(\n    TokenService.getSettings().autoCreateTokenAccounts\n  );\n\n  // Load token info and balance when token address changes\n  useEffect(() => {\n    if (connected && currentAccount && tokenAddress) {\n      loadTokenInfo();\n      loadBalance();\n    }\n  }, [connected, currentAccount, tokenAddress]);\n\n  // Load native SOL balance\n  useEffect(() => {\n    if (connected && currentAccount) {\n      loadNativeBalance();\n    }\n  }, [connected, currentAccount]);\n\n  const loadTokenInfo = async () => {\n    if (tokenAddress === 'native') {\n      setTokenInfo({\n        address: 'native',\n        name: 'Solana',\n        symbol: 'SOL',\n        decimals: 9\n      });\n      return;\n    }\n    \n    try {\n      const info = await TokenService.getTokenInfo(tokenAddress);\n      setTokenInfo(info);\n    } catch (err) {\n      console.error('Error loading token info:', err);\n      setTokenInfo(null);\n    }\n  };\n\n  const loadBalance = async () => {\n    if (!connected || !currentAccount || !tokenAddress) return;\n    \n    try {\n      if (tokenAddress === 'native') {\n        loadNativeBalance();\n        return;\n      }\n      \n      const balance = await TokenService.getTokenBalance(tokenAddress, currentAccount);\n      setBalance(balance);\n    } catch (err) {\n      console.error('Error loading token balance:', err);\n      setBalance(null);\n    }\n  };\n\n  const loadNativeBalance = async () => {\n    if (!connected || !currentAccount) return;\n    \n    try {\n      const balance = await TokenService.getNativeBalance(currentAccount);\n      if (tokenAddress === 'native') {\n        setBalance(balance);\n      }\n    } catch (err) {\n      console.error('Error loading native balance:', err);\n      if (tokenAddress === 'native') {\n        setBalance(null);\n      }\n    }\n  };\n\n  const handleTokenSelect = (e) => {\n    const selected = e.target.value;\n    setSelectedToken(selected);\n    setTokenAddress(POPULAR_TOKENS[selected]);\n  };\n\n  const handleTokenAddressChange = (e) => {\n    setTokenAddress(e.target.value);\n    setSelectedToken('');\n  };\n\n  const handleAutoCreateToggle = () => {\n    const newValue = !autoCreateAccount;\n    setAutoCreateAccount(newValue);\n    TokenService.updateSettings({ autoCreateTokenAccounts: newValue });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!connected || !currentAccount) {\n      setError('Wallet not connected');\n      return;\n    }\n    \n    if (!tokenAddress) {\n      setError('Token address is required');\n      return;\n    }\n    \n    if (!recipient) {\n      setError('Recipient address is required');\n      return;\n    }\n    \n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Amount must be greater than 0');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      \n      let result;\n      if (tokenAddress === 'native') {\n        result = await TokenService.transferNativeSOL(\n          currentAccount,\n          recipient,\n          parseFloat(amount)\n        );\n      } else {\n        // Before transfer, update token service settings with current state\n        TokenService.updateSettings({ \n          autoCreateTokenAccounts: autoCreateAccount,\n          shouldShowNotifications: true\n        });\n        \n        result = await TokenService.transferToken(\n          tokenAddress,\n          currentAccount,\n          recipient,\n          parseFloat(amount)\n        );\n        \n        // Check if an account was created and show notification\n        if (result.accountCreated) {\n          window.notifyInfo(\n            'Token Account Created',\n            'A token account was automatically created for the recipient.',\n            5000\n          );\n        }\n      }\n      \n      setSuccess(`Transaction successful! Signature: ${result.signature}`);\n      window.notifySuccess(\n        'Transfer Complete',\n        `Successfully transferred ${amount} ${tokenInfo?.symbol || 'tokens'} to ${recipient.slice(0, 4)}...${recipient.slice(-4)}`,\n        5000\n      );\n      \n      setAmount('');\n      \n      // Reload balance after transfer\n      setTimeout(() => {\n        loadBalance();\n      }, 2000);\n    } catch (err) {\n      console.error('Transfer error:', err);\n      setError(`Transfer failed: ${err.message}`);\n      \n      // Show error notification\n      window.notifyError(\n        'Transfer Failed',\n        err.message,\n        8000\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMaxAmount = () => {\n    if (balance !== null) {\n      // Leave a small amount for transaction fees if it's SOL\n      if (tokenAddress === 'native' && balance > 0.01) {\n        setAmount((balance - 0.01).toFixed(9));\n      } else {\n        setAmount(balance.toString());\n      }\n    }\n  };\n\n  return (\n    <div className=\"token-transfer-container p-4 border rounded\">\n      <h3>Transfer Tokens</h3>\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Select Token</label>\n          <select \n            className=\"form-select mb-2\" \n            value={selectedToken} \n            onChange={handleTokenSelect}\n          >\n            <option value=\"\" disabled={selectedToken !== ''}>Select a token</option>\n            {Object.keys(POPULAR_TOKENS).map(token => (\n              <option key={token} value={token}>{token}</option>\n            ))}\n          </select>\n          \n          <label className=\"form-label\">Or Enter Token Address</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            value={tokenAddress} \n            onChange={handleTokenAddressChange}\n            placeholder=\"Enter the mint address of the token you want to transfer, or select from popular tokens\"\n          />\n        </div>\n        \n        {tokenInfo && (\n          <div className=\"card mb-3\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{tokenInfo.name}</h5>\n              <h6 className=\"card-subtitle mb-2 text-muted\">{tokenInfo.symbol}</h6>\n              <div className=\"mb-2\">\n                <small className=\"text-muted\">Decimals</small>\n                <p>{tokenInfo.decimals}</p>\n              </div>\n              <div>\n                <small className=\"text-muted\">Your Balance</small>\n                <p className=\"mb-0\">\n                  {balance !== null ? (\n                    `${balance} ${tokenInfo.symbol}`\n                  ) : (\n                    'Loading balance...'\n                  )}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {!connected && (\n          <div className=\"alert alert-warning\">\n            Please connect your wallet to transfer tokens.\n          </div>\n        )}\n        \n        <div className=\"mb-3\">\n          <label className=\"form-label\">Recipient Address</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            value={recipient} \n            onChange={(e) => setRecipient(e.target.value)}\n            placeholder=\"Enter the recipient's wallet address\"\n            disabled={!connected}\n          />\n        </div>\n        \n        <div className=\"mb-3\">\n          <label className=\"form-label\">Amount</label>\n          <div className=\"input-group\">\n            <input \n              type=\"number\" \n              className=\"form-control\" \n              value={amount} \n              onChange={(e) => setAmount(e.target.value)}\n              placeholder=\"0.00\"\n              step=\"0.000000001\"\n              min=\"0\"\n              disabled={!connected}\n            />\n            <button \n              type=\"button\" \n              className=\"btn btn-outline-secondary\" \n              onClick={handleMaxAmount}\n              disabled={!connected || balance === null}\n            >\n              MAX\n            </button>\n          </div>\n        </div>\n        \n        {/* Auto token account creation toggle */}\n        {tokenAddress !== 'native' && (\n          <div className=\"form-check form-switch mb-3\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"autoCreateTokenAccount\"\n              checked={autoCreateAccount}\n              onChange={handleAutoCreateToggle}\n            />\n            <label className=\"form-check-label\" htmlFor=\"autoCreateTokenAccount\">\n              Automatically create token accounts for recipients\n            </label>\n            <div className=\"form-text\">\n              {autoCreateAccount\n                ? \"Token accounts will be created for recipients who don't have one (small fee applies)\"\n                : \"You must ensure the recipient already has a token account for this token\"}\n            </div>\n          </div>\n        )}\n        \n        {error && (\n          <div className=\"alert alert-danger\">{error}</div>\n        )}\n        \n        {success && (\n          <div className=\"alert alert-success\">{success}</div>\n        )}\n        \n        <button \n          type=\"submit\" \n          className=\"btn btn-primary\" \n          disabled={!connected || loading || !recipient || !amount || parseFloat(amount) <= 0}\n        >\n          {loading ? 'Processing...' : 'Transfer'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default TokenTransfer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}