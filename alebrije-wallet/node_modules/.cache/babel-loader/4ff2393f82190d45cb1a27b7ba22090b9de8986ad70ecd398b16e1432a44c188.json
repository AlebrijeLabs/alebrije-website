{"ast":null,"code":"import { EnsController } from '@reown/appkit-controllers';\nimport { solana, solanaDevnet } from '../networks/index.js';\nexport const DEFAULT_METHODS = {\n  solana: ['solana_signMessage', 'solana_signTransaction', 'solana_requestAccounts', 'solana_getAccounts', 'solana_signAllTransactions', 'solana_signAndSendTransaction'],\n  eip155: ['eth_accounts', 'eth_requestAccounts', 'eth_sendRawTransaction', 'eth_sign', 'eth_signTransaction', 'eth_signTypedData', 'eth_signTypedData_v3', 'eth_signTypedData_v4', 'eth_sendTransaction', 'personal_sign', 'wallet_switchEthereumChain', 'wallet_addEthereumChain', 'wallet_getPermissions', 'wallet_requestPermissions', 'wallet_registerOnboarding', 'wallet_watchAsset', 'wallet_scanQRCode',\n  // EIP-5792\n  'wallet_getCallsStatus', 'wallet_showCallsStatus', 'wallet_sendCalls', 'wallet_getCapabilities',\n  // EIP-7715\n  'wallet_grantPermissions', 'wallet_revokePermissions',\n  //EIP-7811\n  'wallet_getAssets'],\n  bip122: ['sendTransfer', 'signMessage', 'signPsbt', 'getAccountAddresses']\n};\nexport const WcHelpersUtil = {\n  getMethodsByChainNamespace(chainNamespace) {\n    return DEFAULT_METHODS[chainNamespace] || [];\n  },\n  createDefaultNamespace(chainNamespace) {\n    return {\n      methods: this.getMethodsByChainNamespace(chainNamespace),\n      events: ['accountsChanged', 'chainChanged'],\n      chains: [],\n      rpcMap: {}\n    };\n  },\n  applyNamespaceOverrides(baseNamespaces, overrides) {\n    if (!overrides) {\n      return {\n        ...baseNamespaces\n      };\n    }\n    const result = {\n      ...baseNamespaces\n    };\n    const namespacesToOverride = new Set();\n    if (overrides.methods) {\n      Object.keys(overrides.methods).forEach(ns => namespacesToOverride.add(ns));\n    }\n    if (overrides.chains) {\n      Object.keys(overrides.chains).forEach(ns => namespacesToOverride.add(ns));\n    }\n    if (overrides.events) {\n      Object.keys(overrides.events).forEach(ns => namespacesToOverride.add(ns));\n    }\n    if (overrides.rpcMap) {\n      Object.keys(overrides.rpcMap).forEach(chainId => {\n        const [ns] = chainId.split(':');\n        if (ns) {\n          namespacesToOverride.add(ns);\n        }\n      });\n    }\n    namespacesToOverride.forEach(ns => {\n      if (!result[ns]) {\n        result[ns] = this.createDefaultNamespace(ns);\n      }\n    });\n    if (overrides.methods) {\n      Object.entries(overrides.methods).forEach(_ref => {\n        let [ns, methods] = _ref;\n        if (result[ns]) {\n          result[ns].methods = methods;\n        }\n      });\n    }\n    if (overrides.chains) {\n      Object.entries(overrides.chains).forEach(_ref2 => {\n        let [ns, chains] = _ref2;\n        if (result[ns]) {\n          result[ns].chains = chains;\n        }\n      });\n    }\n    if (overrides.events) {\n      Object.entries(overrides.events).forEach(_ref3 => {\n        let [ns, events] = _ref3;\n        if (result[ns]) {\n          result[ns].events = events;\n        }\n      });\n    }\n    if (overrides.rpcMap) {\n      const processedNamespaces = new Set();\n      Object.entries(overrides.rpcMap).forEach(_ref4 => {\n        let [chainId, rpcUrl] = _ref4;\n        const [ns, id] = chainId.split(':');\n        if (!ns || !id || !result[ns]) {\n          return;\n        }\n        if (!result[ns].rpcMap) {\n          result[ns].rpcMap = {};\n        }\n        if (!processedNamespaces.has(ns)) {\n          result[ns].rpcMap = {};\n          processedNamespaces.add(ns);\n        }\n        result[ns].rpcMap[id] = rpcUrl;\n      });\n    }\n    return result;\n  },\n  createNamespaces(caipNetworks, configOverride) {\n    const defaultNamespaces = caipNetworks.reduce((acc, chain) => {\n      const {\n        id,\n        chainNamespace,\n        rpcUrls\n      } = chain;\n      const rpcUrl = rpcUrls.default.http[0];\n      if (!acc[chainNamespace]) {\n        acc[chainNamespace] = this.createDefaultNamespace(chainNamespace);\n      }\n      const caipNetworkId = `${chainNamespace}:${id}`;\n      // eslint-disable-next-line @typescript-eslint/non-nullable-type-assertion-style\n      const namespace = acc[chainNamespace];\n      namespace.chains.push(caipNetworkId);\n      // Workaround for wallets that only support deprecated Solana network ID\n      switch (caipNetworkId) {\n        case solana.caipNetworkId:\n          namespace.chains.push(solana.deprecatedCaipNetworkId);\n          break;\n        case solanaDevnet.caipNetworkId:\n          namespace.chains.push(solanaDevnet.deprecatedCaipNetworkId);\n          break;\n        default:\n      }\n      if (namespace?.rpcMap && rpcUrl) {\n        namespace.rpcMap[id] = rpcUrl;\n      }\n      return acc;\n    }, {});\n    return this.applyNamespaceOverrides(defaultNamespaces, configOverride);\n  },\n  resolveReownName: async name => {\n    const wcNameAddress = await EnsController.resolveName(name);\n    const networkNameAddresses = Object.values(wcNameAddress?.addresses) || [];\n    return networkNameAddresses[0]?.address || false;\n  },\n  getChainsFromNamespaces() {\n    let namespaces = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Object.values(namespaces).flatMap(namespace => {\n      const chains = namespace.chains || [];\n      const accountsChains = namespace.accounts.map(account => {\n        const [chainNamespace, chainId] = account.split(':');\n        return `${chainNamespace}:${chainId}`;\n      });\n      return Array.from(new Set([...chains, ...accountsChains]));\n    });\n  },\n  isSessionEventData(data) {\n    return typeof data === 'object' && data !== null && 'id' in data && 'topic' in data && 'params' in data && typeof data.params === 'object' && data.params !== null && 'chainId' in data.params && 'event' in data.params && typeof data.params.event === 'object' && data.params.event !== null;\n  }\n};","map":{"version":3,"names":["EnsController","solana","solanaDevnet","DEFAULT_METHODS","eip155","bip122","WcHelpersUtil","getMethodsByChainNamespace","chainNamespace","createDefaultNamespace","methods","events","chains","rpcMap","applyNamespaceOverrides","baseNamespaces","overrides","result","namespacesToOverride","Set","Object","keys","forEach","ns","add","chainId","split","entries","_ref","_ref2","_ref3","processedNamespaces","_ref4","rpcUrl","id","has","createNamespaces","caipNetworks","configOverride","defaultNamespaces","reduce","acc","chain","rpcUrls","default","http","caipNetworkId","namespace","push","deprecatedCaipNetworkId","resolveReownName","name","wcNameAddress","resolveName","networkNameAddresses","values","addresses","address","getChainsFromNamespaces","namespaces","arguments","length","undefined","flatMap","accountsChains","accounts","map","account","Array","from","isSessionEventData","data","params","event"],"sources":["../../../../src/utils/HelpersUtil.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}