{"ast":null,"code":"import { proxy, subscribe as sub } from 'valtio/vanilla';\nimport { proxyMap, subscribeKey as subKey } from 'valtio/vanilla/utils';\nimport { ConstantsUtil as CommonConstantsUtil, NetworkUtil } from '@reown/appkit-common';\nimport { getChainsToDisconnect } from '../utils/ChainControllerUtil.js';\nimport { ConstantsUtil } from '../utils/ConstantsUtil.js';\nimport { CoreHelperUtil } from '../utils/CoreHelperUtil.js';\nimport { StorageUtil } from '../utils/StorageUtil.js';\nimport { AccountController } from './AccountController.js';\nimport { ConnectionController } from './ConnectionController.js';\nimport { ConnectorController } from './ConnectorController.js';\nimport { EventsController } from './EventsController.js';\nimport { ModalController } from './ModalController.js';\nimport { OptionsController } from './OptionsController.js';\nimport { PublicStateController } from './PublicStateController.js';\nimport { RouterController } from './RouterController.js';\nimport { SendController } from './SendController.js';\n// -- Constants ----------------------------------------- //\nconst accountState = {\n  currentTab: 0,\n  tokenBalance: [],\n  smartAccountDeployed: false,\n  addressLabels: new Map(),\n  allAccounts: [],\n  user: undefined\n};\nconst networkState = {\n  caipNetwork: undefined,\n  supportsAllNetworks: true,\n  smartAccountEnabledNetworks: []\n};\n// -- State --------------------------------------------- //\nconst state = proxy({\n  chains: proxyMap(),\n  activeCaipAddress: undefined,\n  activeChain: undefined,\n  activeCaipNetwork: undefined,\n  noAdapters: false,\n  universalAdapter: {\n    networkControllerClient: undefined,\n    connectionControllerClient: undefined\n  },\n  isSwitchingNamespace: false\n});\n// -- Controller ---------------------------------------- //\nexport const ChainController = {\n  state,\n  subscribe(callback) {\n    return sub(state, () => {\n      callback(state);\n    });\n  },\n  subscribeKey(key, callback) {\n    return subKey(state, key, callback);\n  },\n  subscribeChainProp(property, callback, chain) {\n    let prev = undefined;\n    return sub(state.chains, () => {\n      const activeChain = chain || state.activeChain;\n      if (activeChain) {\n        const nextValue = state.chains.get(activeChain)?.[property];\n        if (prev !== nextValue) {\n          prev = nextValue;\n          callback(nextValue);\n        }\n      }\n    });\n  },\n  initialize(adapters, caipNetworks, clients) {\n    const {\n      chainId: activeChainId,\n      namespace: activeNamespace\n    } = StorageUtil.getActiveNetworkProps();\n    const activeCaipNetwork = caipNetworks?.find(network => network.id.toString() === activeChainId?.toString());\n    const defaultAdapter = adapters.find(adapter => adapter?.namespace === activeNamespace);\n    const adapterToActivate = defaultAdapter || adapters?.[0];\n    const namespaces = new Set([...(caipNetworks?.map(network => network.chainNamespace) ?? [])]);\n    if (adapters?.length === 0 || !adapterToActivate) {\n      state.noAdapters = true;\n    }\n    if (!state.noAdapters) {\n      state.activeChain = adapterToActivate?.namespace;\n      state.activeCaipNetwork = activeCaipNetwork;\n      this.setChainNetworkData(adapterToActivate?.namespace, {\n        caipNetwork: activeCaipNetwork\n      });\n      if (state.activeChain) {\n        PublicStateController.set({\n          activeChain: adapterToActivate?.namespace\n        });\n      }\n    }\n    namespaces.forEach(namespace => {\n      const namespaceNetworks = caipNetworks?.filter(network => network.chainNamespace === namespace);\n      ChainController.state.chains.set(namespace, {\n        namespace,\n        networkState: proxy({\n          ...networkState,\n          caipNetwork: namespaceNetworks?.[0]\n        }),\n        accountState: proxy(accountState),\n        caipNetworks: namespaceNetworks ?? [],\n        ...clients\n      });\n      this.setRequestedCaipNetworks(namespaceNetworks ?? [], namespace);\n    });\n  },\n  removeAdapter(namespace) {\n    if (state.activeChain === namespace) {\n      const nextAdapter = Array.from(state.chains.entries()).find(_ref => {\n        let [chainNamespace] = _ref;\n        return chainNamespace !== namespace;\n      });\n      if (nextAdapter) {\n        const caipNetwork = nextAdapter[1]?.caipNetworks?.[0];\n        if (caipNetwork) {\n          this.setActiveCaipNetwork(caipNetwork);\n        }\n      }\n    }\n    state.chains.delete(namespace);\n  },\n  addAdapter(adapter, _ref2, caipNetworks) {\n    let {\n      networkControllerClient,\n      connectionControllerClient\n    } = _ref2;\n    state.chains.set(adapter.namespace, {\n      namespace: adapter.namespace,\n      networkState: {\n        ...networkState,\n        caipNetwork: caipNetworks[0]\n      },\n      accountState,\n      caipNetworks,\n      connectionControllerClient,\n      networkControllerClient\n    });\n    this.setRequestedCaipNetworks(caipNetworks?.filter(caipNetwork => caipNetwork.chainNamespace === adapter.namespace) ?? [], adapter.namespace);\n  },\n  addNetwork(network) {\n    const chainAdapter = state.chains.get(network.chainNamespace);\n    if (chainAdapter) {\n      const newNetworks = [...(chainAdapter.caipNetworks || [])];\n      if (!chainAdapter.caipNetworks?.find(caipNetwork => caipNetwork.id === network.id)) {\n        newNetworks.push(network);\n      }\n      state.chains.set(network.chainNamespace, {\n        ...chainAdapter,\n        caipNetworks: newNetworks\n      });\n      this.setRequestedCaipNetworks(newNetworks, network.chainNamespace);\n    }\n  },\n  removeNetwork(namespace, networkId) {\n    const chainAdapter = state.chains.get(namespace);\n    if (chainAdapter) {\n      // Check if network being removed is active network\n      const isActiveNetwork = state.activeCaipNetwork?.id === networkId;\n      // Filter out the network being removed\n      const newCaipNetworksOfAdapter = [...(chainAdapter.caipNetworks?.filter(network => network.id !== networkId) || [])];\n      // If active network was removed and there are other networks available, switch to first one\n      if (isActiveNetwork && chainAdapter?.caipNetworks?.[0]) {\n        this.setActiveCaipNetwork(chainAdapter.caipNetworks[0]);\n      }\n      state.chains.set(namespace, {\n        ...chainAdapter,\n        caipNetworks: newCaipNetworksOfAdapter\n      });\n      this.setRequestedCaipNetworks(newCaipNetworksOfAdapter || [], namespace);\n    }\n  },\n  setAdapterNetworkState(chain, props) {\n    const chainAdapter = state.chains.get(chain);\n    if (chainAdapter) {\n      chainAdapter.networkState = {\n        ...(chainAdapter.networkState || networkState),\n        ...props\n      };\n      state.chains.set(chain, chainAdapter);\n    }\n  },\n  setChainAccountData(chain, accountProps) {\n    let _unknown = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (!chain) {\n      throw new Error('Chain is required to update chain account data');\n    }\n    const chainAdapter = state.chains.get(chain);\n    if (chainAdapter) {\n      const newAccountState = {\n        ...(chainAdapter.accountState || accountState),\n        ...accountProps\n      };\n      state.chains.set(chain, {\n        ...chainAdapter,\n        accountState: newAccountState\n      });\n      if (state.chains.size === 1 || state.activeChain === chain) {\n        if (accountProps.caipAddress) {\n          state.activeCaipAddress = accountProps.caipAddress;\n        }\n        AccountController.replaceState(newAccountState);\n      }\n    }\n  },\n  setChainNetworkData(chain, networkProps) {\n    if (!chain) {\n      return;\n    }\n    const chainAdapter = state.chains.get(chain);\n    if (chainAdapter) {\n      const newNetworkState = {\n        ...(chainAdapter.networkState || networkState),\n        ...networkProps\n      };\n      state.chains.set(chain, {\n        ...chainAdapter,\n        networkState: newNetworkState\n      });\n    }\n  },\n  // eslint-disable-next-line max-params\n  setAccountProp(prop, value, chain) {\n    let replaceState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    this.setChainAccountData(chain, {\n      [prop]: value\n    }, replaceState);\n    if (prop === 'status' && value === 'disconnected' && chain) {\n      ConnectorController.removeConnectorId(chain);\n    }\n  },\n  setActiveNamespace(chain) {\n    state.activeChain = chain;\n    const newAdapter = chain ? state.chains.get(chain) : undefined;\n    const caipNetwork = newAdapter?.networkState?.caipNetwork;\n    if (caipNetwork?.id && chain) {\n      state.activeCaipAddress = newAdapter?.accountState?.caipAddress;\n      state.activeCaipNetwork = caipNetwork;\n      this.setChainNetworkData(chain, {\n        caipNetwork\n      });\n      StorageUtil.setActiveCaipNetworkId(caipNetwork?.caipNetworkId);\n      PublicStateController.set({\n        activeChain: chain,\n        selectedNetworkId: caipNetwork?.caipNetworkId\n      });\n    }\n  },\n  setActiveCaipNetwork(caipNetwork) {\n    if (!caipNetwork) {\n      return;\n    }\n    if (state.activeChain !== caipNetwork.chainNamespace) {\n      this.setIsSwitchingNamespace(true);\n    }\n    const newAdapter = state.chains.get(caipNetwork.chainNamespace);\n    state.activeChain = caipNetwork.chainNamespace;\n    state.activeCaipNetwork = caipNetwork;\n    this.setChainNetworkData(caipNetwork.chainNamespace, {\n      caipNetwork\n    });\n    if (newAdapter?.accountState?.address) {\n      state.activeCaipAddress = `${caipNetwork.chainNamespace}:${caipNetwork.id}:${newAdapter?.accountState?.address}`;\n    } else {\n      state.activeCaipAddress = undefined;\n    }\n    // Update the chain's account state with the new caip address value\n    this.setAccountProp('caipAddress', state.activeCaipAddress, caipNetwork.chainNamespace);\n    if (newAdapter) {\n      AccountController.replaceState(newAdapter.accountState);\n    }\n    // Reset send state when switching networks\n    SendController.resetSend();\n    PublicStateController.set({\n      activeChain: state.activeChain,\n      selectedNetworkId: state.activeCaipNetwork?.caipNetworkId\n    });\n    StorageUtil.setActiveCaipNetworkId(caipNetwork.caipNetworkId);\n    const isSupported = this.checkIfSupportedNetwork(caipNetwork.chainNamespace);\n    if (!isSupported && OptionsController.state.enableNetworkSwitch && !OptionsController.state.allowUnsupportedChain && !ConnectionController.state.wcBasic) {\n      this.showUnsupportedChainUI();\n    }\n  },\n  addCaipNetwork(caipNetwork) {\n    if (!caipNetwork) {\n      return;\n    }\n    const chain = state.chains.get(caipNetwork.chainNamespace);\n    if (chain) {\n      chain?.caipNetworks?.push(caipNetwork);\n    }\n  },\n  async switchActiveNamespace(namespace) {\n    if (!namespace) {\n      return;\n    }\n    const isDifferentChain = namespace !== ChainController.state.activeChain;\n    const caipNetworkOfNamespace = ChainController.getNetworkData(namespace)?.caipNetwork;\n    const firstNetworkWithChain = ChainController.getCaipNetworkByNamespace(namespace, caipNetworkOfNamespace?.id);\n    if (isDifferentChain && firstNetworkWithChain) {\n      await ChainController.switchActiveNetwork(firstNetworkWithChain);\n    }\n  },\n  async switchActiveNetwork(network) {\n    const activeAdapter = ChainController.state.chains.get(ChainController.state.activeChain);\n    const unsupportedNetwork = !activeAdapter?.caipNetworks?.some(caipNetwork => caipNetwork.id === state.activeCaipNetwork?.id);\n    if (unsupportedNetwork) {\n      RouterController.goBack();\n    }\n    const networkControllerClient = this.getNetworkControllerClient(network.chainNamespace);\n    if (networkControllerClient) {\n      await networkControllerClient.switchCaipNetwork(network);\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SWITCH_NETWORK',\n        properties: {\n          network: network.caipNetworkId\n        }\n      });\n    }\n  },\n  getNetworkControllerClient(chainNamespace) {\n    const chain = chainNamespace || state.activeChain;\n    const chainAdapter = state.chains.get(chain);\n    if (!chainAdapter) {\n      throw new Error('Chain adapter not found');\n    }\n    if (!chainAdapter.networkControllerClient) {\n      throw new Error('NetworkController client not set');\n    }\n    return chainAdapter.networkControllerClient;\n  },\n  getConnectionControllerClient(_chain) {\n    const chain = _chain || state.activeChain;\n    if (!chain) {\n      throw new Error('Chain is required to get connection controller client');\n    }\n    const chainAdapter = state.chains.get(chain);\n    if (!chainAdapter?.connectionControllerClient) {\n      throw new Error('ConnectionController client not set');\n    }\n    return chainAdapter.connectionControllerClient;\n  },\n  getAccountProp(key, _chain) {\n    let chain = state.activeChain;\n    if (_chain) {\n      chain = _chain;\n    }\n    if (!chain) {\n      return undefined;\n    }\n    const chainAccountState = state.chains.get(chain)?.accountState;\n    if (!chainAccountState) {\n      return undefined;\n    }\n    return chainAccountState[key];\n  },\n  getNetworkProp(key, namespace) {\n    const chainNetworkState = state.chains.get(namespace)?.networkState;\n    if (!chainNetworkState) {\n      return undefined;\n    }\n    return chainNetworkState[key];\n  },\n  getRequestedCaipNetworks(chainToFilter) {\n    const adapter = state.chains.get(chainToFilter);\n    const {\n      approvedCaipNetworkIds = [],\n      requestedCaipNetworks = []\n    } = adapter?.networkState || {};\n    const sortedNetworks = CoreHelperUtil.sortRequestedNetworks(approvedCaipNetworkIds, requestedCaipNetworks);\n    return sortedNetworks;\n  },\n  getAllRequestedCaipNetworks() {\n    const requestedCaipNetworks = [];\n    state.chains.forEach(chainAdapter => {\n      const caipNetworks = this.getRequestedCaipNetworks(chainAdapter.namespace);\n      requestedCaipNetworks.push(...caipNetworks);\n    });\n    return requestedCaipNetworks;\n  },\n  setRequestedCaipNetworks(requestedCaipNetworks, chain) {\n    this.setAdapterNetworkState(chain, {\n      requestedCaipNetworks\n    });\n  },\n  getAllApprovedCaipNetworkIds() {\n    const approvedCaipNetworkIds = [];\n    state.chains.forEach(chainAdapter => {\n      const approvedIds = this.getApprovedCaipNetworkIds(chainAdapter.namespace);\n      approvedCaipNetworkIds.push(...approvedIds);\n    });\n    return approvedCaipNetworkIds;\n  },\n  getActiveCaipNetwork() {\n    return state.activeCaipNetwork;\n  },\n  getActiveCaipAddress() {\n    return state.activeCaipAddress;\n  },\n  getApprovedCaipNetworkIds(namespace) {\n    const adapter = state.chains.get(namespace);\n    const approvedCaipNetworkIds = adapter?.networkState?.approvedCaipNetworkIds || [];\n    return approvedCaipNetworkIds;\n  },\n  async setApprovedCaipNetworksData(namespace) {\n    const networkControllerClient = this.getNetworkControllerClient();\n    const data = await networkControllerClient?.getApprovedCaipNetworksData();\n    this.setAdapterNetworkState(namespace, {\n      approvedCaipNetworkIds: data?.approvedCaipNetworkIds,\n      supportsAllNetworks: data?.supportsAllNetworks\n    });\n  },\n  checkIfSupportedNetwork(namespace, caipNetwork) {\n    const activeCaipNetwork = caipNetwork || state.activeCaipNetwork;\n    const requestedCaipNetworks = this.getRequestedCaipNetworks(namespace);\n    if (!requestedCaipNetworks.length) {\n      return true;\n    }\n    return requestedCaipNetworks?.some(network => network.id === activeCaipNetwork?.id);\n  },\n  checkIfSupportedChainId(chainId) {\n    if (!state.activeChain) {\n      return true;\n    }\n    const requestedCaipNetworks = this.getRequestedCaipNetworks(state.activeChain);\n    return requestedCaipNetworks?.some(network => network.id === chainId);\n  },\n  // Smart Account Network Handlers\n  setSmartAccountEnabledNetworks(smartAccountEnabledNetworks, chain) {\n    this.setAdapterNetworkState(chain, {\n      smartAccountEnabledNetworks\n    });\n  },\n  checkIfSmartAccountEnabled() {\n    const networkId = NetworkUtil.caipNetworkIdToNumber(state.activeCaipNetwork?.caipNetworkId);\n    const activeChain = state.activeChain;\n    if (!activeChain || !networkId) {\n      return false;\n    }\n    const smartAccountEnabledNetworks = this.getNetworkProp('smartAccountEnabledNetworks', activeChain);\n    return Boolean(smartAccountEnabledNetworks?.includes(Number(networkId)));\n  },\n  getActiveNetworkTokenAddress() {\n    const namespace = state.activeCaipNetwork?.chainNamespace || 'eip155';\n    const chainId = state.activeCaipNetwork?.id || 1;\n    const address = ConstantsUtil.NATIVE_TOKEN_ADDRESS[namespace];\n    return `${namespace}:${chainId}:${address}`;\n  },\n  showUnsupportedChainUI() {\n    ModalController.open({\n      view: 'UnsupportedChain'\n    });\n  },\n  checkIfNamesSupported() {\n    const activeCaipNetwork = state.activeCaipNetwork;\n    return Boolean(activeCaipNetwork?.chainNamespace && ConstantsUtil.NAMES_SUPPORTED_CHAIN_NAMESPACES.includes(activeCaipNetwork.chainNamespace));\n  },\n  resetNetwork(namespace) {\n    this.setAdapterNetworkState(namespace, {\n      approvedCaipNetworkIds: undefined,\n      supportsAllNetworks: true,\n      smartAccountEnabledNetworks: []\n    });\n  },\n  resetAccount(chain) {\n    const chainToWrite = chain;\n    if (!chainToWrite) {\n      throw new Error('Chain is required to set account prop');\n    }\n    state.activeCaipAddress = undefined;\n    this.setChainAccountData(chainToWrite, {\n      smartAccountDeployed: false,\n      currentTab: 0,\n      caipAddress: undefined,\n      address: undefined,\n      balance: undefined,\n      balanceSymbol: undefined,\n      profileName: undefined,\n      profileImage: undefined,\n      addressExplorerUrl: undefined,\n      tokenBalance: [],\n      connectedWalletInfo: undefined,\n      preferredAccountType: undefined,\n      socialProvider: undefined,\n      socialWindow: undefined,\n      farcasterUrl: undefined,\n      allAccounts: [],\n      user: undefined,\n      status: 'disconnected'\n    });\n    ConnectorController.removeConnectorId(chainToWrite);\n  },\n  async disconnect(namespace) {\n    const chainsToDisconnect = getChainsToDisconnect(namespace);\n    try {\n      // Reset send state when disconnecting\n      SendController.resetSend();\n      const disconnectResults = await Promise.allSettled(chainsToDisconnect.map(async _ref3 => {\n        let [ns, adapter] = _ref3;\n        try {\n          const {\n            caipAddress\n          } = this.getAccountData(ns) || {};\n          if (caipAddress && adapter.connectionControllerClient?.disconnect) {\n            await adapter.connectionControllerClient.disconnect(ns);\n          }\n          this.resetAccount(ns);\n          this.resetNetwork(ns);\n        } catch (error) {\n          throw new Error(`Failed to disconnect chain ${ns}: ${error.message}`);\n        }\n      }));\n      ConnectionController.resetWcConnection();\n      const failures = disconnectResults.filter(result => result.status === 'rejected');\n      if (failures.length > 0) {\n        throw new Error(failures.map(f => f.reason.message).join(', '));\n      }\n      StorageUtil.deleteConnectedSocialProvider();\n      if (namespace) {\n        ConnectorController.removeConnectorId(namespace);\n      } else {\n        ConnectorController.resetConnectorIds();\n      }\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'DISCONNECT_SUCCESS',\n        properties: {\n          namespace: namespace || 'all'\n        }\n      });\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error.message || 'Failed to disconnect chains');\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'DISCONNECT_ERROR',\n        properties: {\n          message: error.message || 'Failed to disconnect chains'\n        }\n      });\n    }\n  },\n  setIsSwitchingNamespace(isSwitchingNamespace) {\n    state.isSwitchingNamespace = isSwitchingNamespace;\n  },\n  getFirstCaipNetworkSupportsAuthConnector() {\n    const availableChains = [];\n    let firstCaipNetwork = undefined;\n    state.chains.forEach(chain => {\n      if (CommonConstantsUtil.AUTH_CONNECTOR_SUPPORTED_CHAINS.find(ns => ns === chain.namespace)) {\n        if (chain.namespace) {\n          availableChains.push(chain.namespace);\n        }\n      }\n    });\n    if (availableChains.length > 0) {\n      const firstAvailableChain = availableChains[0];\n      firstCaipNetwork = firstAvailableChain ? state.chains.get(firstAvailableChain)?.caipNetworks?.[0] : undefined;\n      return firstCaipNetwork;\n    }\n    return undefined;\n  },\n  getAccountData(chainNamespace) {\n    if (!chainNamespace) {\n      return AccountController.state;\n    }\n    return ChainController.state.chains.get(chainNamespace)?.accountState;\n  },\n  getNetworkData(chainNamespace) {\n    const namespace = chainNamespace || state.activeChain;\n    if (!namespace) {\n      return undefined;\n    }\n    return ChainController.state.chains.get(namespace)?.networkState;\n  },\n  getCaipNetworkByNamespace(chainNamespace, chainId) {\n    if (!chainNamespace) {\n      return undefined;\n    }\n    const chain = ChainController.state.chains.get(chainNamespace);\n    const byChainId = chain?.caipNetworks?.find(network => network.id === chainId);\n    if (byChainId) {\n      return byChainId;\n    }\n    return chain?.networkState?.caipNetwork || chain?.caipNetworks?.[0];\n  },\n  /**\n   * Get the requested CaipNetwork IDs for a given namespace. If namespace is not provided, all requested CaipNetwork IDs will be returned\n   * @param namespace - The namespace to get the requested CaipNetwork IDs for\n   * @returns The requested CaipNetwork IDs\n   */\n  getRequestedCaipNetworkIds() {\n    const namespace = ConnectorController.state.filterByNamespace;\n    const chains = namespace ? [state.chains.get(namespace)] : Array.from(state.chains.values());\n    return chains.flatMap(chain => chain?.caipNetworks || []).map(caipNetwork => caipNetwork.caipNetworkId);\n  }\n};","map":{"version":3,"names":["proxy","subscribe","sub","proxyMap","subscribeKey","subKey","ConstantsUtil","CommonConstantsUtil","NetworkUtil","getChainsToDisconnect","CoreHelperUtil","StorageUtil","AccountController","ConnectionController","ConnectorController","EventsController","ModalController","OptionsController","PublicStateController","RouterController","SendController","accountState","currentTab","tokenBalance","smartAccountDeployed","addressLabels","Map","allAccounts","user","undefined","networkState","caipNetwork","supportsAllNetworks","smartAccountEnabledNetworks","state","chains","activeCaipAddress","activeChain","activeCaipNetwork","noAdapters","universalAdapter","networkControllerClient","connectionControllerClient","isSwitchingNamespace","ChainController","callback","key","subscribeChainProp","property","chain","prev","nextValue","get","initialize","adapters","caipNetworks","clients","chainId","activeChainId","namespace","activeNamespace","getActiveNetworkProps","find","network","id","toString","defaultAdapter","adapter","adapterToActivate","namespaces","Set","map","chainNamespace","length","setChainNetworkData","set","forEach","namespaceNetworks","filter","setRequestedCaipNetworks","removeAdapter","nextAdapter","Array","from","entries","_ref","setActiveCaipNetwork","delete","addAdapter","_ref2","addNetwork","chainAdapter","newNetworks","push","removeNetwork","networkId","isActiveNetwork","newCaipNetworksOfAdapter","setAdapterNetworkState","props","setChainAccountData","accountProps","_unknown","arguments","Error","newAccountState","size","caipAddress","replaceState","networkProps","newNetworkState","setAccountProp","prop","value","removeConnectorId","setActiveNamespace","newAdapter","setActiveCaipNetworkId","caipNetworkId","selectedNetworkId","setIsSwitchingNamespace","address","resetSend","isSupported","checkIfSupportedNetwork","enableNetworkSwitch","allowUnsupportedChain","wcBasic","showUnsupportedChainUI","addCaipNetwork","switchActiveNamespace","isDifferentChain","caipNetworkOfNamespace","getNetworkData","firstNetworkWithChain","getCaipNetworkByNamespace","switchActiveNetwork","activeAdapter","unsupportedNetwork","some","goBack","getNetworkControllerClient","switchCaipNetwork","sendEvent","type","event","properties","getConnectionControllerClient","_chain","getAccountProp","chainAccountState","getNetworkProp","chainNetworkState","getRequestedCaipNetworks","chainToFilter","approvedCaipNetworkIds","requestedCaipNetworks","sortedNetworks","sortRequestedNetworks","getAllRequestedCaipNetworks","getAllApprovedCaipNetworkIds","approvedIds","getApprovedCaipNetworkIds","getActiveCaipNetwork","getActiveCaipAddress","setApprovedCaipNetworksData","data","getApprovedCaipNetworksData","checkIfSupportedChainId","setSmartAccountEnabledNetworks","checkIfSmartAccountEnabled","caipNetworkIdToNumber","Boolean","includes","Number","getActiveNetworkTokenAddress","NATIVE_TOKEN_ADDRESS","open","view","checkIfNamesSupported","NAMES_SUPPORTED_CHAIN_NAMESPACES","resetNetwork","resetAccount","chainToWrite","balance","balanceSymbol","profileName","profileImage","addressExplorerUrl","connectedWalletInfo","preferredAccountType","socialProvider","socialWindow","farcasterUrl","status","disconnect","chainsToDisconnect","disconnectResults","Promise","allSettled","_ref3","ns","getAccountData","error","message","resetWcConnection","failures","result","f","reason","join","deleteConnectedSocialProvider","resetConnectorIds","console","getFirstCaipNetworkSupportsAuthConnector","availableChains","firstCaipNetwork","AUTH_CONNECTOR_SUPPORTED_CHAINS","firstAvailableChain","byChainId","getRequestedCaipNetworkIds","filterByNamespace","values","flatMap"],"sources":["../../../../src/controllers/ChainController.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}