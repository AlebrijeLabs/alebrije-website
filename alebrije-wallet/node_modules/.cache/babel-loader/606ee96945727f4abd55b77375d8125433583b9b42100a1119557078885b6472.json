{"ast":null,"code":"import { noChange as t } from \"../lit-html.js\";\nimport { isPrimitive as s } from \"../directive-helpers.js\";\nimport { AsyncDirective as i } from \"../async-directive.js\";\nimport { PseudoWeakRef as e, Pauser as r } from \"./private-async-helpers.js\";\nimport { directive as o } from \"../directive.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst n = t => !s(t) && \"function\" == typeof t.then,\n  h = 1073741823;\nclass c extends i {\n  constructor() {\n    super(...arguments), this._$Cwt = h, this._$Cbt = [], this._$CK = new e(this), this._$CX = new r();\n  }\n  render() {\n    for (var _len = arguments.length, s = new Array(_len), _key = 0; _key < _len; _key++) {\n      s[_key] = arguments[_key];\n    }\n    return s.find(t => !n(t)) ?? t;\n  }\n  update(s, i) {\n    const e = this._$Cbt;\n    let r = e.length;\n    this._$Cbt = i;\n    const o = this._$CK,\n      c = this._$CX;\n    this.isConnected || this.disconnected();\n    for (let t = 0; t < i.length && !(t > this._$Cwt); t++) {\n      const s = i[t];\n      if (!n(s)) return this._$Cwt = t, s;\n      t < r && s === e[t] || (this._$Cwt = h, r = 0, Promise.resolve(s).then(async t => {\n        for (; c.get();) await c.get();\n        const i = o.deref();\n        if (void 0 !== i) {\n          const e = i._$Cbt.indexOf(s);\n          e > -1 && e < i._$Cwt && (i._$Cwt = e, i.setValue(t));\n        }\n      }));\n    }\n    return t;\n  }\n  disconnected() {\n    this._$CK.disconnect(), this._$CX.pause();\n  }\n  reconnected() {\n    this._$CK.reconnect(this), this._$CX.resume();\n  }\n}\nconst m = o(c);\nexport { c as UntilDirective, m as until };","map":{"version":3,"names":["n","t","s","then","h","c","i","constructor","arguments","_$Cwt","_$Cbt","_$CK","e","_$CX","r","render","_len","length","Array","_key","find","update","o","isConnected","disconnected","Promise","resolve","get","deref","indexOf","setValue","disconnect","pause","reconnected","reconnect","resume","m","UntilDirective","until"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/node_modules/lit-html/src/directives/until.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Part, noChange} from '../lit-html.js';\nimport {isPrimitive} from '../directive-helpers.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\nimport {Pauser, PseudoWeakRef} from './private-async-helpers.js';\n\nconst isPromise = (x: unknown) => {\n  return !isPrimitive(x) && typeof (x as {then?: unknown}).then === 'function';\n};\n// Effectively infinity, but a SMI.\nconst _infinity = 0x3fffffff;\n\nexport class UntilDirective extends AsyncDirective {\n  private __lastRenderedIndex: number = _infinity;\n  private __values: unknown[] = [];\n  private __weakThis = new PseudoWeakRef(this);\n  private __pauser = new Pauser();\n\n  render(...args: Array<unknown>): unknown {\n    return args.find((x) => !isPromise(x)) ?? noChange;\n  }\n\n  override update(_part: Part, args: Array<unknown>) {\n    const previousValues = this.__values;\n    let previousLength = previousValues.length;\n    this.__values = args;\n\n    const weakThis = this.__weakThis;\n    const pauser = this.__pauser;\n\n    // If our initial render occurs while disconnected, ensure that the pauser\n    // and weakThis are in the disconnected state\n    if (!this.isConnected) {\n      this.disconnected();\n    }\n\n    for (let i = 0; i < args.length; i++) {\n      // If we've rendered a higher-priority value already, stop.\n      if (i > this.__lastRenderedIndex) {\n        break;\n      }\n\n      const value = args[i];\n\n      // Render non-Promise values immediately\n      if (!isPromise(value)) {\n        this.__lastRenderedIndex = i;\n        // Since a lower-priority value will never overwrite a higher-priority\n        // synchronous value, we can stop processing now.\n        return value;\n      }\n\n      // If this is a Promise we've already handled, skip it.\n      if (i < previousLength && value === previousValues[i]) {\n        continue;\n      }\n\n      // We have a Promise that we haven't seen before, so priorities may have\n      // changed. Forget what we rendered before.\n      this.__lastRenderedIndex = _infinity;\n      previousLength = 0;\n\n      // Note, the callback avoids closing over `this` so that the directive\n      // can be gc'ed before the promise resolves; instead `this` is retrieved\n      // from `weakThis`, which can break the hard reference in the closure when\n      // the directive disconnects\n      Promise.resolve(value).then(async (result: unknown) => {\n        // If we're disconnected, wait until we're (maybe) reconnected\n        // The while loop here handles the case that the connection state\n        // thrashes, causing the pauser to resume and then get re-paused\n        while (pauser.get()) {\n          await pauser.get();\n        }\n        // If the callback gets here and there is no `this`, it means that the\n        // directive has been disconnected and garbage collected and we don't\n        // need to do anything else\n        const _this = weakThis.deref();\n        if (_this !== undefined) {\n          const index = _this.__values.indexOf(value);\n          // If state.values doesn't contain the value, we've re-rendered without\n          // the value, so don't render it. Then, only render if the value is\n          // higher-priority than what's already been rendered.\n          if (index > -1 && index < _this.__lastRenderedIndex) {\n            _this.__lastRenderedIndex = index;\n            _this.setValue(result);\n          }\n        }\n      });\n    }\n\n    return noChange;\n  }\n\n  override disconnected() {\n    this.__weakThis.disconnect();\n    this.__pauser.pause();\n  }\n\n  override reconnected() {\n    this.__weakThis.reconnect(this);\n    this.__pauser.resume();\n  }\n}\n\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n * ```js\n * const content = fetch('./content.txt').then(r => r.text());\n * html`${until(content, html`<span>Loading...</span>`)}`\n * ```\n */\nexport const until = directive(UntilDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\n// export type {UntilDirective};\n"],"mappings":";;;;;;;;;;AAWA,MAAMA,CAAA,GAAaC,CAAA,KACTC,CAAA,CAAYD,CAAA,KAA8C,qBAAhCA,CAAA,CAAuBE,IAAA;EAGrDC,CAAA,GAAY;AAEZ,MAAOC,CAAA,SAAuBC,CAAA;EAApCC,YAAA;IAAA,SAAAC,SAAA,GACU,KAAmBC,KAAA,GAAWL,CAAA,EAC9B,KAAQM,KAAA,GAAc,IACtB,KAAAC,IAAA,GAAa,IAAIC,CAAA,CAAc,OAC/B,KAAAC,IAAA,GAAW,IAAIC,CAsFxB,CAtFwB,CAsFxB;EAAA;EApFCC,OAAA,EAAU;IAAA,SAAAC,IAAA,GAAAR,SAAA,CAAAS,MAAA,EAAAf,CAAA,OAAAgB,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;MAAAjB,CAAA,CAAAiB,IAAA,IAAAX,SAAA,CAAAW,IAAA;IAAA;IACR,OAAOjB,CAAA,CAAKkB,IAAA,CAAMnB,CAAA,KAAOD,CAAA,CAAUC,CAAA,MAAOA,CAC3C;EAAA;EAEQoB,OAAOnB,CAAA,EAAaI,CAAA;IAC3B,MAAMM,CAAA,GAAiB,KAAKF,KAAA;IAC5B,IAAII,CAAA,GAAiBF,CAAA,CAAeK,MAAA;IACpC,KAAKP,KAAA,GAAWJ,CAAA;IAEhB,MAAMgB,CAAA,GAAW,KAAKX,IAAA;MAChBN,CAAA,GAAS,KAAKQ,IAAA;IAIf,KAAKU,WAAA,IACR,KAAKC,YAAA;IAGP,KAAK,IAAIvB,CAAA,GAAI,GAAGA,CAAA,GAAIK,CAAA,CAAKW,MAAA,MAEnBhB,CAAA,GAAI,KAAKQ,KAAA,GAFkBR,CAAA,IAAK;MAMpC,MAAMC,CAAA,GAAQI,CAAA,CAAKL,CAAA;MAGnB,KAAKD,CAAA,CAAUE,CAAA,GAIb,OAHA,KAAKO,KAAA,GAAsBR,CAAA,EAGpBC,CAAA;MAILD,CAAA,GAAIa,CAAA,IAAkBZ,CAAA,KAAUU,CAAA,CAAeX,CAAA,MAMnD,KAAKQ,KAAA,GAAsBL,CAAA,EAC3BU,CAAA,GAAiB,GAMjBW,OAAA,CAAQC,OAAA,CAAQxB,CAAA,EAAOC,IAAA,CAAK,MAAOF,CAAA;QAIjC,OAAOI,CAAA,CAAOsB,GAAA,WACNtB,CAAA,CAAOsB,GAAA;QAKf,MAAMrB,CAAA,GAAQgB,CAAA,CAASM,KAAA;QACvB,SAAc,MAAVtB,CAAA,EAAqB;UACvB,MAAMM,CAAA,GAAQN,CAAA,CAAMI,KAAA,CAASmB,OAAA,CAAQ3B,CAAA;UAIjCU,CAAA,IAAS,KAAKA,CAAA,GAAQN,CAAA,CAAMG,KAAA,KAC9BH,CAAA,CAAMG,KAAA,GAAsBG,CAAA,EAC5BN,CAAA,CAAMwB,QAAA,CAAS7B,CAAA,EAElB;QAAA;MAAA,GAEJ;IAAA;IAED,OAAOA,CACR;EAAA;EAEQuB,aAAA;IACP,KAAKb,IAAA,CAAWoB,UAAA,IAChB,KAAKlB,IAAA,CAASmB,KAAA,EACf;EAAA;EAEQC,YAAA;IACP,KAAKtB,IAAA,CAAWuB,SAAA,CAAU,OAC1B,KAAKrB,IAAA,CAASsB,MAAA,EACf;EAAA;AAAA;AAAA,MAwBUC,CAAA,GAAQd,CAAA,CAAUjB,CAAA;AAAA,SAAAA,CAAA,IAAAgC,cAAA,EAAAD,CAAA,IAAAE,KAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}