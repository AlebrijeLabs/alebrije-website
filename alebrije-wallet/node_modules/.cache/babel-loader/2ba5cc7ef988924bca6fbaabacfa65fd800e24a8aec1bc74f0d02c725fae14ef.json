{"ast":null,"code":"import { ConstantsUtil } from '@reown/appkit-common';\nimport { ApiController, ChainController, ConnectionController, ConnectorController, CoreHelperUtil, OptionsController, StorageUtil } from '@reown/appkit-controllers';\nimport { HelpersUtil } from '@reown/appkit-utils';\nimport { WalletUtil } from './WalletUtil.js';\nexport const ConnectorUtil = {\n  getConnectorsByType(connectors, recommended, featured) {\n    const {\n      customWallets\n    } = OptionsController.state;\n    const recent = StorageUtil.getRecentWallets();\n    const filteredRecommended = WalletUtil.filterOutDuplicateWallets(recommended);\n    const filteredFeatured = WalletUtil.filterOutDuplicateWallets(featured);\n    const multiChain = connectors.filter(connector => connector.type === 'MULTI_CHAIN');\n    const announced = connectors.filter(connector => connector.type === 'ANNOUNCED');\n    const injected = connectors.filter(connector => connector.type === 'INJECTED');\n    const external = connectors.filter(connector => connector.type === 'EXTERNAL');\n    return {\n      custom: customWallets,\n      recent,\n      external,\n      multiChain,\n      announced,\n      injected,\n      recommended: filteredRecommended,\n      featured: filteredFeatured\n    };\n  },\n  showConnector(connector) {\n    const rdns = connector.info?.rdns;\n    const isRDNSExcluded = Boolean(rdns) && ApiController.state.excludedWallets.some(wallet => wallet.rdns === rdns);\n    const isNameExcluded = Boolean(connector.name) && ApiController.state.excludedWallets.some(wallet => HelpersUtil.isLowerCaseMatch(wallet.name, connector.name));\n    if (connector.type === 'INJECTED') {\n      if (!CoreHelperUtil.isMobile() && connector.name === 'Browser Wallet') {\n        return false;\n      }\n      if (!rdns && !ConnectionController.checkInstalled()) {\n        return false;\n      }\n      if (isRDNSExcluded || isNameExcluded) {\n        return false;\n      }\n    }\n    if (connector.type === 'ANNOUNCED' && (isRDNSExcluded || isNameExcluded)) {\n      return false;\n    }\n    return true;\n  },\n  getIsConnectedWithWC() {\n    const chains = Array.from(ChainController.state.chains.values());\n    const isConnectedWithWC = chains.some(chain => {\n      const connectorId = ConnectorController.getConnectorId(chain.namespace);\n      return connectorId === ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT;\n    });\n    return isConnectedWithWC;\n  },\n  getConnectorTypeOrder(_ref) {\n    let {\n      recommended,\n      featured,\n      custom,\n      recent,\n      announced,\n      injected,\n      multiChain,\n      external,\n      overriddenConnectors = OptionsController.state.features?.connectorTypeOrder ?? []\n    } = _ref;\n    const isConnectedWithWC = ConnectorUtil.getIsConnectedWithWC();\n    const isWCEnabled = OptionsController.state.enableWalletConnect;\n    const allConnectors = [{\n      type: 'walletConnect',\n      isEnabled: isWCEnabled && !isConnectedWithWC\n    }, {\n      type: 'recent',\n      isEnabled: recent.length > 0\n    }, {\n      type: 'injected',\n      isEnabled: [...injected, ...announced, ...multiChain].length > 0\n    }, {\n      type: 'featured',\n      isEnabled: featured.length > 0\n    }, {\n      type: 'custom',\n      isEnabled: custom && custom.length > 0\n    }, {\n      type: 'external',\n      isEnabled: external.length > 0\n    }, {\n      type: 'recommended',\n      isEnabled: recommended.length > 0\n    }];\n    const enabledConnectors = allConnectors.filter(option => option.isEnabled);\n    const enabledConnectorTypes = new Set(enabledConnectors.map(option => option.type));\n    const prioritizedConnectors = overriddenConnectors.filter(type => enabledConnectorTypes.has(type)).map(type => ({\n      type,\n      isEnabled: true\n    }));\n    const remainingConnectors = enabledConnectors.filter(_ref2 => {\n      let {\n        type: enabledConnectorType\n      } = _ref2;\n      const hasPrioritizedConnector = prioritizedConnectors.some(_ref3 => {\n        let {\n          type: prioritizedConnectorType\n        } = _ref3;\n        return prioritizedConnectorType === enabledConnectorType;\n      });\n      return !hasPrioritizedConnector;\n    });\n    return Array.from(new Set([...prioritizedConnectors, ...remainingConnectors].map(_ref4 => {\n      let {\n        type\n      } = _ref4;\n      return type;\n    })));\n  }\n};","map":{"version":3,"names":["ConstantsUtil","ApiController","ChainController","ConnectionController","ConnectorController","CoreHelperUtil","OptionsController","StorageUtil","HelpersUtil","WalletUtil","ConnectorUtil","getConnectorsByType","connectors","recommended","featured","customWallets","state","recent","getRecentWallets","filteredRecommended","filterOutDuplicateWallets","filteredFeatured","multiChain","filter","connector","type","announced","injected","external","custom","showConnector","rdns","info","isRDNSExcluded","Boolean","excludedWallets","some","wallet","isNameExcluded","name","isLowerCaseMatch","isMobile","checkInstalled","getIsConnectedWithWC","chains","Array","from","values","isConnectedWithWC","chain","connectorId","getConnectorId","namespace","CONNECTOR_ID","WALLET_CONNECT","getConnectorTypeOrder","_ref","overriddenConnectors","features","connectorTypeOrder","isWCEnabled","enableWalletConnect","allConnectors","isEnabled","length","enabledConnectors","option","enabledConnectorTypes","Set","map","prioritizedConnectors","has","remainingConnectors","_ref2","enabledConnectorType","hasPrioritizedConnector","_ref3","prioritizedConnectorType","_ref4"],"sources":["../../../../src/utils/ConnectorUtil.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}