{"ast":null,"code":"// -- Types --------------------------------------------- //\nimport { NumberUtil } from '@reown/appkit-common';\n// -- Util ---------------------------------------- //\nexport const SwapCalculationUtil = {\n  getGasPriceInEther(gas, gasPrice) {\n    const totalGasCostInWei = gasPrice * gas;\n    const totalGasCostInEther = Number(totalGasCostInWei) / 1e18;\n    return totalGasCostInEther;\n  },\n  getGasPriceInUSD(networkPrice, gas, gasPrice) {\n    const totalGasCostInEther = SwapCalculationUtil.getGasPriceInEther(gas, gasPrice);\n    const networkPriceInUSD = NumberUtil.bigNumber(networkPrice);\n    const gasCostInUSD = networkPriceInUSD.times(totalGasCostInEther);\n    return gasCostInUSD.toNumber();\n  },\n  getPriceImpact(_ref) {\n    let {\n      sourceTokenAmount,\n      sourceTokenPriceInUSD,\n      toTokenPriceInUSD,\n      toTokenAmount\n    } = _ref;\n    const inputValue = NumberUtil.bigNumber(sourceTokenAmount).times(sourceTokenPriceInUSD);\n    const outputValue = NumberUtil.bigNumber(toTokenAmount).times(toTokenPriceInUSD);\n    const priceImpact = inputValue.minus(outputValue).div(inputValue).times(100);\n    return priceImpact.toNumber();\n  },\n  getMaxSlippage(slippage, toTokenAmount) {\n    const slippageToleranceDecimal = NumberUtil.bigNumber(slippage).div(100);\n    const maxSlippageAmount = NumberUtil.multiply(toTokenAmount, slippageToleranceDecimal);\n    return maxSlippageAmount.toNumber();\n  },\n  getProviderFee(sourceTokenAmount) {\n    let feePercentage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.0085;\n    const providerFee = NumberUtil.bigNumber(sourceTokenAmount).times(feePercentage);\n    return providerFee.toString();\n  },\n  isInsufficientNetworkTokenForGas(networkBalanceInUSD, gasPriceInUSD) {\n    const gasPrice = gasPriceInUSD || '0';\n    if (NumberUtil.bigNumber(networkBalanceInUSD).eq(0)) {\n      return true;\n    }\n    return NumberUtil.bigNumber(NumberUtil.bigNumber(gasPrice)).gt(networkBalanceInUSD);\n  },\n  isInsufficientSourceTokenForSwap(sourceTokenAmount, sourceTokenAddress, balance) {\n    const sourceTokenBalance = balance?.find(token => token.address === sourceTokenAddress)?.quantity?.numeric;\n    const isInSufficientBalance = NumberUtil.bigNumber(sourceTokenBalance || '0').lt(sourceTokenAmount);\n    return isInSufficientBalance;\n  },\n  getToTokenAmount(_ref2) {\n    let {\n      sourceToken,\n      toToken,\n      sourceTokenPrice,\n      toTokenPrice,\n      sourceTokenAmount\n    } = _ref2;\n    if (sourceTokenAmount === '0') {\n      return '0';\n    }\n    if (!sourceToken || !toToken) {\n      return '0';\n    }\n    const sourceTokenDecimals = sourceToken.decimals;\n    const sourceTokenPriceInUSD = sourceTokenPrice;\n    const toTokenDecimals = toToken.decimals;\n    const toTokenPriceInUSD = toTokenPrice;\n    if (toTokenPriceInUSD <= 0) {\n      return '0';\n    }\n    // Calculate the provider fee (0.85% of the source token amount)\n    const providerFee = NumberUtil.bigNumber(sourceTokenAmount).times(0.0085);\n    // Adjust the source token amount by subtracting the provider fee\n    const adjustedSourceTokenAmount = NumberUtil.bigNumber(sourceTokenAmount).minus(providerFee);\n    // Proceed with conversion using the adjusted source token amount\n    const sourceAmountInSmallestUnit = adjustedSourceTokenAmount.times(NumberUtil.bigNumber(10).pow(sourceTokenDecimals));\n    const priceRatio = NumberUtil.bigNumber(sourceTokenPriceInUSD).div(toTokenPriceInUSD);\n    const decimalDifference = sourceTokenDecimals - toTokenDecimals;\n    const toTokenAmountInSmallestUnit = sourceAmountInSmallestUnit.times(priceRatio).div(NumberUtil.bigNumber(10).pow(decimalDifference));\n    const toTokenAmount = toTokenAmountInSmallestUnit.div(NumberUtil.bigNumber(10).pow(toTokenDecimals));\n    const amount = toTokenAmount.toFixed(toTokenDecimals).toString();\n    return amount;\n  }\n};","map":{"version":3,"names":["NumberUtil","SwapCalculationUtil","getGasPriceInEther","gas","gasPrice","totalGasCostInWei","totalGasCostInEther","Number","getGasPriceInUSD","networkPrice","networkPriceInUSD","bigNumber","gasCostInUSD","times","toNumber","getPriceImpact","_ref","sourceTokenAmount","sourceTokenPriceInUSD","toTokenPriceInUSD","toTokenAmount","inputValue","outputValue","priceImpact","minus","div","getMaxSlippage","slippage","slippageToleranceDecimal","maxSlippageAmount","multiply","getProviderFee","feePercentage","arguments","length","undefined","providerFee","toString","isInsufficientNetworkTokenForGas","networkBalanceInUSD","gasPriceInUSD","eq","gt","isInsufficientSourceTokenForSwap","sourceTokenAddress","balance","sourceTokenBalance","find","token","address","quantity","numeric","isInSufficientBalance","lt","getToTokenAmount","_ref2","sourceToken","toToken","sourceTokenPrice","toTokenPrice","sourceTokenDecimals","decimals","toTokenDecimals","adjustedSourceTokenAmount","sourceAmountInSmallestUnit","pow","priceRatio","decimalDifference","toTokenAmountInSmallestUnit","amount","toFixed"],"sources":["../../../../src/utils/SwapCalculationUtil.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}