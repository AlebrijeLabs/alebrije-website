{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Button,Alert}from'react-bootstrap';import WalletService from'../services/wallet-service';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WalletConnect=()=>{const[isConnecting,setIsConnecting]=useState(false);const[error,setError]=useState(null);const[accounts,setAccounts]=useState([]);const[copied,setCopied]=useState(false);useEffect(()=>{if(WalletService.isConnected()){setAccounts(WalletService.getAccounts());}},[]);const handleConnect=async()=>{setIsConnecting(true);setError(null);try{const success=await WalletService.connect();if(success){setAccounts(WalletService.getAccounts());}else{setError('Failed to connect wallet');}}catch(err){setError(err.message||'An error occurred while connecting');console.error('Connection error:',err);}finally{setIsConnecting(false);}};const handleDisconnect=async()=>{await WalletService.disconnect();setAccounts([]);};const formatAddress=address=>{if(!address)return'';return`${address.substring(0,6)}...${address.substring(address.length-4)}`;};const handleCopy=async address=>{await navigator.clipboard.writeText(address);setCopied(true);setTimeout(()=>setCopied(false),2000);};if(!accounts.length){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center p-5\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Connect Your Wallet\"}),/*#__PURE__*/_jsx(\"p\",{className:\"lead mb-4\",children:\"Connect your Solana wallet to access the Alebrije token functionalities.\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleConnect,disabled:isConnecting,children:isConnecting?'Connecting...':'Connect Wallet'}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",className:\"mt-3\",children:error})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"me-2\",children:\"Connected: \"}),/*#__PURE__*/_jsx(\"span\",{className:\"address me-2\",onClick:()=>handleCopy(accounts[0]),children:formatAddress(accounts[0])}),/*#__PURE__*/_jsx(Button,{variant:\"outline-danger\",size:\"sm\",onClick:handleDisconnect,children:\"Disconnect\"})]});};export default WalletConnect;","map":{"version":3,"names":["React","useState","useEffect","Button","Alert","WalletService","jsx","_jsx","jsxs","_jsxs","WalletConnect","isConnecting","setIsConnecting","error","setError","accounts","setAccounts","copied","setCopied","isConnected","getAccounts","handleConnect","success","connect","err","message","console","handleDisconnect","disconnect","formatAddress","address","substring","length","handleCopy","navigator","clipboard","writeText","setTimeout","className","children","variant","onClick","disabled","size"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/WalletConnect.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Alert } from 'react-bootstrap';\nimport WalletService from '../services/wallet-service';\n\nconst WalletConnect = () => {\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [copied, setCopied] = useState(false);\n  \n  useEffect(() => {\n    if (WalletService.isConnected()) {\n      setAccounts(WalletService.getAccounts());\n    }\n  }, []);\n  \n  const handleConnect = async () => {\n    setIsConnecting(true);\n    setError(null);\n    \n    try {\n      const success = await WalletService.connect();\n      if (success) {\n        setAccounts(WalletService.getAccounts());\n      } else {\n        setError('Failed to connect wallet');\n      }\n    } catch (err) {\n      setError(err.message || 'An error occurred while connecting');\n      console.error('Connection error:', err);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  \n  const handleDisconnect = async () => {\n    await WalletService.disconnect();\n    setAccounts([]);\n  };\n  \n  const formatAddress = (address) => {\n    if (!address) return '';\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n\n  const handleCopy = async (address) => {\n    await navigator.clipboard.writeText(address);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n  \n  if (!accounts.length) {\n    return (\n      <div className=\"text-center p-5\">\n        <h2>Connect Your Wallet</h2>\n        <p className=\"lead mb-4\">\n          Connect your Solana wallet to access the Alebrije token functionalities.\n        </p>\n        <Button \n          variant=\"primary\" \n          onClick={handleConnect}\n          disabled={isConnecting}\n        >\n          {isConnecting ? 'Connecting...' : 'Connect Wallet'}\n        </Button>\n        {error && <Alert variant=\"danger\" className=\"mt-3\">{error}</Alert>}\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"d-flex align-items-center\">\n      <span className=\"me-2\">Connected: </span>\n      <span className=\"address me-2\" onClick={() => handleCopy(accounts[0])}>\n        {formatAddress(accounts[0])}\n      </span>\n      <Button \n        variant=\"outline-danger\" \n        size=\"sm\"\n        onClick={handleDisconnect}\n      >\n        Disconnect\n      </Button>\n    </div>\n  );\n};\n\nexport default WalletConnect; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}