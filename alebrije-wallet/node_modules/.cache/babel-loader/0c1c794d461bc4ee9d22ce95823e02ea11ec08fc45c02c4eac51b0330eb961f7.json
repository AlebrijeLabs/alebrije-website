{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Card,Spinner,Button}from'react-bootstrap';import TokenService from'../services/token-service';import WalletService from'../services/wallet-service';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const TokenBalance=_ref=>{let{tokenName}=_ref;const[balance,setBalance]=useState(null);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[tokenInfo,setTokenInfo]=useState(null);const loadBalance=async()=>{if(!WalletService.isConnected()){setError('Wallet not connected');return;}setIsLoading(true);setError(null);try{const account=WalletService.getCurrentAccount();const balanceValue=await TokenService.getBalance(tokenName,account);setBalance(balanceValue);// Get token info if not already loaded\nif(!tokenInfo){const info=TokenService.getTokenInfo(tokenName);if(info){setTokenInfo(info);}}}catch(err){setError(err.message||'Failed to load balance');console.error('Balance loading error:',err);}finally{setIsLoading(false);}};useEffect(()=>{if(WalletService.isConnected()){loadBalance();}// Subscribe to account changes\nconst unsubscribe=WalletService.onAccountsChanged(()=>{loadBalance();});return()=>{if(unsubscribe)unsubscribe();};},[tokenName]);if(!WalletService.isConnected()){return/*#__PURE__*/_jsx(Card,{className:\"token-balance-card\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Card.Title,{children:[tokenName||'Token',\" Balance\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-muted\",children:\"Connect your wallet to view balance\"})]})});}return/*#__PURE__*/_jsx(Card,{className:\"token-balance-card\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Card.Title,{children:[(tokenInfo===null||tokenInfo===void 0?void 0:tokenInfo.symbol)||tokenName||'Token',\" Balance\",/*#__PURE__*/_jsx(Button,{variant:\"link\",size:\"sm\",className:\"refresh-button\",onClick:loadBalance,disabled:isLoading,children:\"\\uD83D\\uDD04\"})]}),isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"sm\"})}):error?/*#__PURE__*/_jsx(\"div\",{className:\"text-danger\",children:error}):/*#__PURE__*/_jsxs(\"div\",{className:\"balance-display\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"balance-amount\",children:balance||'0'}),/*#__PURE__*/_jsx(\"span\",{className:\"balance-symbol\",children:(tokenInfo===null||tokenInfo===void 0?void 0:tokenInfo.symbol)||tokenName})]}),tokenInfo&&/*#__PURE__*/_jsx(\"div\",{className:\"token-info\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[tokenInfo.name,\" \\u2022 \",tokenInfo.decimals,\" decimals\"]})})]})});};export default TokenBalance;","map":{"version":3,"names":["React","useState","useEffect","Card","Spinner","Button","TokenService","WalletService","jsxs","_jsxs","jsx","_jsx","TokenBalance","_ref","tokenName","balance","setBalance","isLoading","setIsLoading","error","setError","tokenInfo","setTokenInfo","loadBalance","isConnected","account","getCurrentAccount","balanceValue","getBalance","info","getTokenInfo","err","message","console","unsubscribe","onAccountsChanged","className","children","Body","Title","symbol","variant","size","onClick","disabled","animation","name","decimals"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/TokenBalance.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Spinner, Button } from 'react-bootstrap';\nimport TokenService from '../services/token-service';\nimport WalletService from '../services/wallet-service';\n\nconst TokenBalance = ({ tokenName }) => {\n  const [balance, setBalance] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [tokenInfo, setTokenInfo] = useState(null);\n  \n  const loadBalance = async () => {\n    if (!WalletService.isConnected()) {\n      setError('Wallet not connected');\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const account = WalletService.getCurrentAccount();\n      const balanceValue = await TokenService.getBalance(tokenName, account);\n      setBalance(balanceValue);\n      \n      // Get token info if not already loaded\n      if (!tokenInfo) {\n        const info = TokenService.getTokenInfo(tokenName);\n        if (info) {\n          setTokenInfo(info);\n        }\n      }\n    } catch (err) {\n      setError(err.message || 'Failed to load balance');\n      console.error('Balance loading error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  useEffect(() => {\n    if (WalletService.isConnected()) {\n      loadBalance();\n    }\n    \n    // Subscribe to account changes\n    const unsubscribe = WalletService.onAccountsChanged(() => {\n      loadBalance();\n    });\n    \n    return () => {\n      if (unsubscribe) unsubscribe();\n    };\n  }, [tokenName]);\n  \n  if (!WalletService.isConnected()) {\n    return (\n      <Card className=\"token-balance-card\">\n        <Card.Body>\n          <Card.Title>{tokenName || 'Token'} Balance</Card.Title>\n          <div className=\"text-center text-muted\">\n            Connect your wallet to view balance\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n  \n  return (\n    <Card className=\"token-balance-card\">\n      <Card.Body>\n        <Card.Title>\n          {tokenInfo?.symbol || tokenName || 'Token'} Balance\n          <Button \n            variant=\"link\" \n            size=\"sm\" \n            className=\"refresh-button\"\n            onClick={loadBalance}\n            disabled={isLoading}\n          >\n            ðŸ”„\n          </Button>\n        </Card.Title>\n        \n        {isLoading ? (\n          <div className=\"text-center\">\n            <Spinner animation=\"border\" size=\"sm\" />\n          </div>\n        ) : error ? (\n          <div className=\"text-danger\">{error}</div>\n        ) : (\n          <div className=\"balance-display\">\n            <span className=\"balance-amount\">{balance || '0'}</span>\n            <span className=\"balance-symbol\">{tokenInfo?.symbol || tokenName}</span>\n          </div>\n        )}\n        \n        {tokenInfo && (\n          <div className=\"token-info\">\n            <small className=\"text-muted\">\n              {tokenInfo.name} â€¢ {tokenInfo.decimals} decimals\n            </small>\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TokenBalance; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}