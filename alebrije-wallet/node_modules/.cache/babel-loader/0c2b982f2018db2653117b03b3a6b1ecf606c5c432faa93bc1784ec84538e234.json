{"ast":null,"code":"import React from'react';/**\n * Error types for the Alebrije wallet\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const ErrorTypes={CONNECTION:'CONNECTION_ERROR',TRANSACTION:'TRANSACTION_ERROR',CONTRACT:'CONTRACT_ERROR',WALLET:'WALLET_ERROR',NETWORK:'NETWORK_ERROR',USER:'USER_ERROR',UNKNOWN:'UNKNOWN_ERROR'};/**\n * Custom error class for Alebrije wallet\n */export class AlebrijeError extends Error{constructor(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:ErrorTypes.UNKNOWN;let originalError=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;super(message);this.name='AlebrijeError';this.type=type;this.originalError=originalError;this.timestamp=new Date();}/**\n   * Get a user-friendly error message\n   */getUserMessage(){switch(this.type){case ErrorTypes.CONNECTION:return'Failed to connect to the wallet. Please check your connection and try again.';case ErrorTypes.TRANSACTION:return'Transaction failed. Please check your balance and try again.';case ErrorTypes.CONTRACT:return'Contract interaction failed. Please try again later.';case ErrorTypes.WALLET:return'Wallet error. Please check your wallet configuration.';case ErrorTypes.NETWORK:return'Network error. Please check your internet connection.';case ErrorTypes.USER:return this.message;// User errors should already have a friendly message\ndefault:return'An unexpected error occurred. Please try again later.';}}/**\n   * Get technical details for debugging\n   */getTechnicalDetails(){return{type:this.type,message:this.message,timestamp:this.timestamp.toISOString(),originalError:this.originalError?{name:this.originalError.name,message:this.originalError.message,stack:this.originalError.stack}:null};}}/**\n * Handle wallet errors and convert them to AlebrijeError\n */export const handleWalletError=error=>{// Already an AlebrijeError, just return it\nif(error instanceof AlebrijeError){return error;}// Check error message to determine type\nconst message=error.message||'';if(message.includes('connect')||message.includes('provider')){return new AlebrijeError('Connection error',ErrorTypes.CONNECTION,error);}if(message.includes('transaction')||message.includes('fee')||message.includes('balance')||message.includes('gas')){return new AlebrijeError('Transaction error',ErrorTypes.TRANSACTION,error);}if(message.includes('contract')||message.includes('method')){return new AlebrijeError('Contract error',ErrorTypes.CONTRACT,error);}if(message.includes('network')||message.includes('internet')){return new AlebrijeError('Network error',ErrorTypes.NETWORK,error);}// Default to unknown error\nreturn new AlebrijeError('Unknown error',ErrorTypes.UNKNOWN,error);};/**\n * Error boundary HOC for React components\n */export const withErrorBoundary=(WrappedComponent,fallbackUI)=>{return class ErrorBoundary extends React.Component{constructor(props){super(props);this.state={hasError:false,error:null};}static getDerivedStateFromError(error){return{hasError:true,error:handleWalletError(error)};}componentDidCatch(error,errorInfo){console.error('Component error:',error);console.error('Error info:',errorInfo);}render(){if(this.state.hasError){if(typeof fallbackUI==='function'){return fallbackUI(this.state.error);}return/*#__PURE__*/_jsxs(\"div\",{className:\"error-boundary\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Something went wrong\"}),/*#__PURE__*/_jsx(\"p\",{children:this.state.error.getUserMessage()}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>this.setState({hasError:false,error:null}),children:\"Try Again\"})]});}return/*#__PURE__*/_jsx(WrappedComponent,{...this.props});}};};","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","ErrorTypes","CONNECTION","TRANSACTION","CONTRACT","WALLET","NETWORK","USER","UNKNOWN","AlebrijeError","Error","constructor","message","type","arguments","length","undefined","originalError","name","timestamp","Date","getUserMessage","getTechnicalDetails","toISOString","stack","handleWalletError","error","includes","withErrorBoundary","WrappedComponent","fallbackUI","ErrorBoundary","Component","props","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","console","render","className","children","onClick","setState"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/utils/error-handler.js"],"sourcesContent":["import React from 'react';\n\n/**\n * Error types for the Alebrije wallet\n */\nexport const ErrorTypes = {\n  CONNECTION: 'CONNECTION_ERROR',\n  TRANSACTION: 'TRANSACTION_ERROR',\n  CONTRACT: 'CONTRACT_ERROR',\n  WALLET: 'WALLET_ERROR',\n  NETWORK: 'NETWORK_ERROR',\n  USER: 'USER_ERROR',\n  UNKNOWN: 'UNKNOWN_ERROR'\n};\n\n/**\n * Custom error class for Alebrije wallet\n */\nexport class AlebrijeError extends Error {\n  constructor(message, type = ErrorTypes.UNKNOWN, originalError = null) {\n    super(message);\n    this.name = 'AlebrijeError';\n    this.type = type;\n    this.originalError = originalError;\n    this.timestamp = new Date();\n  }\n  \n  /**\n   * Get a user-friendly error message\n   */\n  getUserMessage() {\n    switch (this.type) {\n      case ErrorTypes.CONNECTION:\n        return 'Failed to connect to the wallet. Please check your connection and try again.';\n      \n      case ErrorTypes.TRANSACTION:\n        return 'Transaction failed. Please check your balance and try again.';\n      \n      case ErrorTypes.CONTRACT:\n        return 'Contract interaction failed. Please try again later.';\n      \n      case ErrorTypes.WALLET:\n        return 'Wallet error. Please check your wallet configuration.';\n      \n      case ErrorTypes.NETWORK:\n        return 'Network error. Please check your internet connection.';\n      \n      case ErrorTypes.USER:\n        return this.message; // User errors should already have a friendly message\n      \n      default:\n        return 'An unexpected error occurred. Please try again later.';\n    }\n  }\n  \n  /**\n   * Get technical details for debugging\n   */\n  getTechnicalDetails() {\n    return {\n      type: this.type,\n      message: this.message,\n      timestamp: this.timestamp.toISOString(),\n      originalError: this.originalError ? {\n        name: this.originalError.name,\n        message: this.originalError.message,\n        stack: this.originalError.stack\n      } : null\n    };\n  }\n}\n\n/**\n * Handle wallet errors and convert them to AlebrijeError\n */\nexport const handleWalletError = (error) => {\n  // Already an AlebrijeError, just return it\n  if (error instanceof AlebrijeError) {\n    return error;\n  }\n\n  // Check error message to determine type\n  const message = error.message || '';\n  \n  if (message.includes('connect') || message.includes('provider')) {\n    return new AlebrijeError('Connection error', ErrorTypes.CONNECTION, error);\n  }\n  \n  if (message.includes('transaction') || message.includes('fee') || \n      message.includes('balance') || message.includes('gas')) {\n    return new AlebrijeError('Transaction error', ErrorTypes.TRANSACTION, error);\n  }\n  \n  if (message.includes('contract') || message.includes('method')) {\n    return new AlebrijeError('Contract error', ErrorTypes.CONTRACT, error);\n  }\n  \n  if (message.includes('network') || message.includes('internet')) {\n    return new AlebrijeError('Network error', ErrorTypes.NETWORK, error);\n  }\n  \n  // Default to unknown error\n  return new AlebrijeError('Unknown error', ErrorTypes.UNKNOWN, error);\n};\n\n/**\n * Error boundary HOC for React components\n */\nexport const withErrorBoundary = (WrappedComponent, fallbackUI) => {\n  return class ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false, error: null };\n    }\n\n    static getDerivedStateFromError(error) {\n      return { hasError: true, error: handleWalletError(error) };\n    }\n\n    componentDidCatch(error, errorInfo) {\n      console.error('Component error:', error);\n      console.error('Error info:', errorInfo);\n    }\n\n    render() {\n      if (this.state.hasError) {\n        if (typeof fallbackUI === 'function') {\n          return fallbackUI(this.state.error);\n        }\n        \n        return (\n          <div className=\"error-boundary\">\n            <h3>Something went wrong</h3>\n            <p>{this.state.error.getUserMessage()}</p>\n            <button onClick={() => this.setState({ hasError: false, error: null })}>\n              Try Again\n            </button>\n          </div>\n        );\n      }\n\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}