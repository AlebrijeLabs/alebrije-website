{"ast":null,"code":"import React,{useState}from'react';import{Form,Button,Card,Alert,Spinner}from'react-bootstrap';import TokenService from'../services/token-service';import WalletService from'../services/wallet-service';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const TokenTransfer=_ref=>{let{tokenName}=_ref;const[recipient,setRecipient]=useState('');const[amount,setAmount]=useState('');const[isSubmitting,setIsSubmitting]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const handleSubmit=async e=>{e.preventDefault();if(!WalletService.isConnected()){setError('Wallet not connected');return;}if(!recipient||!amount){setError('Please fill in all fields');return;}// Basic address validation\nif(!recipient.match(/^0x[a-fA-F0-9]{40}$/)){setError('Invalid recipient address');return;}// Amount validation\nconst amountValue=parseFloat(amount);if(isNaN(amountValue)||amountValue<=0){setError('Invalid amount');return;}setIsSubmitting(true);setError(null);setSuccess(null);try{const result=await TokenService.transfer(tokenName,recipient,amountValue);setSuccess(`Successfully transferred ${amount} ${tokenName} to ${recipient.substring(0,6)}...${recipient.substring(recipient.length-4)}`);setRecipient('');setAmount('');console.log('Transfer result:',result);}catch(err){setError(err.message||'Transfer failed');console.error('Transfer error:',err);}finally{setIsSubmitting(false);}};if(!WalletService.isConnected()){return/*#__PURE__*/_jsx(Card,{className:\"token-transfer-card\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Card.Title,{children:[\"Transfer \",tokenName]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-muted\",children:\"Connect your wallet to make transfers\"})]})});}return/*#__PURE__*/_jsx(Card,{className:\"token-transfer-card\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Card.Title,{children:[\"Transfer \",tokenName]}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),success&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",children:success}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Recipient Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"0x...\",value:recipient,onChange:e=>setRecipient(e.target.value),disabled:isSubmitting})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Amount\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",placeholder:\"0.0\",step:\"0.000001\",min:\"0\",value:amount,onChange:e=>setAmount(e.target.value),disabled:isSubmitting})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",disabled:isSubmitting,className:\"w-100\",children:isSubmitting?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{as:\"span\",animation:\"border\",size:\"sm\",role:\"status\",\"aria-hidden\":\"true\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ms-2\",children:\"Processing...\"})]}):'Send Tokens'})]})]})});};export default TokenTransfer;","map":{"version":3,"names":["React","useState","Form","Button","Card","Alert","Spinner","TokenService","WalletService","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","TokenTransfer","_ref","tokenName","recipient","setRecipient","amount","setAmount","isSubmitting","setIsSubmitting","error","setError","success","setSuccess","handleSubmit","e","preventDefault","isConnected","match","amountValue","parseFloat","isNaN","result","transfer","substring","length","console","log","err","message","className","children","Body","Title","variant","onSubmit","Group","Label","Control","type","placeholder","value","onChange","target","disabled","step","min","as","animation","size","role"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/TokenTransfer.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button, Card, Alert, Spinner } from 'react-bootstrap';\nimport TokenService from '../services/token-service';\nimport WalletService from '../services/wallet-service';\n\nconst TokenTransfer = ({ tokenName }) => {\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!WalletService.isConnected()) {\n      setError('Wallet not connected');\n      return;\n    }\n    \n    if (!recipient || !amount) {\n      setError('Please fill in all fields');\n      return;\n    }\n    \n    // Basic address validation\n    if (!recipient.match(/^0x[a-fA-F0-9]{40}$/)) {\n      setError('Invalid recipient address');\n      return;\n    }\n    \n    // Amount validation\n    const amountValue = parseFloat(amount);\n    if (isNaN(amountValue) || amountValue <= 0) {\n      setError('Invalid amount');\n      return;\n    }\n    \n    setIsSubmitting(true);\n    setError(null);\n    setSuccess(null);\n    \n    try {\n      const result = await TokenService.transfer(tokenName, recipient, amountValue);\n      \n      setSuccess(`Successfully transferred ${amount} ${tokenName} to ${recipient.substring(0, 6)}...${recipient.substring(recipient.length - 4)}`);\n      setRecipient('');\n      setAmount('');\n      \n      console.log('Transfer result:', result);\n    } catch (err) {\n      setError(err.message || 'Transfer failed');\n      console.error('Transfer error:', err);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  if (!WalletService.isConnected()) {\n    return (\n      <Card className=\"token-transfer-card\">\n        <Card.Body>\n          <Card.Title>Transfer {tokenName}</Card.Title>\n          <div className=\"text-center text-muted\">\n            Connect your wallet to make transfers\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n  \n  return (\n    <Card className=\"token-transfer-card\">\n      <Card.Body>\n        <Card.Title>Transfer {tokenName}</Card.Title>\n        \n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {success && <Alert variant=\"success\">{success}</Alert>}\n        \n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Recipient Address</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"0x...\"\n              value={recipient}\n              onChange={(e) => setRecipient(e.target.value)}\n              disabled={isSubmitting}\n            />\n          </Form.Group>\n          \n          <Form.Group className=\"mb-3\">\n            <Form.Label>Amount</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"0.0\"\n              step=\"0.000001\"\n              min=\"0\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n              disabled={isSubmitting}\n            />\n          </Form.Group>\n          \n          <Button \n            variant=\"primary\" \n            type=\"submit\"\n            disabled={isSubmitting}\n            className=\"w-100\"\n          >\n            {isSubmitting ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                />\n                <span className=\"ms-2\">Processing...</span>\n              </>\n            ) : (\n              'Send Tokens'\n            )}\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TokenTransfer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}