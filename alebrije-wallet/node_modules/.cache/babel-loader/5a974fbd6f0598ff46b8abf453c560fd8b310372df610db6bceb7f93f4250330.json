{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useWallet}from'../contexts/WalletContext';import TokenService,{burnTokens}from'../services/token-service';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BurnToken=_ref=>{let{tokenAddress:propTokenAddress}=_ref;const{connected,currentAccount,publicKey,connection}=useWallet();const[tokenAddress,setTokenAddress]=useState(propTokenAddress||'');const[amount,setAmount]=useState('');const[tokenInfo,setTokenInfo]=useState(null);const[balance,setBalance]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const[result,setResult]=useState('');// Load token info and balance when token address changes\nuseEffect(()=>{if(connected&&currentAccount&&tokenAddress){loadTokenInfo();loadBalance();}},[connected,currentAccount,tokenAddress]);// Also update when propTokenAddress changes\nuseEffect(()=>{if(propTokenAddress){setTokenAddress(propTokenAddress);}},[propTokenAddress]);const loadTokenInfo=async()=>{if(!tokenAddress)return;try{setError(null);// Skip tokenInfo for native SOL\nif(isNativeToken(tokenAddress)){setTokenInfo({name:\"Solana\",symbol:\"SOL\",decimals:9,address:\"native\"});return;}const info=await TokenService.getTokenInfo(tokenAddress);setTokenInfo(info);}catch(err){console.error('Error loading token info:',err);setTokenInfo(null);setError(`Error loading token info: ${err.message}`);}};const loadBalance=async()=>{if(!connected||!currentAccount||!tokenAddress)return;try{// Handle native SOL differently\nif(isNativeToken(tokenAddress)){const balance=await TokenService.getNativeBalance(currentAccount);setBalance(balance);return;}const balance=await TokenService.getTokenBalance(tokenAddress,currentAccount);setBalance(balance);}catch(err){console.error('Error loading token balance:',err);setBalance(null);setError(`Error loading token balance: ${err.message}`);}};const handleTokenAddressChange=e=>{setTokenAddress(e.target.value);// Reset error when user changes the address\nsetError(null);};const isNativeToken=address=>{return address.toLowerCase()==='native'||address==='11111111111111111111111111111111';};const handleSubmit=async e=>{e.preventDefault();if(!connected||!publicKey){setError('Wallet not connected');return;}if(!tokenAddress){setError('Token address is required');return;}if(!amount||parseFloat(amount)<=0){setError('Amount must be greater than 0');return;}try{setLoading(true);setError(null);setSuccess(null);setResult('');console.log('Burning token:',tokenAddress,parseFloat(amount));// Use the wallet object from context\nconst walletAdapter=window.solana||window.solflare;if(!walletAdapter){throw new Error('No compatible wallet found. Please use Phantom or Solflare wallet.');}// Create a wallet object for the burnTokens function\nconst wallet={publicKey:publicKey,sendTransaction:async tx=>{var _window$solana;// For Phantom\nif((_window$solana=window.solana)!==null&&_window$solana!==void 0&&_window$solana.isPhantom){const signedTx=await window.solana.signTransaction(tx);const signature=await connection.sendRawTransaction(signedTx.serialize());return signature;}// For Solflare\nelse if(window.solflare){const signedTx=await window.solflare.signTransaction(tx);const signature=await connection.sendRawTransaction(signedTx.serialize());return signature;}throw new Error('No compatible wallet found');}};// Use the exported burnTokens function\nconst signature=await burnTokens(wallet,tokenAddress,parseFloat(amount));console.log('Burn result:',signature);setSuccess(`Burn successful! ${amount} tokens permanently removed from circulation. Signature: ${signature}`);setResult(`Token burn successful! Signature: ${signature}`);setAmount('');// Reload balance after burn\nsetTimeout(()=>{loadBalance();},2000);}catch(err){console.error('Burn error:',err);setError(`Burn failed: ${err.message}`);setResult(`Burn failed: ${err.message}`);}finally{setLoading(false);}};const handleMaxAmount=()=>{if(balance!==null){setAmount(balance.toString());}};// For native SOL, make it work without token info\nconst canBurn=connected&&(tokenInfo!==null||isNativeToken(tokenAddress))&&amount&&parseFloat(amount)>0;return/*#__PURE__*/_jsxs(\"div\",{className:\"burn-token-container p-4 border rounded\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Burn Tokens\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-warning\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Warning:\"}),\" Burning tokens permanently removes them from circulation. This action cannot be undone.\"]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Token Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:tokenAddress,onChange:handleTokenAddressChange,placeholder:\"Enter the mint address of the token you want to burn\"}),isNativeToken(tokenAddress)&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-info mt-2\",children:\"Native SOL token selected\"})]}),tokenInfo&&/*#__PURE__*/_jsx(\"div\",{className:\"card mb-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:tokenInfo.name}),/*#__PURE__*/_jsx(\"h6\",{className:\"card-subtitle mb-2 text-muted\",children:tokenInfo.symbol}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Decimals\"}),/*#__PURE__*/_jsx(\"p\",{children:tokenInfo.decimals})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Your Balance\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:balance!==null?`${balance} ${tokenInfo.symbol}`:'Loading balance...'})]})]})}),!connected&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-warning\",children:\"Please connect your wallet to burn tokens.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Amount to Burn\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-control\",value:amount,onChange:e=>setAmount(e.target.value),placeholder:\"Enter amount to burn\",step:\"any\",min:\"0\",disabled:!connected}),/*#__PURE__*/_jsx(\"span\",{className:\"input-group-text\",children:tokenInfo?tokenInfo.symbol:'Tokens'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-outline-secondary\",onClick:handleMaxAmount,disabled:!connected||balance===null,children:\"Max\"})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger mb-3\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-success mb-3\",children:success}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-danger w-100 mb-3\",disabled:loading||!connected||!canBurn,children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"spinner-border spinner-border-sm me-2\",role:\"status\",\"aria-hidden\":\"true\"}),\"Processing...\"]}):`Burn ${tokenInfo?tokenInfo.symbol:'Tokens'}`})]}),result&&/*#__PURE__*/_jsx(\"div\",{className:\"result\",children:result})]});};export default BurnToken;","map":{"version":3,"names":["React","useState","useEffect","useWallet","TokenService","burnTokens","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BurnToken","_ref","tokenAddress","propTokenAddress","connected","currentAccount","publicKey","connection","setTokenAddress","amount","setAmount","tokenInfo","setTokenInfo","balance","setBalance","loading","setLoading","error","setError","success","setSuccess","result","setResult","loadTokenInfo","loadBalance","isNativeToken","name","symbol","decimals","address","info","getTokenInfo","err","console","message","getNativeBalance","getTokenBalance","handleTokenAddressChange","e","target","value","toLowerCase","handleSubmit","preventDefault","parseFloat","log","walletAdapter","window","solana","solflare","Error","wallet","sendTransaction","tx","_window$solana","isPhantom","signedTx","signTransaction","signature","sendRawTransaction","serialize","setTimeout","handleMaxAmount","toString","canBurn","className","children","onSubmit","type","onChange","placeholder","step","min","disabled","onClick","role"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/BurnToken.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useWallet } from '../contexts/WalletContext';\nimport TokenService, { burnTokens } from '../services/token-service';\n\nconst BurnToken = ({ tokenAddress: propTokenAddress }) => {\n  const { connected, currentAccount, publicKey, connection } = useWallet();\n  const [tokenAddress, setTokenAddress] = useState(propTokenAddress || '');\n  const [amount, setAmount] = useState('');\n  const [tokenInfo, setTokenInfo] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [result, setResult] = useState('');\n\n  // Load token info and balance when token address changes\n  useEffect(() => {\n    if (connected && currentAccount && tokenAddress) {\n      loadTokenInfo();\n      loadBalance();\n    }\n  }, [connected, currentAccount, tokenAddress]);\n\n  // Also update when propTokenAddress changes\n  useEffect(() => {\n    if (propTokenAddress) {\n      setTokenAddress(propTokenAddress);\n    }\n  }, [propTokenAddress]);\n\n  const loadTokenInfo = async () => {\n    if (!tokenAddress) return;\n    \n    try {\n      setError(null);\n      // Skip tokenInfo for native SOL\n      if (isNativeToken(tokenAddress)) {\n        setTokenInfo({\n          name: \"Solana\",\n          symbol: \"SOL\",\n          decimals: 9,\n          address: \"native\"\n        });\n        return;\n      }\n      \n      const info = await TokenService.getTokenInfo(tokenAddress);\n      setTokenInfo(info);\n    } catch (err) {\n      console.error('Error loading token info:', err);\n      setTokenInfo(null);\n      setError(`Error loading token info: ${err.message}`);\n    }\n  };\n\n  const loadBalance = async () => {\n    if (!connected || !currentAccount || !tokenAddress) return;\n    \n    try {\n      // Handle native SOL differently\n      if (isNativeToken(tokenAddress)) {\n        const balance = await TokenService.getNativeBalance(currentAccount);\n        setBalance(balance);\n        return;\n      }\n      \n      const balance = await TokenService.getTokenBalance(tokenAddress, currentAccount);\n      setBalance(balance);\n    } catch (err) {\n      console.error('Error loading token balance:', err);\n      setBalance(null);\n      setError(`Error loading token balance: ${err.message}`);\n    }\n  };\n\n  const handleTokenAddressChange = (e) => {\n    setTokenAddress(e.target.value);\n    // Reset error when user changes the address\n    setError(null);\n  };\n\n  const isNativeToken = (address) => {\n    return address.toLowerCase() === 'native' || address === '11111111111111111111111111111111';\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!connected || !publicKey) {\n      setError('Wallet not connected');\n      return;\n    }\n    \n    if (!tokenAddress) {\n      setError('Token address is required');\n      return;\n    }\n    \n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Amount must be greater than 0');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      setResult('');\n      \n      console.log('Burning token:', tokenAddress, parseFloat(amount));\n      \n      // Use the wallet object from context\n      const walletAdapter = window.solana || window.solflare;\n      \n      if (!walletAdapter) {\n        throw new Error('No compatible wallet found. Please use Phantom or Solflare wallet.');\n      }\n\n      // Create a wallet object for the burnTokens function\n      const wallet = {\n        publicKey: publicKey,\n        sendTransaction: async (tx) => {\n          // For Phantom\n          if (window.solana?.isPhantom) {\n            const signedTx = await window.solana.signTransaction(tx);\n            const signature = await connection.sendRawTransaction(signedTx.serialize());\n            return signature;\n          }\n          // For Solflare\n          else if (window.solflare) {\n            const signedTx = await window.solflare.signTransaction(tx);\n            const signature = await connection.sendRawTransaction(signedTx.serialize());\n            return signature;\n          }\n          throw new Error('No compatible wallet found');\n        }\n      };\n      \n      // Use the exported burnTokens function\n      const signature = await burnTokens(\n        wallet,\n        tokenAddress,\n        parseFloat(amount)\n      );\n      \n      console.log('Burn result:', signature);\n      \n      setSuccess(`Burn successful! ${amount} tokens permanently removed from circulation. Signature: ${signature}`);\n      setResult(`Token burn successful! Signature: ${signature}`);\n      setAmount('');\n      \n      // Reload balance after burn\n      setTimeout(() => {\n        loadBalance();\n      }, 2000);\n    } catch (err) {\n      console.error('Burn error:', err);\n      setError(`Burn failed: ${err.message}`);\n      setResult(`Burn failed: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMaxAmount = () => {\n    if (balance !== null) {\n      setAmount(balance.toString());\n    }\n  };\n\n  // For native SOL, make it work without token info\n  const canBurn = connected && ((tokenInfo !== null) || isNativeToken(tokenAddress)) && amount && parseFloat(amount) > 0;\n\n  return (\n    <div className=\"burn-token-container p-4 border rounded\">\n      <h3>Burn Tokens</h3>\n      <div className=\"alert alert-warning\">\n        <strong>Warning:</strong> Burning tokens permanently removes them from circulation. This action cannot be undone.\n      </div>\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Token Address</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            value={tokenAddress} \n            onChange={handleTokenAddressChange}\n            placeholder=\"Enter the mint address of the token you want to burn\"\n          />\n          {isNativeToken(tokenAddress) && (\n            <div className=\"alert alert-info mt-2\">\n              Native SOL token selected\n            </div>\n          )}\n        </div>\n        \n        {tokenInfo && (\n          <div className=\"card mb-3\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{tokenInfo.name}</h5>\n              <h6 className=\"card-subtitle mb-2 text-muted\">{tokenInfo.symbol}</h6>\n              <div className=\"mb-2\">\n                <small className=\"text-muted\">Decimals</small>\n                <p>{tokenInfo.decimals}</p>\n              </div>\n              <div>\n                <small className=\"text-muted\">Your Balance</small>\n                <p className=\"mb-0\">\n                  {balance !== null ? (\n                    `${balance} ${tokenInfo.symbol}`\n                  ) : (\n                    'Loading balance...'\n                  )}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {!connected && (\n          <div className=\"alert alert-warning\">\n            Please connect your wallet to burn tokens.\n          </div>\n        )}\n        \n        <div className=\"mb-3\">\n          <label className=\"form-label\">Amount to Burn</label>\n          <div className=\"input-group\">\n            <input \n              type=\"number\" \n              className=\"form-control\" \n              value={amount} \n              onChange={(e) => setAmount(e.target.value)}\n              placeholder=\"Enter amount to burn\"\n              step=\"any\"\n              min=\"0\"\n              disabled={!connected}\n            />\n            <span className=\"input-group-text\">\n              {tokenInfo ? tokenInfo.symbol : 'Tokens'}\n            </span>\n            <button \n              type=\"button\" \n              className=\"btn btn-outline-secondary\" \n              onClick={handleMaxAmount}\n              disabled={!connected || balance === null}\n            >\n              Max\n            </button>\n          </div>\n        </div>\n        \n        {error && (\n          <div className=\"alert alert-danger mb-3\">\n            {error}\n          </div>\n        )}\n        \n        {success && (\n          <div className=\"alert alert-success mb-3\">\n            {success}\n          </div>\n        )}\n        \n        <button\n          type=\"submit\"\n          className=\"btn btn-danger w-100 mb-3\"\n          disabled={loading || !connected || !canBurn}\n        >\n          {loading ? (\n            <>\n              <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n              Processing...\n            </>\n          ) : (\n            `Burn ${tokenInfo ? tokenInfo.symbol : 'Tokens'}`\n          )}\n        </button>\n      </form>\n      {result && <div className=\"result\">{result}</div>}\n    </div>\n  );\n};\n\nexport default BurnToken; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}