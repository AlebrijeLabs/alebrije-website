{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useWallet}from'../contexts/WalletContext';import TokenService from'../services/token-service';import{PublicKey}from'@solana/web3.js';// Popular tokens on Solana with their addresses\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const POPULAR_TOKENS={'SOL (Native)':'native','USDC':'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v','USDT':'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB','Bonk':'DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263','Raydium':'4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R','Serum':'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt'// Add more popular tokens as needed\n};const TokenTransfer=_ref=>{let{tokenAddress:propTokenAddress}=_ref;const{connected,currentAccount}=useWallet();const[tokenAddress,setTokenAddress]=useState(propTokenAddress||'');const[recipient,setRecipient]=useState('');const[amount,setAmount]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const[tokenInfo,setTokenInfo]=useState(null);const[balance,setBalance]=useState(null);const[isLoadingTokenInfo,setIsLoadingTokenInfo]=useState(false);const[selectedPopularToken,setSelectedPopularToken]=useState('');useEffect(()=>{if(propTokenAddress){setTokenAddress(propTokenAddress);}},[propTokenAddress]);useEffect(()=>{if(connected&&tokenAddress&&tokenAddress!=='native'){loadTokenInfo();loadBalance();}else if(connected&&tokenAddress==='native'){// Handle native SOL\nsetTokenInfo({symbol:'SOL',name:'Solana',decimals:9});loadNativeBalance();}},[connected,tokenAddress,currentAccount]);const loadNativeBalance=async()=>{if(!currentAccount)return;try{setIsLoadingTokenInfo(true);const balance=await TokenService.getNativeBalance(currentAccount);setBalance(balance);}catch(err){console.error('Failed to load SOL balance:',err);setError(`Failed to load SOL balance: ${err.message}`);}finally{setIsLoadingTokenInfo(false);}};const loadTokenInfo=async()=>{if(!tokenAddress||tokenAddress==='native')return;try{setIsLoadingTokenInfo(true);const info=await TokenService.getTokenInfo(tokenAddress);setTokenInfo(info);}catch(err){console.error('Failed to load token info:',err);setError(`Invalid token address or token not found: ${err.message}`);setTokenInfo(null);}finally{setIsLoadingTokenInfo(false);}};const loadBalance=async()=>{if(!currentAccount||!tokenAddress||tokenAddress==='native')return;try{setIsLoadingTokenInfo(true);const balance=await TokenService.getTokenBalance(tokenAddress,currentAccount);setBalance(balance);}catch(err){console.error('Failed to load balance:',err);setError(`Failed to load token balance: ${err.message}`);}finally{setIsLoadingTokenInfo(false);}};const handlePopularTokenSelect=e=>{const value=e.target.value;setSelectedPopularToken(value);if(value){setTokenAddress(POPULAR_TOKENS[value]);}};const handleTransfer=async e=>{e.preventDefault();if(!connected||!currentAccount){setError('Wallet not connected');return;}if(!tokenAddress){setError('Please enter a token address');return;}if(!recipient||!amount){setError('Please fill in all fields');return;}// Basic validation\ntry{if(recipient!=='native'){new PublicKey(recipient);}}catch(err){setError('Invalid recipient address');return;}const amountValue=parseFloat(amount);if(isNaN(amountValue)||amountValue<=0){setError('Invalid amount');return;}setLoading(true);setError(null);setSuccess(null);try{let result;if(tokenAddress==='native'){result=await TokenService.transferNativeSOL(currentAccount,recipient,amountValue);}else{result=await TokenService.transferToken(tokenAddress,currentAccount,recipient,amountValue);}setSuccess(`Successfully transferred ${amount} ${(tokenInfo===null||tokenInfo===void 0?void 0:tokenInfo.symbol)||'tokens'} to ${recipient.slice(0,6)}...${recipient.slice(-4)}`);setRecipient('');setAmount('');// Refresh balance\nif(tokenAddress==='native'){loadNativeBalance();}else{loadBalance();}}catch(err){setError(err.message||'Transfer failed');}finally{setLoading(false);}};if(!connected){return/*#__PURE__*/_jsxs(\"div\",{className:\"token-transfer-container p-4 border rounded\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Token Transfer\"}),/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-warning\",children:/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:\"Please connect your wallet to transfer tokens\"})})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"token-transfer-container p-4 border rounded\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Transfer Tokens\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Select Token\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select mb-3\",value:selectedPopularToken,onChange:handlePopularTokenSelect,disabled:loading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Select a popular token --\"}),Object.keys(POPULAR_TOKENS).map(token=>/*#__PURE__*/_jsx(\"option\",{value:token,children:token},token))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"tokenAddress\",className:\"form-label\",children:\"Or Enter Token Address\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"tokenAddress\",value:tokenAddress,onChange:e=>{setTokenAddress(e.target.value);setSelectedPopularToken('');},placeholder:\"Enter token mint address\",disabled:loading}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-secondary\",type:\"button\",onClick:loadTokenInfo,disabled:loading||!tokenAddress||tokenAddress==='native',children:\"Verify\"})]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Enter the mint address of the token you want to transfer, or select from popular tokens\"})]})]}),isLoadingTokenInfo&&/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center my-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-primary\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})}),tokenInfo&&/*#__PURE__*/_jsx(\"div\",{className:\"card mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:tokenInfo.name||'Unknown Token'}),/*#__PURE__*/_jsx(\"h6\",{className:\"card-subtitle mb-2 text-muted\",children:tokenInfo.symbol||'UNKNOWN'}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-1\",children:\"Decimals\"}),/*#__PURE__*/_jsx(\"p\",{className:\"fw-bold\",children:tokenInfo.decimals})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-1\",children:\"Your Balance\"}),/*#__PURE__*/_jsx(\"p\",{className:\"fw-bold\",children:balance!==null?`${balance} ${tokenInfo.symbol}`:/*#__PURE__*/_jsx(\"span\",{className:\"text-muted\",children:\"Loading...\"})})]})]})]})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger mb-4\",children:/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:error})}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-success mb-4\",children:/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:success})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleTransfer,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"recipient\",className:\"form-label\",children:\"Recipient Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"recipient\",value:recipient,onChange:e=>setRecipient(e.target.value),placeholder:\"Enter Solana address\",disabled:loading||!tokenInfo})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"amount\",className:\"form-label\",children:\"Amount\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-control\",id:\"amount\",value:amount,onChange:e=>setAmount(e.target.value),placeholder:\"0.0\",step:\"0.000001\",min:\"0\",disabled:loading||!tokenInfo}),tokenInfo&&/*#__PURE__*/_jsx(\"span\",{className:\"input-group-text\",children:tokenInfo.symbol})]}),balance!==null&&tokenInfo&&/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-end mt-2\",children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-sm btn-link p-0\",onClick:()=>setAmount(balance.toString()),disabled:loading,children:[\"Max: \",balance,\" \",tokenInfo.symbol]})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary w-100\",disabled:loading||!tokenInfo||!recipient||!amount,children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"spinner-border spinner-border-sm me-2\",role:\"status\",\"aria-hidden\":\"true\"}),\"Processing...\"]}):`Transfer ${tokenInfo?tokenInfo.symbol:'Tokens'}`})]})]});};export default TokenTransfer;","map":{"version":3,"names":["React","useState","useEffect","useWallet","TokenService","PublicKey","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","POPULAR_TOKENS","TokenTransfer","_ref","tokenAddress","propTokenAddress","connected","currentAccount","setTokenAddress","recipient","setRecipient","amount","setAmount","loading","setLoading","error","setError","success","setSuccess","tokenInfo","setTokenInfo","balance","setBalance","isLoadingTokenInfo","setIsLoadingTokenInfo","selectedPopularToken","setSelectedPopularToken","loadTokenInfo","loadBalance","symbol","name","decimals","loadNativeBalance","getNativeBalance","err","console","message","info","getTokenInfo","getTokenBalance","handlePopularTokenSelect","e","value","target","handleTransfer","preventDefault","amountValue","parseFloat","isNaN","result","transferNativeSOL","transferToken","slice","className","children","onChange","disabled","Object","keys","map","token","htmlFor","type","id","placeholder","onClick","role","onSubmit","step","min","toString"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/TokenTransfer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useWallet } from '../contexts/WalletContext';\nimport TokenService from '../services/token-service';\nimport { PublicKey } from '@solana/web3.js';\n\n// Popular tokens on Solana with their addresses\nconst POPULAR_TOKENS = {\n  'SOL (Native)': 'native',\n  'USDC': 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n  'USDT': 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\n  'Bonk': 'DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263',\n  'Raydium': '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  'Serum': 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\n  // Add more popular tokens as needed\n};\n\nconst TokenTransfer = ({ tokenAddress: propTokenAddress }) => {\n  const { connected, currentAccount } = useWallet();\n  const [tokenAddress, setTokenAddress] = useState(propTokenAddress || '');\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [tokenInfo, setTokenInfo] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [isLoadingTokenInfo, setIsLoadingTokenInfo] = useState(false);\n  const [selectedPopularToken, setSelectedPopularToken] = useState('');\n\n  useEffect(() => {\n    if (propTokenAddress) {\n      setTokenAddress(propTokenAddress);\n    }\n  }, [propTokenAddress]);\n\n  useEffect(() => {\n    if (connected && tokenAddress && tokenAddress !== 'native') {\n      loadTokenInfo();\n      loadBalance();\n    } else if (connected && tokenAddress === 'native') {\n      // Handle native SOL\n      setTokenInfo({\n        symbol: 'SOL',\n        name: 'Solana',\n        decimals: 9\n      });\n      loadNativeBalance();\n    }\n  }, [connected, tokenAddress, currentAccount]);\n\n  const loadNativeBalance = async () => {\n    if (!currentAccount) return;\n    \n    try {\n      setIsLoadingTokenInfo(true);\n      const balance = await TokenService.getNativeBalance(currentAccount);\n      setBalance(balance);\n    } catch (err) {\n      console.error('Failed to load SOL balance:', err);\n      setError(`Failed to load SOL balance: ${err.message}`);\n    } finally {\n      setIsLoadingTokenInfo(false);\n    }\n  };\n\n  const loadTokenInfo = async () => {\n    if (!tokenAddress || tokenAddress === 'native') return;\n    \n    try {\n      setIsLoadingTokenInfo(true);\n      const info = await TokenService.getTokenInfo(tokenAddress);\n      setTokenInfo(info);\n    } catch (err) {\n      console.error('Failed to load token info:', err);\n      setError(`Invalid token address or token not found: ${err.message}`);\n      setTokenInfo(null);\n    } finally {\n      setIsLoadingTokenInfo(false);\n    }\n  };\n\n  const loadBalance = async () => {\n    if (!currentAccount || !tokenAddress || tokenAddress === 'native') return;\n    \n    try {\n      setIsLoadingTokenInfo(true);\n      const balance = await TokenService.getTokenBalance(tokenAddress, currentAccount);\n      setBalance(balance);\n    } catch (err) {\n      console.error('Failed to load balance:', err);\n      setError(`Failed to load token balance: ${err.message}`);\n    } finally {\n      setIsLoadingTokenInfo(false);\n    }\n  };\n\n  const handlePopularTokenSelect = (e) => {\n    const value = e.target.value;\n    setSelectedPopularToken(value);\n    \n    if (value) {\n      setTokenAddress(POPULAR_TOKENS[value]);\n    }\n  };\n\n  const handleTransfer = async (e) => {\n    e.preventDefault();\n    \n    if (!connected || !currentAccount) {\n      setError('Wallet not connected');\n      return;\n    }\n    \n    if (!tokenAddress) {\n      setError('Please enter a token address');\n      return;\n    }\n    \n    if (!recipient || !amount) {\n      setError('Please fill in all fields');\n      return;\n    }\n    \n    // Basic validation\n    try {\n      if (recipient !== 'native') {\n        new PublicKey(recipient);\n      }\n    } catch (err) {\n      setError('Invalid recipient address');\n      return;\n    }\n    \n    const amountValue = parseFloat(amount);\n    if (isNaN(amountValue) || amountValue <= 0) {\n      setError('Invalid amount');\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    \n    try {\n      let result;\n      \n      if (tokenAddress === 'native') {\n        result = await TokenService.transferNativeSOL(\n          currentAccount,\n          recipient,\n          amountValue\n        );\n      } else {\n        result = await TokenService.transferToken(\n          tokenAddress,\n          currentAccount,\n          recipient,\n          amountValue\n        );\n      }\n      \n      setSuccess(`Successfully transferred ${amount} ${tokenInfo?.symbol || 'tokens'} to ${recipient.slice(0, 6)}...${recipient.slice(-4)}`);\n      setRecipient('');\n      setAmount('');\n      \n      // Refresh balance\n      if (tokenAddress === 'native') {\n        loadNativeBalance();\n      } else {\n        loadBalance();\n      }\n    } catch (err) {\n      setError(err.message || 'Transfer failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!connected) {\n    return (\n      <div className=\"token-transfer-container p-4 border rounded\">\n        <h3>Token Transfer</h3>\n        <div className=\"alert alert-warning\">\n          <p className=\"mb-0\">Please connect your wallet to transfer tokens</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"token-transfer-container p-4 border rounded\">\n      <h3>Transfer Tokens</h3>\n      \n      <div className=\"mb-4\">\n        <label className=\"form-label\">Select Token</label>\n        <select \n          className=\"form-select mb-3\"\n          value={selectedPopularToken}\n          onChange={handlePopularTokenSelect}\n          disabled={loading}\n        >\n          <option value=\"\">-- Select a popular token --</option>\n          {Object.keys(POPULAR_TOKENS).map(token => (\n            <option key={token} value={token}>{token}</option>\n          ))}\n        </select>\n        \n        <div className=\"mb-3\">\n          <label htmlFor=\"tokenAddress\" className=\"form-label\">Or Enter Token Address</label>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"tokenAddress\"\n              value={tokenAddress}\n              onChange={(e) => {\n                setTokenAddress(e.target.value);\n                setSelectedPopularToken('');\n              }}\n              placeholder=\"Enter token mint address\"\n              disabled={loading}\n            />\n            <button \n              className=\"btn btn-outline-secondary\" \n              type=\"button\"\n              onClick={loadTokenInfo}\n              disabled={loading || !tokenAddress || tokenAddress === 'native'}\n            >\n              Verify\n            </button>\n          </div>\n          <small className=\"text-muted\">\n            Enter the mint address of the token you want to transfer, or select from popular tokens\n          </small>\n        </div>\n      </div>\n      \n      {isLoadingTokenInfo && (\n        <div className=\"d-flex justify-content-center my-4\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      )}\n      \n      {tokenInfo && (\n        <div className=\"card mb-4\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{tokenInfo.name || 'Unknown Token'}</h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\">{tokenInfo.symbol || 'UNKNOWN'}</h6>\n            \n            <div className=\"row mt-3\">\n              <div className=\"col-6\">\n                <p className=\"mb-1\">Decimals</p>\n                <p className=\"fw-bold\">{tokenInfo.decimals}</p>\n              </div>\n              <div className=\"col-6\">\n                <p className=\"mb-1\">Your Balance</p>\n                <p className=\"fw-bold\">\n                  {balance !== null ? (\n                    `${balance} ${tokenInfo.symbol}`\n                  ) : (\n                    <span className=\"text-muted\">Loading...</span>\n                  )}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"alert alert-danger mb-4\">\n          <p className=\"mb-0\">{error}</p>\n        </div>\n      )}\n      \n      {success && (\n        <div className=\"alert alert-success mb-4\">\n          <p className=\"mb-0\">{success}</p>\n        </div>\n      )}\n      \n      <form onSubmit={handleTransfer}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"recipient\" className=\"form-label\">Recipient Address</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"recipient\"\n            value={recipient}\n            onChange={(e) => setRecipient(e.target.value)}\n            placeholder=\"Enter Solana address\"\n            disabled={loading || !tokenInfo}\n          />\n        </div>\n        \n        <div className=\"mb-4\">\n          <label htmlFor=\"amount\" className=\"form-label\">Amount</label>\n          <div className=\"input-group\">\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"amount\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n              placeholder=\"0.0\"\n              step=\"0.000001\"\n              min=\"0\"\n              disabled={loading || !tokenInfo}\n            />\n            {tokenInfo && (\n              <span className=\"input-group-text\">{tokenInfo.symbol}</span>\n            )}\n          </div>\n          \n          {balance !== null && tokenInfo && (\n            <div className=\"d-flex justify-content-end mt-2\">\n              <button\n                type=\"button\"\n                className=\"btn btn-sm btn-link p-0\"\n                onClick={() => setAmount(balance.toString())}\n                disabled={loading}\n              >\n                Max: {balance} {tokenInfo.symbol}\n              </button>\n            </div>\n          )}\n        </div>\n        \n        <button\n          type=\"submit\"\n          className=\"btn btn-primary w-100\"\n          disabled={loading || !tokenInfo || !recipient || !amount}\n        >\n          {loading ? (\n            <>\n              <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n              Processing...\n            </>\n          ) : (\n            `Transfer ${tokenInfo ? tokenInfo.symbol : 'Tokens'}`\n          )}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default TokenTransfer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}