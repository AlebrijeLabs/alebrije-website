{"ast":null,"code":"import React,{useState,useEffect}from'react';import'../styles/components.css';/**\n * Notification types\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const NotificationType={SUCCESS:'success',INFO:'info',WARNING:'warning',ERROR:'error'};/**\n * Notification component that displays messages with different styling based on type\n */const Notification=_ref=>{let{type,title,message,onClose,autoClose=true,duration=5000}=_ref;const[isVisible,setIsVisible]=useState(true);useEffect(()=>{if(autoClose){const timer=setTimeout(()=>{setIsVisible(false);setTimeout(onClose,300);// Allow animation to complete\n},duration);return()=>clearTimeout(timer);}},[autoClose,duration,onClose]);const handleClose=()=>{setIsVisible(false);setTimeout(onClose,300);// Allow animation to complete\n};return/*#__PURE__*/_jsxs(\"div\",{className:`notification notification-${type} ${isVisible?'show':'hide'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"notification-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:title}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:handleClose,children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"notification-body\",children:/*#__PURE__*/_jsx(\"p\",{children:message})})]});};/**\n * Notifications manager component that displays multiple notifications\n */const Notifications=()=>{const[notifications,setNotifications]=useState([]);// Global method to add a notification\nwindow.notifyUser=_ref2=>{let{type,title,message,duration}=_ref2;const id=Date.now();setNotifications(prevNotifications=>[...prevNotifications,{id,type,title,message,duration}]);return id;// Return ID for potential manual removal\n};// Remove a notification\nconst removeNotification=id=>{setNotifications(prevNotifications=>prevNotifications.filter(notification=>notification.id!==id));};// Convenience methods for different notification types\nwindow.notifySuccess=function(title,message){let duration=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5000;return window.notifyUser({type:NotificationType.SUCCESS,title,message,duration});};window.notifyInfo=function(title,message){let duration=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5000;return window.notifyUser({type:NotificationType.INFO,title,message,duration});};window.notifyWarning=function(title,message){let duration=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5000;return window.notifyUser({type:NotificationType.WARNING,title,message,duration});};window.notifyError=function(title,message){let duration=arguments.length>2&&arguments[2]!==undefined?arguments[2]:8000;return window.notifyUser({type:NotificationType.ERROR,title,message,duration});};return/*#__PURE__*/_jsx(\"div\",{className:\"notifications-container\",children:notifications.map(notification=>/*#__PURE__*/_jsx(Notification,{type:notification.type,title:notification.title,message:notification.message,duration:notification.duration,onClose:()=>removeNotification(notification.id)},notification.id))});};export default Notifications;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","NotificationType","SUCCESS","INFO","WARNING","ERROR","Notification","_ref","type","title","message","onClose","autoClose","duration","isVisible","setIsVisible","timer","setTimeout","clearTimeout","handleClose","className","children","onClick","Notifications","notifications","setNotifications","window","notifyUser","_ref2","id","Date","now","prevNotifications","removeNotification","filter","notification","notifySuccess","arguments","length","undefined","notifyInfo","notifyWarning","notifyError","map"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/Notifications.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/components.css';\n\n/**\n * Notification types\n */\nexport const NotificationType = {\n  SUCCESS: 'success',\n  INFO: 'info',\n  WARNING: 'warning',\n  ERROR: 'error'\n};\n\n/**\n * Notification component that displays messages with different styling based on type\n */\nconst Notification = ({ type, title, message, onClose, autoClose = true, duration = 5000 }) => {\n  const [isVisible, setIsVisible] = useState(true);\n  \n  useEffect(() => {\n    if (autoClose) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n        setTimeout(onClose, 300); // Allow animation to complete\n      }, duration);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [autoClose, duration, onClose]);\n  \n  const handleClose = () => {\n    setIsVisible(false);\n    setTimeout(onClose, 300); // Allow animation to complete\n  };\n  \n  return (\n    <div className={`notification notification-${type} ${isVisible ? 'show' : 'hide'}`}>\n      <div className=\"notification-header\">\n        <h4>{title}</h4>\n        <button className=\"close-btn\" onClick={handleClose}>Ã—</button>\n      </div>\n      <div className=\"notification-body\">\n        <p>{message}</p>\n      </div>\n    </div>\n  );\n};\n\n/**\n * Notifications manager component that displays multiple notifications\n */\nconst Notifications = () => {\n  const [notifications, setNotifications] = useState([]);\n  \n  // Global method to add a notification\n  window.notifyUser = ({ type, title, message, duration }) => {\n    const id = Date.now();\n    setNotifications(prevNotifications => [\n      ...prevNotifications,\n      { id, type, title, message, duration }\n    ]);\n    \n    return id; // Return ID for potential manual removal\n  };\n  \n  // Remove a notification\n  const removeNotification = (id) => {\n    setNotifications(prevNotifications => \n      prevNotifications.filter(notification => notification.id !== id)\n    );\n  };\n  \n  // Convenience methods for different notification types\n  window.notifySuccess = (title, message, duration = 5000) => \n    window.notifyUser({ type: NotificationType.SUCCESS, title, message, duration });\n    \n  window.notifyInfo = (title, message, duration = 5000) => \n    window.notifyUser({ type: NotificationType.INFO, title, message, duration });\n    \n  window.notifyWarning = (title, message, duration = 5000) => \n    window.notifyUser({ type: NotificationType.WARNING, title, message, duration });\n    \n  window.notifyError = (title, message, duration = 8000) => \n    window.notifyUser({ type: NotificationType.ERROR, title, message, duration });\n  \n  return (\n    <div className=\"notifications-container\">\n      {notifications.map(notification => (\n        <Notification\n          key={notification.id}\n          type={notification.type}\n          title={notification.title}\n          message={notification.message}\n          duration={notification.duration}\n          onClose={() => removeNotification(notification.id)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Notifications; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}