{"ast":null,"code":"var _jsxFileName = \"/Users/rastavo/alebrije-project/alebrije-wallet/src/components/TokenTransfer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useWallet } from '../contexts/WalletContext';\nimport TokenService from '../services/token-service';\nimport { PublicKey } from '@solana/web3.js';\n\n// Popular tokens on Solana with their addresses\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst POPULAR_TOKENS = {\n  'SOL (Native)': 'native',\n  'USDC': 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n  'USDT': 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\n  'Bonk': 'DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263',\n  'Raydium': '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  'Serum': 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt'\n  // Add more popular tokens as needed\n};\nconst TokenTransfer = ({\n  tokenAddress: propTokenAddress\n}) => {\n  _s();\n  const {\n    connected,\n    currentAccount\n  } = useWallet();\n  const [tokenAddress, setTokenAddress] = useState(propTokenAddress || 'native'); // Default to native SOL\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [tokenInfo, setTokenInfo] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [selectedToken, setSelectedToken] = useState('SOL (Native)');\n  const [autoCreateAccount, setAutoCreateAccount] = useState(TokenService.getSettings().autoCreateTokenAccounts);\n\n  // Load token info and balance when token address changes\n  useEffect(() => {\n    if (connected && currentAccount && tokenAddress) {\n      loadTokenInfo();\n      loadBalance();\n    }\n  }, [connected, currentAccount, tokenAddress]);\n\n  // Load native SOL balance\n  useEffect(() => {\n    if (connected && currentAccount) {\n      loadNativeBalance();\n    }\n  }, [connected, currentAccount]);\n  const loadTokenInfo = async () => {\n    if (tokenAddress === 'native') {\n      setTokenInfo({\n        address: 'native',\n        name: 'Solana',\n        symbol: 'SOL',\n        decimals: 9\n      });\n      return;\n    }\n    try {\n      const info = await TokenService.getTokenInfo(tokenAddress);\n      setTokenInfo(info);\n    } catch (err) {\n      console.error('Error loading token info:', err);\n      setTokenInfo(null);\n    }\n  };\n  const loadBalance = async () => {\n    if (!connected || !currentAccount || !tokenAddress) return;\n    try {\n      if (tokenAddress === 'native') {\n        loadNativeBalance();\n        return;\n      }\n      const balance = await TokenService.getTokenBalance(tokenAddress, currentAccount);\n      setBalance(balance);\n    } catch (err) {\n      console.error('Error loading token balance:', err);\n      setBalance(null);\n    }\n  };\n  const loadNativeBalance = async () => {\n    if (!connected || !currentAccount) return;\n    try {\n      const balance = await TokenService.getNativeBalance(currentAccount);\n      if (tokenAddress === 'native') {\n        setBalance(balance);\n      }\n    } catch (err) {\n      console.error('Error loading native balance:', err);\n      if (tokenAddress === 'native') {\n        setBalance(null);\n      }\n    }\n  };\n  const handleTokenSelect = e => {\n    const selected = e.target.value;\n    setSelectedToken(selected);\n    setTokenAddress(POPULAR_TOKENS[selected]);\n  };\n  const handleTokenAddressChange = e => {\n    setTokenAddress(e.target.value);\n    setSelectedToken('');\n  };\n  const handleAutoCreateToggle = () => {\n    const newValue = !autoCreateAccount;\n    setAutoCreateAccount(newValue);\n    TokenService.updateSettings({\n      autoCreateTokenAccounts: newValue\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!connected || !currentAccount) {\n      setError('Wallet not connected');\n      return;\n    }\n    if (!tokenAddress) {\n      setError('Token address is required');\n      return;\n    }\n    if (!recipient) {\n      setError('Recipient address is required');\n      return;\n    }\n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Amount must be greater than 0');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      let result;\n      if (tokenAddress === 'native') {\n        result = await TokenService.transferNativeSOL(currentAccount, recipient, parseFloat(amount));\n      } else {\n        // Before transfer, update token service settings with current state\n        TokenService.updateSettings({\n          autoCreateTokenAccounts: autoCreateAccount,\n          shouldShowNotifications: true\n        });\n        result = await TokenService.transferToken(tokenAddress, currentAccount, recipient, parseFloat(amount));\n\n        // Check if an account was created and show notification\n        if (result.accountCreated) {\n          window.notifyInfo('Token Account Created', 'A token account was automatically created for the recipient.', 5000);\n        }\n      }\n      setSuccess(`Transaction successful! Signature: ${result.signature}`);\n      window.notifySuccess('Transfer Complete', `Successfully transferred ${amount} ${(tokenInfo === null || tokenInfo === void 0 ? void 0 : tokenInfo.symbol) || 'tokens'} to ${recipient.slice(0, 4)}...${recipient.slice(-4)}`, 5000);\n      setAmount('');\n\n      // Reload balance after transfer\n      setTimeout(() => {\n        loadBalance();\n      }, 2000);\n    } catch (err) {\n      console.error('Transfer error:', err);\n      setError(`Transfer failed: ${err.message}`);\n\n      // Show error notification\n      window.notifyError('Transfer Failed', err.message, 8000);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleMaxAmount = () => {\n    if (balance !== null) {\n      // Leave a small amount for transaction fees if it's SOL\n      if (tokenAddress === 'native' && balance > 0.01) {\n        setAmount((balance - 0.01).toFixed(9));\n      } else {\n        setAmount(balance.toString());\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"token-transfer-container p-4 border rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transfer Tokens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Select Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select mb-2\",\n          value: selectedToken,\n          onChange: handleTokenSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: selectedToken !== '',\n            children: \"Select a token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), Object.keys(POPULAR_TOKENS).map(token => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: token,\n            children: token\n          }, token, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Or Enter Token Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: tokenAddress,\n          onChange: handleTokenAddressChange,\n          placeholder: \"Enter the mint address of the token you want to transfer, or select from popular tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), tokenInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: tokenInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"card-subtitle mb-2 text-muted\",\n            children: tokenInfo.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: \"Decimals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: tokenInfo.decimals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: \"Your Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-0\",\n              children: balance !== null ? `${balance} ${tokenInfo.symbol}` : 'Loading balance...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), !connected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        children: \"Please connect your wallet to transfer tokens.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Recipient Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: recipient,\n          onChange: e => setRecipient(e.target.value),\n          placeholder: \"Enter the recipient's wallet address\",\n          disabled: !connected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            placeholder: \"0.00\",\n            step: \"0.000000001\",\n            min: \"0\",\n            disabled: !connected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-secondary\",\n            onClick: handleMaxAmount,\n            disabled: !connected || balance === null,\n            children: \"MAX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), tokenAddress !== 'native' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check form-switch mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          id: \"autoCreateTokenAccount\",\n          checked: autoCreateAccount,\n          onChange: handleAutoCreateToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: \"autoCreateTokenAccount\",\n          children: \"Automatically create token accounts for recipients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-text\",\n          children: autoCreateAccount ? \"Token accounts will be created for recipients who don't have one (small fee applies)\" : \"You must ensure the recipient already has a token account for this token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: !connected || loading || !recipient || !amount || parseFloat(amount) <= 0,\n        children: loading ? 'Processing...' : 'Transfer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenTransfer, \"P33Mpsdr4kBOMNM9nmQohYnZcxc=\", false, function () {\n  return [useWallet];\n});\n_c = TokenTransfer;\nexport default TokenTransfer;\nvar _c;\n$RefreshReg$(_c, \"TokenTransfer\");","map":{"version":3,"names":["React","useState","useEffect","useWallet","TokenService","PublicKey","jsxDEV","_jsxDEV","POPULAR_TOKENS","TokenTransfer","tokenAddress","propTokenAddress","_s","connected","currentAccount","setTokenAddress","recipient","setRecipient","amount","setAmount","tokenInfo","setTokenInfo","balance","setBalance","loading","setLoading","error","setError","success","setSuccess","selectedToken","setSelectedToken","autoCreateAccount","setAutoCreateAccount","getSettings","autoCreateTokenAccounts","loadTokenInfo","loadBalance","loadNativeBalance","address","name","symbol","decimals","info","getTokenInfo","err","console","getTokenBalance","getNativeBalance","handleTokenSelect","e","selected","target","value","handleTokenAddressChange","handleAutoCreateToggle","newValue","updateSettings","handleSubmit","preventDefault","parseFloat","result","transferNativeSOL","shouldShowNotifications","transferToken","accountCreated","window","notifyInfo","signature","notifySuccess","slice","setTimeout","message","notifyError","handleMaxAmount","toFixed","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","disabled","Object","keys","map","token","type","placeholder","step","min","onClick","id","checked","htmlFor","_c","$RefreshReg$"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/TokenTransfer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useWallet } from '../contexts/WalletContext';\nimport TokenService from '../services/token-service';\nimport { PublicKey } from '@solana/web3.js';\n\n// Popular tokens on Solana with their addresses\nconst POPULAR_TOKENS = {\n  'SOL (Native)': 'native',\n  'USDC': 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n  'USDT': 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\n  'Bonk': 'DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263',\n  'Raydium': '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  'Serum': 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\n  // Add more popular tokens as needed\n};\n\nconst TokenTransfer = ({ tokenAddress: propTokenAddress }) => {\n  const { connected, currentAccount } = useWallet();\n  const [tokenAddress, setTokenAddress] = useState(propTokenAddress || 'native'); // Default to native SOL\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [tokenInfo, setTokenInfo] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [selectedToken, setSelectedToken] = useState('SOL (Native)');\n  const [autoCreateAccount, setAutoCreateAccount] = useState(\n    TokenService.getSettings().autoCreateTokenAccounts\n  );\n\n  // Load token info and balance when token address changes\n  useEffect(() => {\n    if (connected && currentAccount && tokenAddress) {\n      loadTokenInfo();\n      loadBalance();\n    }\n  }, [connected, currentAccount, tokenAddress]);\n\n  // Load native SOL balance\n  useEffect(() => {\n    if (connected && currentAccount) {\n      loadNativeBalance();\n    }\n  }, [connected, currentAccount]);\n\n  const loadTokenInfo = async () => {\n    if (tokenAddress === 'native') {\n      setTokenInfo({\n        address: 'native',\n        name: 'Solana',\n        symbol: 'SOL',\n        decimals: 9\n      });\n      return;\n    }\n    \n    try {\n      const info = await TokenService.getTokenInfo(tokenAddress);\n      setTokenInfo(info);\n    } catch (err) {\n      console.error('Error loading token info:', err);\n      setTokenInfo(null);\n    }\n  };\n\n  const loadBalance = async () => {\n    if (!connected || !currentAccount || !tokenAddress) return;\n    \n    try {\n      if (tokenAddress === 'native') {\n        loadNativeBalance();\n        return;\n      }\n      \n      const balance = await TokenService.getTokenBalance(tokenAddress, currentAccount);\n      setBalance(balance);\n    } catch (err) {\n      console.error('Error loading token balance:', err);\n      setBalance(null);\n    }\n  };\n\n  const loadNativeBalance = async () => {\n    if (!connected || !currentAccount) return;\n    \n    try {\n      const balance = await TokenService.getNativeBalance(currentAccount);\n      if (tokenAddress === 'native') {\n        setBalance(balance);\n      }\n    } catch (err) {\n      console.error('Error loading native balance:', err);\n      if (tokenAddress === 'native') {\n        setBalance(null);\n      }\n    }\n  };\n\n  const handleTokenSelect = (e) => {\n    const selected = e.target.value;\n    setSelectedToken(selected);\n    setTokenAddress(POPULAR_TOKENS[selected]);\n  };\n\n  const handleTokenAddressChange = (e) => {\n    setTokenAddress(e.target.value);\n    setSelectedToken('');\n  };\n\n  const handleAutoCreateToggle = () => {\n    const newValue = !autoCreateAccount;\n    setAutoCreateAccount(newValue);\n    TokenService.updateSettings({ autoCreateTokenAccounts: newValue });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!connected || !currentAccount) {\n      setError('Wallet not connected');\n      return;\n    }\n    \n    if (!tokenAddress) {\n      setError('Token address is required');\n      return;\n    }\n    \n    if (!recipient) {\n      setError('Recipient address is required');\n      return;\n    }\n    \n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Amount must be greater than 0');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      \n      let result;\n      if (tokenAddress === 'native') {\n        result = await TokenService.transferNativeSOL(\n          currentAccount,\n          recipient,\n          parseFloat(amount)\n        );\n      } else {\n        // Before transfer, update token service settings with current state\n        TokenService.updateSettings({ \n          autoCreateTokenAccounts: autoCreateAccount,\n          shouldShowNotifications: true\n        });\n        \n        result = await TokenService.transferToken(\n          tokenAddress,\n          currentAccount,\n          recipient,\n          parseFloat(amount)\n        );\n        \n        // Check if an account was created and show notification\n        if (result.accountCreated) {\n          window.notifyInfo(\n            'Token Account Created',\n            'A token account was automatically created for the recipient.',\n            5000\n          );\n        }\n      }\n      \n      setSuccess(`Transaction successful! Signature: ${result.signature}`);\n      window.notifySuccess(\n        'Transfer Complete',\n        `Successfully transferred ${amount} ${tokenInfo?.symbol || 'tokens'} to ${recipient.slice(0, 4)}...${recipient.slice(-4)}`,\n        5000\n      );\n      \n      setAmount('');\n      \n      // Reload balance after transfer\n      setTimeout(() => {\n        loadBalance();\n      }, 2000);\n    } catch (err) {\n      console.error('Transfer error:', err);\n      setError(`Transfer failed: ${err.message}`);\n      \n      // Show error notification\n      window.notifyError(\n        'Transfer Failed',\n        err.message,\n        8000\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMaxAmount = () => {\n    if (balance !== null) {\n      // Leave a small amount for transaction fees if it's SOL\n      if (tokenAddress === 'native' && balance > 0.01) {\n        setAmount((balance - 0.01).toFixed(9));\n      } else {\n        setAmount(balance.toString());\n      }\n    }\n  };\n\n  return (\n    <div className=\"token-transfer-container p-4 border rounded\">\n      <h3>Transfer Tokens</h3>\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Select Token</label>\n          <select \n            className=\"form-select mb-2\" \n            value={selectedToken} \n            onChange={handleTokenSelect}\n          >\n            <option value=\"\" disabled={selectedToken !== ''}>Select a token</option>\n            {Object.keys(POPULAR_TOKENS).map(token => (\n              <option key={token} value={token}>{token}</option>\n            ))}\n          </select>\n          \n          <label className=\"form-label\">Or Enter Token Address</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            value={tokenAddress} \n            onChange={handleTokenAddressChange}\n            placeholder=\"Enter the mint address of the token you want to transfer, or select from popular tokens\"\n          />\n        </div>\n        \n        {tokenInfo && (\n          <div className=\"card mb-3\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{tokenInfo.name}</h5>\n              <h6 className=\"card-subtitle mb-2 text-muted\">{tokenInfo.symbol}</h6>\n              <div className=\"mb-2\">\n                <small className=\"text-muted\">Decimals</small>\n                <p>{tokenInfo.decimals}</p>\n              </div>\n              <div>\n                <small className=\"text-muted\">Your Balance</small>\n                <p className=\"mb-0\">\n                  {balance !== null ? (\n                    `${balance} ${tokenInfo.symbol}`\n                  ) : (\n                    'Loading balance...'\n                  )}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {!connected && (\n          <div className=\"alert alert-warning\">\n            Please connect your wallet to transfer tokens.\n          </div>\n        )}\n        \n        <div className=\"mb-3\">\n          <label className=\"form-label\">Recipient Address</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            value={recipient} \n            onChange={(e) => setRecipient(e.target.value)}\n            placeholder=\"Enter the recipient's wallet address\"\n            disabled={!connected}\n          />\n        </div>\n        \n        <div className=\"mb-3\">\n          <label className=\"form-label\">Amount</label>\n          <div className=\"input-group\">\n            <input \n              type=\"number\" \n              className=\"form-control\" \n              value={amount} \n              onChange={(e) => setAmount(e.target.value)}\n              placeholder=\"0.00\"\n              step=\"0.000000001\"\n              min=\"0\"\n              disabled={!connected}\n            />\n            <button \n              type=\"button\" \n              className=\"btn btn-outline-secondary\" \n              onClick={handleMaxAmount}\n              disabled={!connected || balance === null}\n            >\n              MAX\n            </button>\n          </div>\n        </div>\n        \n        {/* Auto token account creation toggle */}\n        {tokenAddress !== 'native' && (\n          <div className=\"form-check form-switch mb-3\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"autoCreateTokenAccount\"\n              checked={autoCreateAccount}\n              onChange={handleAutoCreateToggle}\n            />\n            <label className=\"form-check-label\" htmlFor=\"autoCreateTokenAccount\">\n              Automatically create token accounts for recipients\n            </label>\n            <div className=\"form-text\">\n              {autoCreateAccount\n                ? \"Token accounts will be created for recipients who don't have one (small fee applies)\"\n                : \"You must ensure the recipient already has a token account for this token\"}\n            </div>\n          </div>\n        )}\n        \n        {error && (\n          <div className=\"alert alert-danger\">{error}</div>\n        )}\n        \n        {success && (\n          <div className=\"alert alert-success\">{success}</div>\n        )}\n        \n        <button \n          type=\"submit\" \n          className=\"btn btn-primary\" \n          disabled={!connected || loading || !recipient || !amount || parseFloat(amount) <= 0}\n        >\n          {loading ? 'Processing...' : 'Transfer'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default TokenTransfer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}