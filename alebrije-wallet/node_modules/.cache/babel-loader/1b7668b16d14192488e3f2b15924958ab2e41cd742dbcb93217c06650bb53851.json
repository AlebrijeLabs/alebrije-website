{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useWallet}from'../contexts/WalletContext';import TokenService from'../services/token-service';import{PublicKey}from'@solana/web3.js';// Popular tokens on Solana with their addresses\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const POPULAR_TOKENS={'SOL (Native)':'native','USDC':'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v','USDT':'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB','Bonk':'DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263','Raydium':'4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R','Serum':'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt'// Add more popular tokens as needed\n};const TokenTransfer=_ref=>{let{tokenAddress:propTokenAddress}=_ref;const{connected,currentAccount}=useWallet();const[tokenAddress,setTokenAddress]=useState(propTokenAddress||'native');// Default to native SOL\nconst[recipient,setRecipient]=useState('');const[amount,setAmount]=useState('');const[tokenInfo,setTokenInfo]=useState(null);const[balance,setBalance]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const[selectedToken,setSelectedToken]=useState('SOL (Native)');// Load token info and balance when token address changes\nuseEffect(()=>{if(connected&&currentAccount&&tokenAddress){loadTokenInfo();loadBalance();}},[connected,currentAccount,tokenAddress]);// Load native SOL balance\nuseEffect(()=>{if(connected&&currentAccount){loadNativeBalance();}},[connected,currentAccount]);const loadTokenInfo=async()=>{if(tokenAddress==='native'){setTokenInfo({address:'native',name:'Solana',symbol:'SOL',decimals:9});return;}try{const info=await TokenService.getTokenInfo(tokenAddress);setTokenInfo(info);}catch(err){console.error('Error loading token info:',err);setTokenInfo(null);}};const loadBalance=async()=>{if(!connected||!currentAccount||!tokenAddress)return;try{if(tokenAddress==='native'){loadNativeBalance();return;}const balance=await TokenService.getTokenBalance(tokenAddress,currentAccount);setBalance(balance);}catch(err){console.error('Error loading token balance:',err);setBalance(null);}};const loadNativeBalance=async()=>{if(!connected||!currentAccount)return;try{const balance=await TokenService.getNativeBalance(currentAccount);if(tokenAddress==='native'){setBalance(balance);}}catch(err){console.error('Error loading native balance:',err);if(tokenAddress==='native'){setBalance(null);}}};const handleTokenSelect=e=>{const selected=e.target.value;setSelectedToken(selected);setTokenAddress(POPULAR_TOKENS[selected]);};const handleTokenAddressChange=e=>{setTokenAddress(e.target.value);setSelectedToken('');};const handleSubmit=async e=>{e.preventDefault();if(!connected||!currentAccount){setError('Wallet not connected');return;}if(!tokenAddress){setError('Token address is required');return;}if(!recipient){setError('Recipient address is required');return;}if(!amount||parseFloat(amount)<=0){setError('Amount must be greater than 0');return;}try{setLoading(true);setError(null);setSuccess(null);let result;if(tokenAddress==='native'){result=await TokenService.transferNativeSOL(currentAccount,recipient,parseFloat(amount));}else{result=await TokenService.transferToken(tokenAddress,currentAccount,recipient,parseFloat(amount));}setSuccess(`Transaction successful! Signature: ${result.signature}`);setAmount('');// Reload balance after transfer\nsetTimeout(()=>{loadBalance();},2000);}catch(err){console.error('Transfer error:',err);setError(`Transfer failed: ${err.message}`);}finally{setLoading(false);}};const handleMaxAmount=()=>{if(balance!==null){// Leave a small amount for transaction fees if it's SOL\nif(tokenAddress==='native'&&balance>0.01){setAmount((balance-0.01).toFixed(9));}else{setAmount(balance.toString());}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"token-transfer-container p-4 border rounded\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Transfer Tokens\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Select Token\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select mb-2\",value:selectedToken,onChange:handleTokenSelect,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:selectedToken!=='',children:\"Select a token\"}),Object.keys(POPULAR_TOKENS).map(token=>/*#__PURE__*/_jsx(\"option\",{value:token,children:token},token))]}),/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Or Enter Token Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:tokenAddress,onChange:handleTokenAddressChange,placeholder:\"Enter the mint address of the token you want to transfer, or select from popular tokens\"})]}),tokenInfo&&/*#__PURE__*/_jsx(\"div\",{className:\"card mb-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:tokenInfo.name}),/*#__PURE__*/_jsx(\"h6\",{className:\"card-subtitle mb-2 text-muted\",children:tokenInfo.symbol}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Decimals\"}),/*#__PURE__*/_jsx(\"p\",{children:tokenInfo.decimals})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Your Balance\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:balance!==null?`${balance} ${tokenInfo.symbol}`:'Loading balance...'})]})]})}),!connected&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-warning\",children:\"Please connect your wallet to transfer tokens.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Recipient Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:recipient,onChange:e=>setRecipient(e.target.value),placeholder:\"Enter the recipient's wallet address\",disabled:!connected})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Amount\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"form-control\",value:amount,onChange:e=>setAmount(e.target.value),placeholder:\"Enter amount to transfer\",step:\"any\",min:\"0\",disabled:!connected}),/*#__PURE__*/_jsx(\"span\",{className:\"input-group-text\",children:tokenInfo?tokenInfo.symbol:'Tokens'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-outline-secondary\",onClick:handleMaxAmount,disabled:!connected||balance===null,children:\"Max\"})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger mb-3\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-success mb-3\",children:success}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary w-100\",disabled:loading||!connected||!tokenInfo||!recipient||!amount,children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"spinner-border spinner-border-sm me-2\",role:\"status\",\"aria-hidden\":\"true\"}),\"Processing...\"]}):`Transfer ${tokenInfo?tokenInfo.symbol:'Tokens'}`})]})]});};export default TokenTransfer;","map":{"version":3,"names":["React","useState","useEffect","useWallet","TokenService","PublicKey","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","POPULAR_TOKENS","TokenTransfer","_ref","tokenAddress","propTokenAddress","connected","currentAccount","setTokenAddress","recipient","setRecipient","amount","setAmount","tokenInfo","setTokenInfo","balance","setBalance","loading","setLoading","error","setError","success","setSuccess","selectedToken","setSelectedToken","loadTokenInfo","loadBalance","loadNativeBalance","address","name","symbol","decimals","info","getTokenInfo","err","console","getTokenBalance","getNativeBalance","handleTokenSelect","e","selected","target","value","handleTokenAddressChange","handleSubmit","preventDefault","parseFloat","result","transferNativeSOL","transferToken","signature","setTimeout","message","handleMaxAmount","toFixed","toString","className","children","onSubmit","onChange","disabled","Object","keys","map","token","type","placeholder","step","min","onClick","role"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/TokenTransfer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useWallet } from '../contexts/WalletContext';\nimport TokenService from '../services/token-service';\nimport { PublicKey } from '@solana/web3.js';\n\n// Popular tokens on Solana with their addresses\nconst POPULAR_TOKENS = {\n  'SOL (Native)': 'native',\n  'USDC': 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n  'USDT': 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\n  'Bonk': 'DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263',\n  'Raydium': '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n  'Serum': 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\n  // Add more popular tokens as needed\n};\n\nconst TokenTransfer = ({ tokenAddress: propTokenAddress }) => {\n  const { connected, currentAccount } = useWallet();\n  const [tokenAddress, setTokenAddress] = useState(propTokenAddress || 'native'); // Default to native SOL\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [tokenInfo, setTokenInfo] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [selectedToken, setSelectedToken] = useState('SOL (Native)');\n\n  // Load token info and balance when token address changes\n  useEffect(() => {\n    if (connected && currentAccount && tokenAddress) {\n      loadTokenInfo();\n      loadBalance();\n    }\n  }, [connected, currentAccount, tokenAddress]);\n\n  // Load native SOL balance\n  useEffect(() => {\n    if (connected && currentAccount) {\n      loadNativeBalance();\n    }\n  }, [connected, currentAccount]);\n\n  const loadTokenInfo = async () => {\n    if (tokenAddress === 'native') {\n      setTokenInfo({\n        address: 'native',\n        name: 'Solana',\n        symbol: 'SOL',\n        decimals: 9\n      });\n      return;\n    }\n    \n    try {\n      const info = await TokenService.getTokenInfo(tokenAddress);\n      setTokenInfo(info);\n    } catch (err) {\n      console.error('Error loading token info:', err);\n      setTokenInfo(null);\n    }\n  };\n\n  const loadBalance = async () => {\n    if (!connected || !currentAccount || !tokenAddress) return;\n    \n    try {\n      if (tokenAddress === 'native') {\n        loadNativeBalance();\n        return;\n      }\n      \n      const balance = await TokenService.getTokenBalance(tokenAddress, currentAccount);\n      setBalance(balance);\n    } catch (err) {\n      console.error('Error loading token balance:', err);\n      setBalance(null);\n    }\n  };\n\n  const loadNativeBalance = async () => {\n    if (!connected || !currentAccount) return;\n    \n    try {\n      const balance = await TokenService.getNativeBalance(currentAccount);\n      if (tokenAddress === 'native') {\n        setBalance(balance);\n      }\n    } catch (err) {\n      console.error('Error loading native balance:', err);\n      if (tokenAddress === 'native') {\n        setBalance(null);\n      }\n    }\n  };\n\n  const handleTokenSelect = (e) => {\n    const selected = e.target.value;\n    setSelectedToken(selected);\n    setTokenAddress(POPULAR_TOKENS[selected]);\n  };\n\n  const handleTokenAddressChange = (e) => {\n    setTokenAddress(e.target.value);\n    setSelectedToken('');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!connected || !currentAccount) {\n      setError('Wallet not connected');\n      return;\n    }\n    \n    if (!tokenAddress) {\n      setError('Token address is required');\n      return;\n    }\n    \n    if (!recipient) {\n      setError('Recipient address is required');\n      return;\n    }\n    \n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Amount must be greater than 0');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError(null);\n      setSuccess(null);\n      \n      let result;\n      if (tokenAddress === 'native') {\n        result = await TokenService.transferNativeSOL(\n          currentAccount,\n          recipient,\n          parseFloat(amount)\n        );\n      } else {\n        result = await TokenService.transferToken(\n          tokenAddress,\n          currentAccount,\n          recipient,\n          parseFloat(amount)\n        );\n      }\n      \n      setSuccess(`Transaction successful! Signature: ${result.signature}`);\n      setAmount('');\n      \n      // Reload balance after transfer\n      setTimeout(() => {\n        loadBalance();\n      }, 2000);\n    } catch (err) {\n      console.error('Transfer error:', err);\n      setError(`Transfer failed: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMaxAmount = () => {\n    if (balance !== null) {\n      // Leave a small amount for transaction fees if it's SOL\n      if (tokenAddress === 'native' && balance > 0.01) {\n        setAmount((balance - 0.01).toFixed(9));\n      } else {\n        setAmount(balance.toString());\n      }\n    }\n  };\n\n  return (\n    <div className=\"token-transfer-container p-4 border rounded\">\n      <h3>Transfer Tokens</h3>\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Select Token</label>\n          <select \n            className=\"form-select mb-2\" \n            value={selectedToken} \n            onChange={handleTokenSelect}\n          >\n            <option value=\"\" disabled={selectedToken !== ''}>Select a token</option>\n            {Object.keys(POPULAR_TOKENS).map(token => (\n              <option key={token} value={token}>{token}</option>\n            ))}\n          </select>\n          \n          <label className=\"form-label\">Or Enter Token Address</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            value={tokenAddress} \n            onChange={handleTokenAddressChange}\n            placeholder=\"Enter the mint address of the token you want to transfer, or select from popular tokens\"\n          />\n        </div>\n        \n        {tokenInfo && (\n          <div className=\"card mb-3\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{tokenInfo.name}</h5>\n              <h6 className=\"card-subtitle mb-2 text-muted\">{tokenInfo.symbol}</h6>\n              <div className=\"mb-2\">\n                <small className=\"text-muted\">Decimals</small>\n                <p>{tokenInfo.decimals}</p>\n              </div>\n              <div>\n                <small className=\"text-muted\">Your Balance</small>\n                <p className=\"mb-0\">\n                  {balance !== null ? (\n                    `${balance} ${tokenInfo.symbol}`\n                  ) : (\n                    'Loading balance...'\n                  )}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {!connected && (\n          <div className=\"alert alert-warning\">\n            Please connect your wallet to transfer tokens.\n          </div>\n        )}\n        \n        <div className=\"mb-3\">\n          <label className=\"form-label\">Recipient Address</label>\n          <input \n            type=\"text\" \n            className=\"form-control\" \n            value={recipient} \n            onChange={(e) => setRecipient(e.target.value)}\n            placeholder=\"Enter the recipient's wallet address\"\n            disabled={!connected}\n          />\n        </div>\n        \n        <div className=\"mb-3\">\n          <label className=\"form-label\">Amount</label>\n          <div className=\"input-group\">\n            <input \n              type=\"number\" \n              className=\"form-control\" \n              value={amount} \n              onChange={(e) => setAmount(e.target.value)}\n              placeholder=\"Enter amount to transfer\"\n              step=\"any\"\n              min=\"0\"\n              disabled={!connected}\n            />\n            <span className=\"input-group-text\">\n              {tokenInfo ? tokenInfo.symbol : 'Tokens'}\n            </span>\n            <button \n              type=\"button\" \n              className=\"btn btn-outline-secondary\" \n              onClick={handleMaxAmount}\n              disabled={!connected || balance === null}\n            >\n              Max\n            </button>\n          </div>\n        </div>\n        \n        {error && (\n          <div className=\"alert alert-danger mb-3\">\n            {error}\n          </div>\n        )}\n        \n        {success && (\n          <div className=\"alert alert-success mb-3\">\n            {success}\n          </div>\n        )}\n        \n        <button\n          type=\"submit\"\n          className=\"btn btn-primary w-100\"\n          disabled={loading || !connected || !tokenInfo || !recipient || !amount}\n        >\n          {loading ? (\n            <>\n              <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n              Processing...\n            </>\n          ) : (\n            `Transfer ${tokenInfo ? tokenInfo.symbol : 'Tokens'}`\n          )}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default TokenTransfer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}