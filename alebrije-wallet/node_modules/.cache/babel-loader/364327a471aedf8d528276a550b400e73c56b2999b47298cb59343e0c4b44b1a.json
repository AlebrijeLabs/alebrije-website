{"ast":null,"code":"import UniversalProvider from '@walletconnect/universal-provider';\nimport { ConstantsUtil, NetworkUtil, ParseUtil } from '@reown/appkit-common';\nimport { AccountController, AlertController, AssetUtil, BlockchainApiController, ChainController, ConnectionController, ConnectorController, CoreHelperUtil, EnsController, EventsController, ModalController, OptionsController, PublicStateController, RouterController, SnackController, StorageUtil, ThemeController } from '@reown/appkit-controllers';\nimport { WalletUtil } from '@reown/appkit-scaffold-ui/utils';\nimport { setColorTheme, setThemeVariables } from '@reown/appkit-ui';\nimport { CaipNetworksUtil, ErrorUtil, HelpersUtil, LoggerUtil, ConstantsUtil as UtilConstantsUtil } from '@reown/appkit-utils';\nimport { ProviderUtil } from '@reown/appkit-utils';\nimport { UniversalAdapter } from '../universal-adapter/client.js';\nimport { WcHelpersUtil } from '../utils/index.js';\nexport class AppKitBaseClient {\n  constructor(options) {\n    this.hasSwitchedToPreferredAccountTypeOnConnect = false;\n    this.chainNamespaces = [];\n    this.reportedAlertErrors = {};\n    // -- Public Internal ---------------------------------------------------\n    this.getCaipNetwork = chainNamespace => {\n      if (chainNamespace) {\n        const namespaceCaipNetwork = ChainController.getNetworkData(chainNamespace)?.caipNetwork;\n        if (namespaceCaipNetwork) {\n          return namespaceCaipNetwork;\n        }\n        return ChainController.getRequestedCaipNetworks(chainNamespace).filter(c => c.chainNamespace === chainNamespace)?.[0];\n      }\n      return ChainController.state.activeCaipNetwork || this.defaultCaipNetwork;\n    };\n    this.getCaipNetworkId = () => {\n      const network = this.getCaipNetwork();\n      if (network) {\n        return network.id;\n      }\n      return undefined;\n    };\n    this.getCaipNetworks = namespace => ChainController.getRequestedCaipNetworks(namespace);\n    this.getActiveChainNamespace = () => ChainController.state.activeChain;\n    this.setRequestedCaipNetworks = (requestedCaipNetworks, chain) => {\n      ChainController.setRequestedCaipNetworks(requestedCaipNetworks, chain);\n    };\n    this.getApprovedCaipNetworkIds = () => ChainController.getAllApprovedCaipNetworkIds();\n    this.getCaipAddress = chainNamespace => {\n      if (ChainController.state.activeChain === chainNamespace || !chainNamespace) {\n        return ChainController.state.activeCaipAddress;\n      }\n      return ChainController.getAccountProp('caipAddress', chainNamespace);\n    };\n    this.setClientId = clientId => {\n      BlockchainApiController.setClientId(clientId);\n    };\n    this.getProvider = namespace => ProviderUtil.getProvider(namespace);\n    this.getProviderType = namespace => ProviderUtil.getProviderId(namespace);\n    this.getPreferredAccountType = () => AccountController.state.preferredAccountType;\n    this.setCaipAddress = (caipAddress, chain) => {\n      AccountController.setCaipAddress(caipAddress, chain);\n    };\n    this.setBalance = (balance, balanceSymbol, chain) => {\n      AccountController.setBalance(balance, balanceSymbol, chain);\n    };\n    this.setProfileName = (profileName, chain) => {\n      AccountController.setProfileName(profileName, chain);\n    };\n    this.setProfileImage = (profileImage, chain) => {\n      AccountController.setProfileImage(profileImage, chain);\n    };\n    this.setUser = (user, chain) => {\n      AccountController.setUser(user, chain);\n      if (OptionsController.state.enableEmbedded) {\n        ModalController.close();\n      }\n    };\n    this.resetAccount = chain => {\n      AccountController.resetAccount(chain);\n    };\n    this.setCaipNetwork = caipNetwork => {\n      ChainController.setActiveCaipNetwork(caipNetwork);\n    };\n    this.setCaipNetworkOfNamespace = (caipNetwork, chainNamespace) => {\n      ChainController.setChainNetworkData(chainNamespace, {\n        caipNetwork\n      });\n    };\n    this.setAllAccounts = (addresses, chain) => {\n      AccountController.setAllAccounts(addresses, chain);\n      OptionsController.setHasMultipleAddresses(addresses?.length > 1);\n    };\n    this.setStatus = (status, chain) => {\n      AccountController.setStatus(status, chain);\n      // If at least one namespace is connected, set the connection status\n      if (ConnectorController.isConnected()) {\n        StorageUtil.setConnectionStatus('connected');\n      } else {\n        StorageUtil.setConnectionStatus('disconnected');\n      }\n    };\n    this.getAddressByChainNamespace = chainNamespace => ChainController.getAccountProp('address', chainNamespace);\n    this.setConnectors = connectors => {\n      const allConnectors = [...ConnectorController.getConnectors(), ...connectors];\n      ConnectorController.setConnectors(allConnectors);\n    };\n    this.fetchIdentity = request => BlockchainApiController.fetchIdentity(request);\n    this.getReownName = address => EnsController.getNamesForAddress(address);\n    this.getConnectors = () => ConnectorController.getConnectors();\n    this.getConnectorImage = connector => AssetUtil.getConnectorImage(connector);\n    this.setConnectedWalletInfo = (connectedWalletInfo, chain) => {\n      const type = ProviderUtil.getProviderId(chain);\n      const walletInfo = connectedWalletInfo ? {\n        ...connectedWalletInfo,\n        type\n      } : undefined;\n      AccountController.setConnectedWalletInfo(walletInfo, chain);\n    };\n    this.getIsConnectedState = () => Boolean(ChainController.state.activeCaipAddress);\n    this.addAddressLabel = (address, label, chain) => {\n      AccountController.addAddressLabel(address, label, chain);\n    };\n    this.removeAddressLabel = (address, chain) => {\n      AccountController.removeAddressLabel(address, chain);\n    };\n    this.getAddress = chainNamespace => {\n      if (ChainController.state.activeChain === chainNamespace || !chainNamespace) {\n        return AccountController.state.address;\n      }\n      return ChainController.getAccountProp('address', chainNamespace);\n    };\n    this.setApprovedCaipNetworksData = namespace => ChainController.setApprovedCaipNetworksData(namespace);\n    this.resetNetwork = namespace => {\n      ChainController.resetNetwork(namespace);\n    };\n    this.addConnector = connector => {\n      ConnectorController.addConnector(connector);\n    };\n    this.resetWcConnection = () => {\n      ConnectionController.resetWcConnection();\n    };\n    this.setAddressExplorerUrl = (addressExplorerUrl, chain) => {\n      AccountController.setAddressExplorerUrl(addressExplorerUrl, chain);\n    };\n    this.setSmartAccountDeployed = (isDeployed, chain) => {\n      AccountController.setSmartAccountDeployed(isDeployed, chain);\n    };\n    this.setSmartAccountEnabledNetworks = (smartAccountEnabledNetworks, chain) => {\n      ChainController.setSmartAccountEnabledNetworks(smartAccountEnabledNetworks, chain);\n    };\n    this.setPreferredAccountType = (preferredAccountType, chain) => {\n      AccountController.setPreferredAccountType(preferredAccountType, chain);\n    };\n    this.setEIP6963Enabled = enabled => {\n      OptionsController.setEIP6963Enabled(enabled);\n    };\n    this.handleUnsafeRPCRequest = () => {\n      if (this.isOpen()) {\n        // If we are on the modal but there is no transaction stack, close the modal\n        if (this.isTransactionStackEmpty()) {\n          return;\n        }\n        // Check if we need to replace or redirect\n        this.redirect('ApproveTransaction');\n      } else {\n        // If called from outside the modal, open ApproveTransaction\n        this.open({\n          view: 'ApproveTransaction'\n        });\n      }\n    };\n    this.options = options;\n    this.version = options.sdkVersion;\n    this.caipNetworks = this.extendCaipNetworks(options);\n    this.chainNamespaces = [...new Set(this.caipNetworks?.map(caipNetwork => caipNetwork.chainNamespace))];\n    this.defaultCaipNetwork = this.extendDefaultCaipNetwork(options);\n    this.chainAdapters = this.createAdapters(options.adapters);\n    this.initialize(options);\n    this.sendInitializeEvent(options);\n  }\n  async initialize(options) {\n    this.initControllers(options);\n    await this.initChainAdapters();\n    await this.injectModalUi();\n    await this.syncExistingConnection();\n    PublicStateController.set({\n      initialized: true\n    });\n  }\n  sendInitializeEvent(options) {\n    const {\n      ...optionsCopy\n    } = options;\n    delete optionsCopy.adapters;\n    EventsController.sendEvent({\n      type: 'track',\n      event: 'INITIALIZE',\n      properties: {\n        ...optionsCopy,\n        networks: options.networks.map(n => n.id),\n        siweConfig: {\n          options: options.siweConfig?.options || {}\n        }\n      }\n    });\n  }\n  // -- Controllers initialization ---------------------------------------------------\n  initControllers(options) {\n    this.initializeOptionsController(options);\n    this.initializeChainController(options);\n    this.initializeThemeController(options);\n    this.initializeConnectionController(options);\n    this.initializeConnectorController();\n  }\n  initializeThemeController(options) {\n    if (options.themeMode) {\n      ThemeController.setThemeMode(options.themeMode);\n    }\n    if (options.themeVariables) {\n      ThemeController.setThemeVariables(options.themeVariables);\n    }\n  }\n  initializeChainController(options) {\n    if (!this.connectionControllerClient || !this.networkControllerClient) {\n      throw new Error('ConnectionControllerClient and NetworkControllerClient must be set');\n    }\n    ChainController.initialize(options.adapters ?? [], this.caipNetworks, {\n      connectionControllerClient: this.connectionControllerClient,\n      networkControllerClient: this.networkControllerClient\n    });\n    const network = this.getDefaultNetwork();\n    if (network) {\n      ChainController.setActiveCaipNetwork(network);\n    }\n  }\n  initializeConnectionController(options) {\n    ConnectionController.setWcBasic(options.basic ?? false);\n  }\n  initializeConnectorController() {\n    ConnectorController.initialize(this.chainNamespaces);\n  }\n  initializeOptionsController(options) {\n    OptionsController.setDebug(options.debug !== false);\n    // On by default\n    OptionsController.setEnableWalletConnect(options.enableWalletConnect !== false);\n    OptionsController.setEnableWalletGuide(options.enableWalletGuide !== false);\n    OptionsController.setEnableWallets(options.enableWallets !== false);\n    OptionsController.setEIP6963Enabled(options.enableEIP6963 !== false);\n    OptionsController.setEnableNetworkSwitch(options.enableNetworkSwitch !== false);\n    OptionsController.setEnableAuthLogger(options.enableAuthLogger !== false);\n    OptionsController.setCustomRpcUrls(options.customRpcUrls);\n    OptionsController.setSdkVersion(options.sdkVersion);\n    OptionsController.setProjectId(options.projectId);\n    OptionsController.setEnableEmbedded(options.enableEmbedded);\n    OptionsController.setAllWallets(options.allWallets);\n    OptionsController.setIncludeWalletIds(options.includeWalletIds);\n    OptionsController.setExcludeWalletIds(options.excludeWalletIds);\n    OptionsController.setFeaturedWalletIds(options.featuredWalletIds);\n    OptionsController.setTokens(options.tokens);\n    OptionsController.setTermsConditionsUrl(options.termsConditionsUrl);\n    OptionsController.setPrivacyPolicyUrl(options.privacyPolicyUrl);\n    OptionsController.setCustomWallets(options.customWallets);\n    OptionsController.setFeatures(options.features);\n    OptionsController.setAllowUnsupportedChain(options.allowUnsupportedChain);\n    OptionsController.setDefaultAccountTypes(options.defaultAccountTypes);\n    OptionsController.setUniversalProviderConfigOverride(options.universalProviderConfigOverride);\n    const defaultMetaData = this.getDefaultMetaData();\n    if (!options.metadata && defaultMetaData) {\n      options.metadata = defaultMetaData;\n    }\n    OptionsController.setMetadata(options.metadata);\n    OptionsController.setDisableAppend(options.disableAppend);\n    OptionsController.setEnableEmbedded(options.enableEmbedded);\n    OptionsController.setSIWX(options.siwx);\n    if (!options.projectId) {\n      AlertController.open(ErrorUtil.ALERT_ERRORS.PROJECT_ID_NOT_CONFIGURED, 'error');\n      return;\n    }\n    const evmAdapter = options.adapters?.find(adapter => adapter.namespace === ConstantsUtil.CHAIN.EVM);\n    // Set the SIWE client for EVM chains\n    if (evmAdapter) {\n      if (options.siweConfig) {\n        if (options.siwx) {\n          throw new Error('Cannot set both `siweConfig` and `siwx` options');\n        }\n        OptionsController.setSIWX(options.siweConfig.mapToSIWX());\n      }\n    }\n  }\n  getDefaultMetaData() {\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      return {\n        name: document.getElementsByTagName('title')?.[0]?.textContent || '',\n        description: document.querySelector('meta[property=\"og:description\"]')?.content || '',\n        url: window.location.origin,\n        icons: [document.querySelector('link[rel~=\"icon\"]')?.href || '']\n      };\n    }\n    return null;\n  }\n  // -- Network Initialization ---------------------------------------------------\n  setUnsupportedNetwork(chainId) {\n    const namespace = this.getActiveChainNamespace();\n    if (namespace) {\n      const unsupportedNetwork = CaipNetworksUtil.getUnsupportedNetwork(`${namespace}:${chainId}`);\n      ChainController.setActiveCaipNetwork(unsupportedNetwork);\n    }\n  }\n  getDefaultNetwork() {\n    return CaipNetworksUtil.getCaipNetworkFromStorage(this.defaultCaipNetwork);\n  }\n  extendCaipNetwork(network, options) {\n    const extendedNetwork = CaipNetworksUtil.extendCaipNetwork(network, {\n      customNetworkImageUrls: options.chainImages,\n      projectId: options.projectId\n    });\n    return extendedNetwork;\n  }\n  extendCaipNetworks(options) {\n    const extendedNetworks = CaipNetworksUtil.extendCaipNetworks(options.networks, {\n      customNetworkImageUrls: options.chainImages,\n      customRpcUrls: options.customRpcUrls,\n      projectId: options.projectId\n    });\n    return extendedNetworks;\n  }\n  extendDefaultCaipNetwork(options) {\n    const defaultNetwork = options.networks.find(n => n.id === options.defaultNetwork?.id);\n    const extendedNetwork = defaultNetwork ? CaipNetworksUtil.extendCaipNetwork(defaultNetwork, {\n      customNetworkImageUrls: options.chainImages,\n      customRpcUrls: options.customRpcUrls,\n      projectId: options.projectId\n    }) : undefined;\n    return extendedNetwork;\n  }\n  // -- Client Initialization ---------------------------------------------------\n  createClients() {\n    this.connectionControllerClient = {\n      connectWalletConnect: async () => {\n        const activeChain = ChainController.state.activeChain;\n        const adapter = this.getAdapter(activeChain);\n        const chainId = this.getCaipNetwork(activeChain)?.id;\n        if (!adapter) {\n          throw new Error('Adapter not found');\n        }\n        const result = await adapter.connectWalletConnect(chainId);\n        this.close();\n        this.setClientId(result?.clientId || null);\n        StorageUtil.setConnectedNamespaces([...ChainController.state.chains.keys()]);\n        this.chainNamespaces.forEach(namespace => {\n          ConnectorController.setConnectorId(UtilConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT, namespace);\n        });\n        await this.syncWalletConnectAccount();\n      },\n      connectExternal: async _ref => {\n        let {\n          id,\n          info,\n          type,\n          provider,\n          chain,\n          caipNetwork\n        } = _ref;\n        const activeChain = ChainController.state.activeChain;\n        const chainToUse = chain || activeChain;\n        const adapter = this.getAdapter(chainToUse);\n        if (chain && chain !== activeChain && !caipNetwork) {\n          const toConnectNetwork = this.caipNetworks?.find(network => network.chainNamespace === chain);\n          if (toConnectNetwork) {\n            this.setCaipNetwork(toConnectNetwork);\n          }\n        }\n        if (!adapter) {\n          throw new Error('Adapter not found');\n        }\n        const fallbackCaipNetwork = this.getCaipNetwork(chainToUse);\n        const res = await adapter.connect({\n          id,\n          info,\n          type,\n          provider,\n          chainId: caipNetwork?.id || fallbackCaipNetwork?.id,\n          rpcUrl: caipNetwork?.rpcUrls?.default?.http?.[0] || fallbackCaipNetwork?.rpcUrls?.default?.http?.[0]\n        });\n        if (!res) {\n          return;\n        }\n        StorageUtil.addConnectedNamespace(chainToUse);\n        this.syncProvider({\n          ...res,\n          chainNamespace: chainToUse\n        });\n        await this.syncAccount({\n          ...res,\n          chainNamespace: chainToUse\n        });\n        const {\n          accounts\n        } = await adapter.getAccounts({\n          namespace: chainToUse,\n          id\n        });\n        this.setAllAccounts(accounts, chainToUse);\n      },\n      reconnectExternal: async _ref2 => {\n        let {\n          id,\n          info,\n          type,\n          provider\n        } = _ref2;\n        const namespace = ChainController.state.activeChain;\n        const adapter = this.getAdapter(namespace);\n        if (adapter?.reconnect) {\n          await adapter?.reconnect({\n            id,\n            info,\n            type,\n            provider,\n            chainId: this.getCaipNetwork()?.id\n          });\n          StorageUtil.addConnectedNamespace(namespace);\n        }\n      },\n      disconnect: async chainNamespace => {\n        const namespace = chainNamespace || ChainController.state.activeChain;\n        const adapter = this.getAdapter(namespace);\n        const provider = ProviderUtil.getProvider(namespace);\n        const providerType = ProviderUtil.getProviderId(namespace);\n        await adapter?.disconnect({\n          provider,\n          providerType\n        });\n        StorageUtil.removeConnectedNamespace(namespace);\n        ProviderUtil.resetChain(namespace);\n        this.setUser(undefined, namespace);\n        this.setStatus('disconnected', namespace);\n        this.hasSwitchedToPreferredAccountTypeOnConnect = false;\n      },\n      checkInstalled: ids => {\n        if (!ids) {\n          return Boolean(window.ethereum);\n        }\n        return ids.some(id => Boolean(window.ethereum?.[String(id)]));\n      },\n      signMessage: async message => {\n        const adapter = this.getAdapter(ChainController.state.activeChain);\n        const result = await adapter?.signMessage({\n          message,\n          address: AccountController.state.address,\n          provider: ProviderUtil.getProvider(ChainController.state.activeChain)\n        });\n        return result?.signature || '';\n      },\n      sendTransaction: async args => {\n        if (args.chainNamespace === ConstantsUtil.CHAIN.EVM) {\n          const adapter = this.getAdapter(ChainController.state.activeChain);\n          const provider = ProviderUtil.getProvider(ChainController.state.activeChain);\n          const result = await adapter?.sendTransaction({\n            ...args,\n            caipNetwork: this.getCaipNetwork(),\n            provider\n          });\n          return result?.hash || '';\n        }\n        return '';\n      },\n      estimateGas: async args => {\n        if (args.chainNamespace === ConstantsUtil.CHAIN.EVM) {\n          const adapter = this.getAdapter(ChainController.state.activeChain);\n          const provider = ProviderUtil.getProvider(ChainController.state.activeChain);\n          const caipNetwork = this.getCaipNetwork();\n          if (!caipNetwork) {\n            throw new Error('CaipNetwork is undefined');\n          }\n          const result = await adapter?.estimateGas({\n            ...args,\n            provider,\n            caipNetwork\n          });\n          return result?.gas || 0n;\n        }\n        return 0n;\n      },\n      getEnsAvatar: async () => {\n        const adapter = this.getAdapter(ChainController.state.activeChain);\n        const result = await adapter?.getProfile({\n          address: AccountController.state.address,\n          chainId: Number(this.getCaipNetwork()?.id)\n        });\n        return result?.profileImage || false;\n      },\n      getEnsAddress: async name => {\n        const adapter = this.getAdapter(ChainController.state.activeChain);\n        const caipNetwork = this.getCaipNetwork();\n        if (!caipNetwork) {\n          return false;\n        }\n        const result = await adapter?.getEnsAddress({\n          name,\n          caipNetwork\n        });\n        return result?.address || false;\n      },\n      writeContract: async args => {\n        const adapter = this.getAdapter(ChainController.state.activeChain);\n        const caipNetwork = this.getCaipNetwork();\n        const caipAddress = this.getCaipAddress();\n        const provider = ProviderUtil.getProvider(ChainController.state.activeChain);\n        if (!caipNetwork || !caipAddress) {\n          throw new Error('CaipNetwork or CaipAddress is undefined');\n        }\n        const result = await adapter?.writeContract({\n          ...args,\n          caipNetwork,\n          provider,\n          caipAddress\n        });\n        return result?.hash;\n      },\n      parseUnits: (value, decimals) => {\n        const adapter = this.getAdapter(ChainController.state.activeChain);\n        return adapter?.parseUnits({\n          value,\n          decimals\n        }) ?? 0n;\n      },\n      formatUnits: (value, decimals) => {\n        const adapter = this.getAdapter(ChainController.state.activeChain);\n        return adapter?.formatUnits({\n          value,\n          decimals\n        }) ?? '0';\n      },\n      getCapabilities: async params => {\n        const adapter = this.getAdapter(ChainController.state.activeChain);\n        return await adapter?.getCapabilities(params);\n      },\n      grantPermissions: async params => {\n        const adapter = this.getAdapter(ChainController.state.activeChain);\n        return await adapter?.grantPermissions(params);\n      },\n      revokePermissions: async params => {\n        const adapter = this.getAdapter(ChainController.state.activeChain);\n        if (adapter?.revokePermissions) {\n          return await adapter.revokePermissions(params);\n        }\n        return '0x';\n      },\n      walletGetAssets: async params => {\n        const adapter = this.getAdapter(ChainController.state.activeChain);\n        return (await adapter?.walletGetAssets(params)) ?? {};\n      }\n    };\n    this.networkControllerClient = {\n      switchCaipNetwork: async caipNetwork => await this.switchCaipNetwork(caipNetwork),\n      // eslint-disable-next-line @typescript-eslint/require-await\n      getApprovedCaipNetworksData: async () => this.getApprovedCaipNetworksData()\n    };\n    ConnectionController.setClient(this.connectionControllerClient);\n  }\n  getApprovedCaipNetworksData() {\n    const providerType = ProviderUtil.getProviderId(ChainController.state.activeChain);\n    if (providerType === UtilConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT) {\n      const namespaces = this.universalProvider?.session?.namespaces;\n      return {\n        /*\n         * MetaMask Wallet only returns 1 namespace in the session object. This makes it imposible\n         * to switch to other networks. Setting supportsAllNetworks to true for MetaMask Wallet\n         * will make it possible to switch to other networks.\n         */\n        supportsAllNetworks: this.universalProvider?.session?.peer?.metadata.name === 'MetaMask Wallet',\n        approvedCaipNetworkIds: this.getChainsFromNamespaces(namespaces)\n      };\n    }\n    return {\n      supportsAllNetworks: true,\n      approvedCaipNetworkIds: []\n    };\n  }\n  async switchCaipNetwork(caipNetwork) {\n    if (!caipNetwork) {\n      return;\n    }\n    const networkNamespace = caipNetwork.chainNamespace;\n    const namespaceAddress = this.getAddressByChainNamespace(caipNetwork.chainNamespace);\n    if (namespaceAddress) {\n      const provider = ProviderUtil.getProvider(networkNamespace);\n      const providerType = ProviderUtil.getProviderId(networkNamespace);\n      if (caipNetwork.chainNamespace === ChainController.state.activeChain) {\n        const adapter = this.getAdapter(networkNamespace);\n        await adapter?.switchNetwork({\n          caipNetwork,\n          provider,\n          providerType\n        });\n      } else {\n        this.setCaipNetwork(caipNetwork);\n        if (providerType === UtilConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT) {\n          this.syncWalletConnectAccount();\n        } else {\n          const address = this.getAddressByChainNamespace(networkNamespace);\n          if (address) {\n            this.syncAccount({\n              address,\n              chainId: caipNetwork.id,\n              chainNamespace: networkNamespace\n            });\n          }\n        }\n      }\n    } else {\n      this.setCaipNetwork(caipNetwork);\n    }\n  }\n  getChainsFromNamespaces() {\n    let namespaces = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Object.values(namespaces).flatMap(namespace => {\n      const chains = namespace.chains || [];\n      const accountsChains = namespace.accounts.map(account => {\n        const {\n          chainId,\n          chainNamespace\n        } = ParseUtil.parseCaipAddress(account);\n        return `${chainNamespace}:${chainId}`;\n      });\n      return Array.from(new Set([...chains, ...accountsChains]));\n    });\n  }\n  // -- Adapter Initialization ---------------------------------------------------\n  createAdapters(blueprints) {\n    this.createClients();\n    return this.chainNamespaces.reduce((adapters, namespace) => {\n      const blueprint = blueprints?.find(b => b.namespace === namespace);\n      if (blueprint) {\n        adapters[namespace] = blueprint;\n        adapters[namespace].namespace = namespace;\n        adapters[namespace].construct({\n          namespace,\n          projectId: this.options?.projectId,\n          networks: this.caipNetworks\n        });\n      } else {\n        adapters[namespace] = new UniversalAdapter({\n          namespace,\n          networks: this.caipNetworks\n        });\n      }\n      return adapters;\n      // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n    }, {});\n  }\n  async initChainAdapter(namespace) {\n    this.onConnectors(namespace);\n    this.listenAdapter(namespace);\n    this.chainAdapters?.[namespace].syncConnectors(this.options, this);\n    await this.createUniversalProviderForAdapter(namespace);\n  }\n  async initChainAdapters() {\n    await Promise.all(this.chainNamespaces.map(async namespace => {\n      await this.initChainAdapter(namespace);\n    }));\n  }\n  onConnectors(chainNamespace) {\n    const adapter = this.getAdapter(chainNamespace);\n    adapter?.on('connectors', this.setConnectors.bind(this));\n  }\n  listenAdapter(chainNamespace) {\n    const adapter = this.getAdapter(chainNamespace);\n    if (!adapter) {\n      return;\n    }\n    const connectionStatus = StorageUtil.getConnectionStatus();\n    if (connectionStatus === 'connected') {\n      this.setStatus('connecting', chainNamespace);\n    } else if (connectionStatus === 'disconnected') {\n      /*\n       * Address cache is kept after disconnecting from the wallet\n       * but should be cleared if appkit is launched in disconnected state\n       */\n      StorageUtil.clearAddressCache();\n      this.setStatus(connectionStatus, chainNamespace);\n    } else {\n      this.setStatus(connectionStatus, chainNamespace);\n    }\n    adapter.on('switchNetwork', _ref3 => {\n      let {\n        address,\n        chainId\n      } = _ref3;\n      const caipNetwork = this.caipNetworks?.find(n => n.id === chainId || n.caipNetworkId === chainId);\n      const isSameNamespace = ChainController.state.activeChain === chainNamespace;\n      const accountAddress = ChainController.getAccountProp('address', chainNamespace);\n      if (caipNetwork) {\n        const account = isSameNamespace && address ? address : accountAddress;\n        if (account) {\n          this.syncAccount({\n            address: account,\n            chainId,\n            chainNamespace\n          });\n        }\n      } else {\n        this.setUnsupportedNetwork(chainId);\n      }\n    });\n    adapter.on('disconnect', this.disconnect.bind(this, chainNamespace));\n    adapter.on('pendingTransactions', () => {\n      const address = AccountController.state.address;\n      const activeCaipNetwork = ChainController.state.activeCaipNetwork;\n      if (!address || !activeCaipNetwork?.id) {\n        return;\n      }\n      this.updateNativeBalance(address, activeCaipNetwork.id, activeCaipNetwork.chainNamespace);\n    });\n    adapter.on('accountChanged', _ref4 => {\n      let {\n        address,\n        chainId\n      } = _ref4;\n      const isActiveChain = ChainController.state.activeChain === chainNamespace;\n      if (isActiveChain && chainId) {\n        this.syncAccount({\n          address,\n          chainId,\n          chainNamespace\n        });\n      } else if (isActiveChain && ChainController.state.activeCaipNetwork?.id) {\n        this.syncAccount({\n          address,\n          chainId: ChainController.state.activeCaipNetwork?.id,\n          chainNamespace\n        });\n      } else {\n        this.syncAccountInfo(address, chainId, chainNamespace);\n      }\n    });\n  }\n  async createUniversalProviderForAdapter(chainNamespace) {\n    await this.getUniversalProvider();\n    if (this.universalProvider) {\n      this.chainAdapters?.[chainNamespace]?.setUniversalProvider?.(this.universalProvider);\n    }\n  }\n  // -- Connection Sync ---------------------------------------------------\n  async syncExistingConnection() {\n    await Promise.allSettled(this.chainNamespaces.map(namespace => this.syncNamespaceConnection(namespace)));\n  }\n  async syncNamespaceConnection(namespace) {\n    try {\n      const connectorId = ConnectorController.getConnectorId(namespace);\n      this.setStatus('connecting', namespace);\n      switch (connectorId) {\n        case ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT:\n          await this.syncWalletConnectAccount();\n          break;\n        case ConstantsUtil.CONNECTOR_ID.AUTH:\n          // Handled during initialization of adapters' auth provider\n          break;\n        default:\n          await this.syncAdapterConnection(namespace);\n      }\n    } catch (err) {\n      console.warn(\"AppKit couldn't sync existing connection\", err);\n      this.setStatus('disconnected', namespace);\n    }\n  }\n  async syncAdapterConnection(namespace) {\n    const adapter = this.getAdapter(namespace);\n    const connectorId = ConnectorController.getConnectorId(namespace);\n    const caipNetwork = this.getCaipNetwork(namespace);\n    const connector = ConnectorController.getConnectors(namespace).find(c => c.id === connectorId);\n    try {\n      if (!adapter || !connector) {\n        throw new Error(`Adapter or connector not found for namespace ${namespace}`);\n      }\n      if (!caipNetwork?.id) {\n        throw new Error('CaipNetwork not found');\n      }\n      const connection = await adapter?.syncConnection({\n        namespace,\n        id: connector.id,\n        chainId: caipNetwork.id,\n        rpcUrl: caipNetwork?.rpcUrls?.default?.http?.[0]\n      });\n      if (connection) {\n        const accounts = await adapter?.getAccounts({\n          namespace,\n          id: connector.id\n        });\n        if (accounts && accounts.accounts.length > 0) {\n          this.setAllAccounts(accounts.accounts, namespace);\n        } else {\n          this.setAllAccounts([CoreHelperUtil.createAccount(namespace, connection.address, 'eoa')], namespace);\n        }\n        this.syncProvider({\n          ...connection,\n          chainNamespace: namespace\n        });\n        await this.syncAccount({\n          ...connection,\n          chainNamespace: namespace\n        });\n        this.setStatus('connected', namespace);\n      } else {\n        this.setStatus('disconnected', namespace);\n      }\n    } catch (e) {\n      this.setStatus('disconnected', namespace);\n    }\n  }\n  async syncWalletConnectAccount() {\n    const syncTasks = this.chainNamespaces.map(async chainNamespace => {\n      const adapter = this.getAdapter(chainNamespace);\n      const namespaceAccounts = this.universalProvider?.session?.namespaces?.[chainNamespace]?.accounts || [];\n      // We try and find the address for this network in the session object.\n      const activeChainId = ChainController.state.activeCaipNetwork?.id;\n      const sessionAddress = namespaceAccounts.find(account => {\n        const {\n          chainId\n        } = ParseUtil.parseCaipAddress(account);\n        return chainId === activeChainId?.toString();\n      }) || namespaceAccounts[0];\n      if (sessionAddress) {\n        const caipAddress = ParseUtil.validateCaipAddress(sessionAddress);\n        const {\n          chainId,\n          address\n        } = ParseUtil.parseCaipAddress(caipAddress);\n        ProviderUtil.setProviderId(chainNamespace, UtilConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT);\n        if (this.caipNetworks && ChainController.state.activeCaipNetwork && adapter?.namespace !== ConstantsUtil.CHAIN.EVM) {\n          const provider = adapter?.getWalletConnectProvider({\n            caipNetworks: this.caipNetworks,\n            provider: this.universalProvider,\n            activeCaipNetwork: ChainController.state.activeCaipNetwork\n          });\n          ProviderUtil.setProvider(chainNamespace, provider);\n        } else {\n          ProviderUtil.setProvider(chainNamespace, this.universalProvider);\n        }\n        ConnectorController.setConnectorId(ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT, chainNamespace);\n        StorageUtil.addConnectedNamespace(chainNamespace);\n        this.syncWalletConnectAccounts(chainNamespace);\n        await this.syncAccount({\n          address,\n          chainId,\n          chainNamespace\n        });\n      } else {\n        this.setStatus('disconnected', chainNamespace);\n      }\n      await ChainController.setApprovedCaipNetworksData(chainNamespace);\n    });\n    await Promise.all(syncTasks);\n  }\n  syncWalletConnectAccounts(chainNamespace) {\n    const addresses = this.universalProvider?.session?.namespaces?.[chainNamespace]?.accounts?.map(account => {\n      const {\n        address\n      } = ParseUtil.parseCaipAddress(account);\n      return address;\n    }).filter((address, index, self) => self.indexOf(address) === index);\n    if (addresses) {\n      this.setAllAccounts(addresses.map(address => CoreHelperUtil.createAccount(chainNamespace, address, chainNamespace === 'bip122' ? 'payment' : 'eoa')), chainNamespace);\n    }\n  }\n  syncProvider(_ref5) {\n    let {\n      type,\n      provider,\n      id,\n      chainNamespace\n    } = _ref5;\n    ProviderUtil.setProviderId(chainNamespace, type);\n    ProviderUtil.setProvider(chainNamespace, provider);\n    ConnectorController.setConnectorId(id, chainNamespace);\n  }\n  async syncAccount(params) {\n    const isActiveNamespace = params.chainNamespace === ChainController.state.activeChain;\n    const networkOfChain = ChainController.getCaipNetworkByNamespace(params.chainNamespace, params.chainId);\n    const {\n      address,\n      chainId,\n      chainNamespace\n    } = params;\n    const {\n      chainId: activeChainId\n    } = StorageUtil.getActiveNetworkProps();\n    const chainIdToUse = chainId || activeChainId;\n    const isUnsupportedNetwork = ChainController.state.activeCaipNetwork?.name === ConstantsUtil.UNSUPPORTED_NETWORK_NAME;\n    const shouldSupportAllNetworks = ChainController.getNetworkProp('supportsAllNetworks', chainNamespace);\n    this.setStatus('connected', chainNamespace);\n    if (isUnsupportedNetwork && !shouldSupportAllNetworks) {\n      return;\n    }\n    if (chainIdToUse) {\n      let caipNetwork = this.caipNetworks?.find(n => n.id.toString() === chainIdToUse.toString());\n      let fallbackCaipNetwork = this.caipNetworks?.find(n => n.chainNamespace === chainNamespace);\n      // If doesn't support all networks, we need to use approved networks\n      if (!shouldSupportAllNetworks && !caipNetwork && !fallbackCaipNetwork) {\n        // Connection can be requested for a chain that is not supported by the wallet so we need to use approved networks here\n        const caipNetworkIds = this.getApprovedCaipNetworkIds() || [];\n        const caipNetworkId = caipNetworkIds.find(id => ParseUtil.parseCaipNetworkId(id)?.chainId === chainIdToUse.toString());\n        const fallBackCaipNetworkId = caipNetworkIds.find(id => ParseUtil.parseCaipNetworkId(id)?.chainNamespace === chainNamespace);\n        caipNetwork = this.caipNetworks?.find(n => n.caipNetworkId === caipNetworkId);\n        fallbackCaipNetwork = this.caipNetworks?.find(n => n.caipNetworkId === fallBackCaipNetworkId ||\n        // This is a workaround used in Solana network to support deprecated caipNetworkId\n        'deprecatedCaipNetworkId' in n && n.deprecatedCaipNetworkId === fallBackCaipNetworkId);\n      }\n      const network = caipNetwork || fallbackCaipNetwork;\n      if (network?.chainNamespace === ChainController.state.activeChain) {\n        // If the network is unsupported and the user doesn't allow unsupported chains, we show the unsupported chain UI\n        if (OptionsController.state.enableNetworkSwitch && !OptionsController.state.allowUnsupportedChain && ChainController.state.activeCaipNetwork?.name === ConstantsUtil.UNSUPPORTED_NETWORK_NAME) {\n          ChainController.showUnsupportedChainUI();\n        } else {\n          this.setCaipNetwork(network);\n        }\n      } else if (!isActiveNamespace) {\n        if (networkOfChain) {\n          this.setCaipNetworkOfNamespace(networkOfChain, chainNamespace);\n        }\n      }\n      this.syncConnectedWalletInfo(chainNamespace);\n      if (!HelpersUtil.isLowerCaseMatch(address, AccountController.state.address)) {\n        this.syncAccountInfo(address, network?.id, chainNamespace);\n      }\n      if (isActiveNamespace) {\n        await this.syncBalance({\n          address,\n          chainId: network?.id,\n          chainNamespace\n        });\n      } else {\n        await this.syncBalance({\n          address,\n          chainId: networkOfChain?.id,\n          chainNamespace\n        });\n      }\n    }\n  }\n  async syncAccountInfo(address, chainId, chainNamespace) {\n    const caipAddress = this.getCaipAddress(chainNamespace);\n    const newChainId = chainId || caipAddress?.split(':')[1];\n    if (!newChainId) {\n      return;\n    }\n    const newCaipAddress = `${chainNamespace}:${newChainId}:${address}`;\n    this.setCaipAddress(newCaipAddress, chainNamespace);\n    await this.syncIdentity({\n      address,\n      chainId: newChainId,\n      chainNamespace\n    });\n  }\n  async syncReownName(address, chainNamespace) {\n    try {\n      const registeredWcNames = await this.getReownName(address);\n      if (registeredWcNames[0]) {\n        const wcName = registeredWcNames[0];\n        this.setProfileName(wcName.name, chainNamespace);\n      } else {\n        this.setProfileName(null, chainNamespace);\n      }\n    } catch {\n      this.setProfileName(null, chainNamespace);\n    }\n  }\n  syncConnectedWalletInfo(chainNamespace) {\n    const connectorId = ConnectorController.getConnectorId(chainNamespace);\n    const providerType = ProviderUtil.getProviderId(chainNamespace);\n    if (providerType === UtilConstantsUtil.CONNECTOR_TYPE_ANNOUNCED || providerType === UtilConstantsUtil.CONNECTOR_TYPE_INJECTED) {\n      if (connectorId) {\n        const connector = this.getConnectors().find(c => c.id === connectorId);\n        if (connector) {\n          const {\n            info,\n            name,\n            imageUrl\n          } = connector;\n          const icon = imageUrl || this.getConnectorImage(connector);\n          this.setConnectedWalletInfo({\n            name,\n            icon,\n            ...info\n          }, chainNamespace);\n        }\n      }\n    } else if (providerType === UtilConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT) {\n      const provider = ProviderUtil.getProvider(chainNamespace);\n      if (provider?.session) {\n        this.setConnectedWalletInfo({\n          ...provider.session.peer.metadata,\n          name: provider.session.peer.metadata.name,\n          icon: provider.session.peer.metadata.icons?.[0]\n        }, chainNamespace);\n      }\n    } else if (connectorId) {\n      if (connectorId === ConstantsUtil.CONNECTOR_ID.COINBASE) {\n        const connector = this.getConnectors().find(c => c.id === ConstantsUtil.CONNECTOR_ID.COINBASE);\n        this.setConnectedWalletInfo({\n          name: 'Coinbase Wallet',\n          icon: this.getConnectorImage(connector)\n        }, chainNamespace);\n      } else {\n        this.setConnectedWalletInfo({\n          name: connectorId\n        }, chainNamespace);\n      }\n    }\n  }\n  async syncBalance(params) {\n    const caipNetwork = NetworkUtil.getNetworksByNamespace(this.caipNetworks, params.chainNamespace).find(n => n.id.toString() === params.chainId?.toString());\n    if (!caipNetwork || !params.chainId) {\n      return;\n    }\n    await this.updateNativeBalance(params.address, params.chainId, params.chainNamespace);\n  }\n  async updateNativeBalance(address, chainId, namespace) {\n    const adapter = this.getAdapter(namespace);\n    if (adapter) {\n      const balance = await adapter.getBalance({\n        address,\n        chainId,\n        caipNetwork: this.getCaipNetwork(namespace),\n        tokens: this.options.tokens\n      });\n      this.setBalance(balance.balance, balance.symbol, namespace);\n    }\n  }\n  // -- Universal Provider ---------------------------------------------------\n  async initializeUniversalAdapter() {\n    var _this = this;\n    const logger = LoggerUtil.createLogger(function (error) {\n      if (error) {\n        _this.handleAlertError(error);\n      }\n      // eslint-disable-next-line no-console\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      console.error(...args);\n    });\n    const universalProviderOptions = {\n      projectId: this.options?.projectId,\n      metadata: {\n        name: this.options?.metadata ? this.options?.metadata.name : '',\n        description: this.options?.metadata ? this.options?.metadata.description : '',\n        url: this.options?.metadata ? this.options?.metadata.url : '',\n        icons: this.options?.metadata ? this.options?.metadata.icons : ['']\n      },\n      logger\n    };\n    OptionsController.setManualWCControl(Boolean(this.options?.manualWCControl));\n    this.universalProvider = this.options.universalProvider ?? (await UniversalProvider.init(universalProviderOptions));\n    this.listenWalletConnect();\n  }\n  listenWalletConnect() {\n    if (this.universalProvider) {\n      this.universalProvider.on('display_uri', uri => {\n        ConnectionController.setUri(uri);\n      });\n      this.universalProvider.on('connect', ConnectionController.finalizeWcConnection);\n      this.universalProvider.on('disconnect', () => {\n        this.chainNamespaces.forEach(namespace => {\n          this.resetAccount(namespace);\n        });\n        ConnectionController.resetWcConnection();\n      });\n      this.universalProvider.on('chainChanged', chainId => {\n        // eslint-disable-next-line eqeqeq\n        const caipNetwork = this.caipNetworks?.find(c => c.id == chainId);\n        const currentCaipNetwork = this.getCaipNetwork();\n        if (!caipNetwork) {\n          this.setUnsupportedNetwork(chainId);\n          return;\n        }\n        if (currentCaipNetwork?.id !== caipNetwork?.id) {\n          this.setCaipNetwork(caipNetwork);\n        }\n      });\n      this.universalProvider.on('session_event', callbackData => {\n        if (WcHelpersUtil.isSessionEventData(callbackData)) {\n          const {\n            name,\n            data\n          } = callbackData.params.event;\n          if (name === 'accountsChanged' && Array.isArray(data) && CoreHelperUtil.isCaipAddress(data[0])) {\n            this.syncAccount(ParseUtil.parseCaipAddress(data[0]));\n          }\n        }\n      });\n    }\n  }\n  createUniversalProvider() {\n    if (!this.universalProviderInitPromise && CoreHelperUtil.isClient() && this.options?.projectId) {\n      this.universalProviderInitPromise = this.initializeUniversalAdapter();\n    }\n    return this.universalProviderInitPromise;\n  }\n  async getUniversalProvider() {\n    if (!this.universalProvider) {\n      try {\n        await this.createUniversalProvider();\n      } catch (err) {\n        EventsController.sendEvent({\n          type: 'error',\n          event: 'INTERNAL_SDK_ERROR',\n          properties: {\n            errorType: 'UniversalProviderInitError',\n            errorMessage: err instanceof Error ? err.message : 'Unknown',\n            uncaught: false\n          }\n        });\n        // eslint-disable-next-line no-console\n        console.error('AppKit:getUniversalProvider - Cannot create provider', err);\n      }\n    }\n    return this.universalProvider;\n  }\n  // - Utils -------------------------------------------------------------------\n  handleAlertError(error) {\n    const matchedUniversalProviderError = Object.entries(ErrorUtil.UniversalProviderErrors).find(_ref6 => {\n      let [, {\n        message\n      }] = _ref6;\n      return error.message.includes(message);\n    });\n    const [errorKey, errorValue] = matchedUniversalProviderError ?? [];\n    const {\n      message,\n      alertErrorKey\n    } = errorValue ?? {};\n    if (errorKey && message && !this.reportedAlertErrors[errorKey]) {\n      const alertError = ErrorUtil.ALERT_ERRORS[alertErrorKey];\n      if (alertError) {\n        AlertController.open(alertError, 'error');\n        this.reportedAlertErrors[errorKey] = true;\n      }\n    }\n  }\n  getAdapter(namespace) {\n    if (!namespace) {\n      return undefined;\n    }\n    return this.chainAdapters?.[namespace];\n  }\n  createAdapter(blueprint) {\n    if (!blueprint) {\n      return;\n    }\n    const namespace = blueprint.namespace;\n    if (!namespace) {\n      return;\n    }\n    this.createClients();\n    const adapterBlueprint = blueprint;\n    adapterBlueprint.namespace = namespace;\n    adapterBlueprint.construct({\n      namespace,\n      projectId: this.options?.projectId,\n      networks: this.caipNetworks\n    });\n    if (!this.chainNamespaces.includes(namespace)) {\n      this.chainNamespaces.push(namespace);\n    }\n    if (this.chainAdapters) {\n      this.chainAdapters[namespace] = adapterBlueprint;\n    }\n  }\n  // -- Public -------------------------------------------------------------------\n  async open(options) {\n    await this.injectModalUi();\n    if (options?.uri) {\n      ConnectionController.setUri(options.uri);\n    }\n    await ModalController.open(options);\n  }\n  async close() {\n    await this.injectModalUi();\n    ModalController.close();\n  }\n  setLoading(loading, namespace) {\n    ModalController.setLoading(loading, namespace);\n  }\n  async disconnect(chainNamespace) {\n    await ConnectionController.disconnect(chainNamespace);\n  }\n  // -- review these -------------------------------------------------------------------\n  getError() {\n    return '';\n  }\n  getChainId() {\n    return ChainController.state.activeCaipNetwork?.id;\n  }\n  async switchNetwork(appKitNetwork) {\n    const network = this.caipNetworks?.find(n => n.id === appKitNetwork.id);\n    if (!network) {\n      AlertController.open(ErrorUtil.ALERT_ERRORS.SWITCH_NETWORK_NOT_FOUND, 'error');\n      return;\n    }\n    await ChainController.switchActiveNetwork(network);\n  }\n  getWalletProvider() {\n    return ChainController.state.activeChain ? ProviderUtil.state.providers[ChainController.state.activeChain] : null;\n  }\n  getWalletProviderType() {\n    return ProviderUtil.getProviderId(ChainController.state.activeChain);\n  }\n  subscribeProviders(callback) {\n    return ProviderUtil.subscribeProviders(callback);\n  }\n  getThemeMode() {\n    return ThemeController.state.themeMode;\n  }\n  getThemeVariables() {\n    return ThemeController.state.themeVariables;\n  }\n  setThemeMode(themeMode) {\n    ThemeController.setThemeMode(themeMode);\n    setColorTheme(ThemeController.state.themeMode);\n  }\n  setTermsConditionsUrl(termsConditionsUrl) {\n    OptionsController.setTermsConditionsUrl(termsConditionsUrl);\n  }\n  setPrivacyPolicyUrl(privacyPolicyUrl) {\n    OptionsController.setPrivacyPolicyUrl(privacyPolicyUrl);\n  }\n  setThemeVariables(themeVariables) {\n    ThemeController.setThemeVariables(themeVariables);\n    setThemeVariables(ThemeController.state.themeVariables);\n  }\n  subscribeTheme(callback) {\n    return ThemeController.subscribe(callback);\n  }\n  getWalletInfo() {\n    return AccountController.state.connectedWalletInfo;\n  }\n  getAccount(namespace) {\n    const authConnector = ConnectorController.getAuthConnector(namespace);\n    const accountState = ChainController.getAccountData(namespace);\n    if (!accountState) {\n      return undefined;\n    }\n    return {\n      allAccounts: accountState.allAccounts,\n      caipAddress: accountState.caipAddress,\n      address: CoreHelperUtil.getPlainAddress(accountState.caipAddress),\n      isConnected: Boolean(accountState.caipAddress),\n      status: accountState.status,\n      embeddedWalletInfo: authConnector ? {\n        user: accountState.user,\n        authProvider: accountState.socialProvider || 'email',\n        accountType: accountState.preferredAccountType,\n        isSmartAccountDeployed: Boolean(accountState.smartAccountDeployed)\n      } : undefined\n    };\n  }\n  subscribeAccount(callback, namespace) {\n    const updateVal = () => {\n      const account = this.getAccount(namespace);\n      if (!account) {\n        return;\n      }\n      callback(account);\n    };\n    if (namespace) {\n      ChainController.subscribeChainProp('accountState', updateVal, namespace);\n    } else {\n      ChainController.subscribe(updateVal);\n    }\n    ConnectorController.subscribe(updateVal);\n  }\n  subscribeNetwork(callback) {\n    return ChainController.subscribe(_ref7 => {\n      let {\n        activeCaipNetwork\n      } = _ref7;\n      callback({\n        caipNetwork: activeCaipNetwork,\n        chainId: activeCaipNetwork?.id,\n        caipNetworkId: activeCaipNetwork?.caipNetworkId\n      });\n    });\n  }\n  subscribeWalletInfo(callback) {\n    return AccountController.subscribeKey('connectedWalletInfo', callback);\n  }\n  subscribeShouldUpdateToAddress(callback) {\n    AccountController.subscribeKey('shouldUpdateToAddress', callback);\n  }\n  subscribeCaipNetworkChange(callback) {\n    ChainController.subscribeKey('activeCaipNetwork', callback);\n  }\n  getState() {\n    return PublicStateController.state;\n  }\n  subscribeState(callback) {\n    return PublicStateController.subscribe(callback);\n  }\n  showErrorMessage(message) {\n    SnackController.showError(message);\n  }\n  showSuccessMessage(message) {\n    SnackController.showSuccess(message);\n  }\n  getEvent() {\n    return {\n      ...EventsController.state\n    };\n  }\n  subscribeEvents(callback) {\n    return EventsController.subscribe(callback);\n  }\n  replace(route) {\n    RouterController.replace(route);\n  }\n  redirect(route) {\n    RouterController.push(route);\n  }\n  popTransactionStack(cancel) {\n    RouterController.popTransactionStack(cancel);\n  }\n  isOpen() {\n    return ModalController.state.open;\n  }\n  isTransactionStackEmpty() {\n    return RouterController.state.transactionStack.length === 0;\n  }\n  isTransactionShouldReplaceView() {\n    return RouterController.state.transactionStack[RouterController.state.transactionStack.length - 1]?.replace;\n  }\n  static getInstance() {\n    return this.instance;\n  }\n  updateFeatures(newFeatures) {\n    OptionsController.setFeatures(newFeatures);\n  }\n  updateOptions(newOptions) {\n    const currentOptions = OptionsController.state || {};\n    const updatedOptions = {\n      ...currentOptions,\n      ...newOptions\n    };\n    OptionsController.setOptions(updatedOptions);\n  }\n  setConnectMethodsOrder(connectMethodsOrder) {\n    OptionsController.setConnectMethodsOrder(connectMethodsOrder);\n  }\n  setWalletFeaturesOrder(walletFeaturesOrder) {\n    OptionsController.setWalletFeaturesOrder(walletFeaturesOrder);\n  }\n  setCollapseWallets(collapseWallets) {\n    OptionsController.setCollapseWallets(collapseWallets);\n  }\n  setSocialsOrder(socialsOrder) {\n    OptionsController.setSocialsOrder(socialsOrder);\n  }\n  getConnectMethodsOrder() {\n    return WalletUtil.getConnectOrderMethod(OptionsController.state.features, ConnectorController.getConnectors());\n  }\n  /**\n   * Removes an adapter from the AppKit.\n   * @param namespace - The namespace of the adapter to remove.\n   */\n  removeAdapter(namespace) {\n    const isConnected = this.getIsConnectedState();\n    const adapter = this.getAdapter(namespace);\n    if (!adapter || !this.chainAdapters || isConnected) {\n      return;\n    }\n    const newCaipNetworks = this.caipNetworks?.filter(network => network.chainNamespace !== namespace);\n    ChainController.removeAdapter(namespace);\n    ConnectorController.removeAdapter(namespace);\n    this.chainNamespaces = this.chainNamespaces.filter(n => n !== namespace);\n    this.caipNetworks = newCaipNetworks;\n    adapter.removeAllEventListeners();\n    Reflect.deleteProperty(this.chainAdapters, namespace);\n  }\n  /**\n   * Adds an adapter to the AppKit.\n   * @param adapter - The adapter instance.\n   * @param networks - The list of networks that this adapter supports / uses.\n   */\n  addAdapter(adapter, networks) {\n    const namespace = adapter.namespace;\n    if (!this.connectionControllerClient || !this.networkControllerClient) {\n      return;\n    }\n    if (!this.chainAdapters || !namespace) {\n      return;\n    }\n    const extendedAdapterNetworks = this.extendCaipNetworks({\n      ...this.options,\n      networks\n    });\n    this.caipNetworks = [...(this.caipNetworks || []), ...extendedAdapterNetworks];\n    this.createAdapter(adapter);\n    this.initChainAdapter(namespace);\n    ChainController.addAdapter(adapter, {\n      connectionControllerClient: this.connectionControllerClient,\n      networkControllerClient: this.networkControllerClient\n    }, extendedAdapterNetworks);\n  }\n  /**\n   * Adds a network to an existing adapter in AppKit.\n   * @param namespace - The chain namespace to add the network to (e.g. 'eip155', 'solana')\n   * @param network - The network configuration to add\n   * @throws Error if adapter for namespace doesn't exist\n   */\n  addNetwork(namespace, network) {\n    if (this.chainAdapters && !this.chainAdapters[namespace]) {\n      throw new Error(`Adapter for namespace ${namespace} doesn't exist`);\n    }\n    const extendedNetwork = this.extendCaipNetwork(network, this.options);\n    ChainController.addNetwork(extendedNetwork);\n    if (this.caipNetworks && !this.caipNetworks?.find(n => n.id === extendedNetwork.id)) {\n      this.caipNetworks.push(extendedNetwork);\n    }\n  }\n  /**\n   * Removes a network from an existing adapter in AppKit.\n   * @param namespace - The chain namespace the network belongs to\n   * @param networkId - The network ID to remove\n   * @throws Error if adapter for namespace doesn't exist or if removing last network\n   */\n  removeNetwork(namespace, networkId) {\n    if (this.chainAdapters && !this.chainAdapters[namespace]) {\n      throw new Error(`Adapter for namespace ${namespace} doesn't exist`);\n    }\n    const networkToRemove = this.caipNetworks?.find(n => n.id === networkId);\n    if (!networkToRemove) {\n      throw new Error(`Network with ID ${networkId} not found`);\n    }\n    if (!this.caipNetworks) {\n      return;\n    }\n    const remainingNetworks = this.caipNetworks.filter(n => n.chainNamespace === namespace && n.id !== networkId);\n    if (!remainingNetworks?.length) {\n      throw new Error('Cannot remove last network for a namespace');\n    }\n    ChainController.removeNetwork(namespace, networkId);\n    this.caipNetworks = [...remainingNetworks];\n  }\n}","map":{"version":3,"names":["UniversalProvider","ConstantsUtil","NetworkUtil","ParseUtil","AccountController","AlertController","AssetUtil","BlockchainApiController","ChainController","ConnectionController","ConnectorController","CoreHelperUtil","EnsController","EventsController","ModalController","OptionsController","PublicStateController","RouterController","SnackController","StorageUtil","ThemeController","WalletUtil","setColorTheme","setThemeVariables","CaipNetworksUtil","ErrorUtil","HelpersUtil","LoggerUtil","UtilConstantsUtil","ProviderUtil","UniversalAdapter","WcHelpersUtil","AppKitBaseClient","constructor","options","hasSwitchedToPreferredAccountTypeOnConnect","chainNamespaces","reportedAlertErrors","getCaipNetwork","chainNamespace","namespaceCaipNetwork","getNetworkData","caipNetwork","getRequestedCaipNetworks","filter","c","state","activeCaipNetwork","defaultCaipNetwork","getCaipNetworkId","network","id","undefined","getCaipNetworks","namespace","getActiveChainNamespace","activeChain","setRequestedCaipNetworks","requestedCaipNetworks","chain","getApprovedCaipNetworkIds","getAllApprovedCaipNetworkIds","getCaipAddress","activeCaipAddress","getAccountProp","setClientId","clientId","getProvider","getProviderType","getProviderId","getPreferredAccountType","preferredAccountType","setCaipAddress","caipAddress","setBalance","balance","balanceSymbol","setProfileName","profileName","setProfileImage","profileImage","setUser","user","enableEmbedded","close","resetAccount","setCaipNetwork","setActiveCaipNetwork","setCaipNetworkOfNamespace","setChainNetworkData","setAllAccounts","addresses","setHasMultipleAddresses","length","setStatus","status","isConnected","setConnectionStatus","getAddressByChainNamespace","setConnectors","connectors","allConnectors","getConnectors","fetchIdentity","request","getReownName","address","getNamesForAddress","getConnectorImage","connector","setConnectedWalletInfo","connectedWalletInfo","type","walletInfo","getIsConnectedState","Boolean","addAddressLabel","label","removeAddressLabel","getAddress","setApprovedCaipNetworksData","resetNetwork","addConnector","resetWcConnection","setAddressExplorerUrl","addressExplorerUrl","setSmartAccountDeployed","isDeployed","setSmartAccountEnabledNetworks","smartAccountEnabledNetworks","setPreferredAccountType","setEIP6963Enabled","enabled","handleUnsafeRPCRequest","isOpen","isTransactionStackEmpty","redirect","open","view","version","sdkVersion","caipNetworks","extendCaipNetworks","Set","map","extendDefaultCaipNetwork","chainAdapters","createAdapters","adapters","initialize","sendInitializeEvent","initControllers","initChainAdapters","injectModalUi","syncExistingConnection","set","initialized","optionsCopy","sendEvent","event","properties","networks","n","siweConfig","initializeOptionsController","initializeChainController","initializeThemeController","initializeConnectionController","initializeConnectorController","themeMode","setThemeMode","themeVariables","connectionControllerClient","networkControllerClient","Error","getDefaultNetwork","setWcBasic","basic","setDebug","debug","setEnableWalletConnect","enableWalletConnect","setEnableWalletGuide","enableWalletGuide","setEnableWallets","enableWallets","enableEIP6963","setEnableNetworkSwitch","enableNetworkSwitch","setEnableAuthLogger","enableAuthLogger","setCustomRpcUrls","customRpcUrls","setSdkVersion","setProjectId","projectId","setEnableEmbedded","setAllWallets","allWallets","setIncludeWalletIds","includeWalletIds","setExcludeWalletIds","excludeWalletIds","setFeaturedWalletIds","featuredWalletIds","setTokens","tokens","setTermsConditionsUrl","termsConditionsUrl","setPrivacyPolicyUrl","privacyPolicyUrl","setCustomWallets","customWallets","setFeatures","features","setAllowUnsupportedChain","allowUnsupportedChain","setDefaultAccountTypes","defaultAccountTypes","setUniversalProviderConfigOverride","universalProviderConfigOverride","defaultMetaData","getDefaultMetaData","metadata","setMetadata","setDisableAppend","disableAppend","setSIWX","siwx","ALERT_ERRORS","PROJECT_ID_NOT_CONFIGURED","evmAdapter","find","adapter","CHAIN","EVM","mapToSIWX","window","document","name","getElementsByTagName","textContent","description","querySelector","content","url","location","origin","icons","href","setUnsupportedNetwork","chainId","unsupportedNetwork","getUnsupportedNetwork","getCaipNetworkFromStorage","extendCaipNetwork","extendedNetwork","customNetworkImageUrls","chainImages","extendedNetworks","defaultNetwork","createClients","connectWalletConnect","getAdapter","result","setConnectedNamespaces","chains","keys","forEach","setConnectorId","CONNECTOR_TYPE_WALLET_CONNECT","syncWalletConnectAccount","connectExternal","_ref","info","provider","chainToUse","toConnectNetwork","fallbackCaipNetwork","res","connect","rpcUrl","rpcUrls","default","http","addConnectedNamespace","syncProvider","syncAccount","accounts","getAccounts","reconnectExternal","_ref2","reconnect","disconnect","providerType","removeConnectedNamespace","resetChain","checkInstalled","ids","ethereum","some","String","signMessage","message","signature","sendTransaction","args","hash","estimateGas","gas","getEnsAvatar","getProfile","Number","getEnsAddress","writeContract","parseUnits","value","decimals","formatUnits","getCapabilities","params","grantPermissions","revokePermissions","walletGetAssets","switchCaipNetwork","getApprovedCaipNetworksData","setClient","namespaces","universalProvider","session","supportsAllNetworks","peer","approvedCaipNetworkIds","getChainsFromNamespaces","networkNamespace","namespaceAddress","switchNetwork","arguments","Object","values","flatMap","accountsChains","account","parseCaipAddress","Array","from","blueprints","reduce","blueprint","b","construct","initChainAdapter","onConnectors","listenAdapter","syncConnectors","createUniversalProviderForAdapter","Promise","all","on","bind","connectionStatus","getConnectionStatus","clearAddressCache","_ref3","caipNetworkId","isSameNamespace","accountAddress","updateNativeBalance","_ref4","isActiveChain","syncAccountInfo","getUniversalProvider","setUniversalProvider","allSettled","syncNamespaceConnection","connectorId","getConnectorId","CONNECTOR_ID","WALLET_CONNECT","AUTH","syncAdapterConnection","err","console","warn","connection","syncConnection","createAccount","e","syncTasks","namespaceAccounts","activeChainId","sessionAddress","toString","validateCaipAddress","setProviderId","getWalletConnectProvider","setProvider","syncWalletConnectAccounts","index","self","indexOf","_ref5","isActiveNamespace","networkOfChain","getCaipNetworkByNamespace","getActiveNetworkProps","chainIdToUse","isUnsupportedNetwork","UNSUPPORTED_NETWORK_NAME","shouldSupportAllNetworks","getNetworkProp","caipNetworkIds","parseCaipNetworkId","fallBackCaipNetworkId","deprecatedCaipNetworkId","showUnsupportedChainUI","syncConnectedWalletInfo","isLowerCaseMatch","syncBalance","newChainId","split","newCaipAddress","syncIdentity","syncReownName","registeredWcNames","wcName","CONNECTOR_TYPE_ANNOUNCED","CONNECTOR_TYPE_INJECTED","imageUrl","icon","COINBASE","getNetworksByNamespace","getBalance","symbol","initializeUniversalAdapter","_this","logger","createLogger","error","handleAlertError","_len","_key","universalProviderOptions","setManualWCControl","manualWCControl","init","listenWalletConnect","uri","setUri","finalizeWcConnection","currentCaipNetwork","callbackData","isSessionEventData","data","isArray","isCaipAddress","createUniversalProvider","universalProviderInitPromise","isClient","errorType","errorMessage","uncaught","matchedUniversalProviderError","entries","UniversalProviderErrors","_ref6","includes","errorKey","errorValue","alertErrorKey","alertError","createAdapter","adapterBlueprint","push","setLoading","loading","getError","getChainId","appKitNetwork","SWITCH_NETWORK_NOT_FOUND","switchActiveNetwork","getWalletProvider","providers","getWalletProviderType","subscribeProviders","callback","getThemeMode","getThemeVariables","subscribeTheme","subscribe","getWalletInfo","getAccount","authConnector","getAuthConnector","accountState","getAccountData","allAccounts","getPlainAddress","embeddedWalletInfo","authProvider","socialProvider","accountType","isSmartAccountDeployed","smartAccountDeployed","subscribeAccount","updateVal","subscribeChainProp","subscribeNetwork","_ref7","subscribeWalletInfo","subscribeKey","subscribeShouldUpdateToAddress","subscribeCaipNetworkChange","getState","subscribeState","showErrorMessage","showError","showSuccessMessage","showSuccess","getEvent","subscribeEvents","replace","route","popTransactionStack","cancel","transactionStack","isTransactionShouldReplaceView","getInstance","instance","updateFeatures","newFeatures","updateOptions","newOptions","currentOptions","updatedOptions","setOptions","setConnectMethodsOrder","connectMethodsOrder","setWalletFeaturesOrder","walletFeaturesOrder","setCollapseWallets","collapseWallets","setSocialsOrder","socialsOrder","getConnectMethodsOrder","getConnectOrderMethod","removeAdapter","newCaipNetworks","removeAllEventListeners","Reflect","deleteProperty","addAdapter","extendedAdapterNetworks","addNetwork","removeNetwork","networkId","networkToRemove","remainingNetworks"],"sources":["../../../../src/client/appkit-base-client.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}