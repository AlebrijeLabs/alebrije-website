{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Card,Table,Badge,Spinner,Button}from'react-bootstrap';import TransactionHistoryService from'../services/transaction-history-service';import WalletService from'../services/wallet-service';import{ErrorDisplay}from'./ErrorDisplay';import{formatDistance}from'date-fns';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const TransactionHistory=_ref=>{let{tokenName}=_ref;const[transactions,setTransactions]=useState([]);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const loadTransactions=async()=>{if(!WalletService.isConnected()){setError(new Error('Wallet not connected'));return;}setIsLoading(true);setError(null);try{await TransactionHistoryService.initialize(tokenName);const txHistory=await TransactionHistoryService.fetchTransactionHistory(tokenName);setTransactions(txHistory);}catch(err){setError(err);console.error('Failed to load transactions:',err);}finally{setIsLoading(false);}};useEffect(()=>{if(WalletService.isConnected()){loadTransactions();}// Cleanup on unmount\nreturn()=>{TransactionHistoryService.cleanup();};},[tokenName]);// Format address for display\nconst formatAddress=address=>{if(!address)return'';return`${address.substring(0,6)}...${address.substring(address.length-4)}`;};// Format time relative to now\nconst formatTime=timestamp=>{if(!timestamp)return'';return formatDistance(new Date(timestamp),new Date(),{addSuffix:true});};if(!WalletService.isConnected()){return/*#__PURE__*/_jsx(Card,{className:\"transaction-history-card\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Card.Title,{children:[tokenName,\" Transaction History\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-muted\",children:\"Connect your wallet to view transaction history\"})]})});}return/*#__PURE__*/_jsx(Card,{className:\"transaction-history-card\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Card.Title,{className:\"d-flex justify-content-between align-items-center\",children:[tokenName,\" Transaction History\",/*#__PURE__*/_jsx(Button,{variant:\"link\",size:\"sm\",onClick:loadTransactions,disabled:isLoading,children:\"\\uD83D\\uDD04\"})]}),error&&/*#__PURE__*/_jsx(ErrorDisplay,{error:error,onDismiss:()=>setError(null),onRetry:loadTransactions}),isLoading?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center p-4\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2\",children:\"Loading transactions...\"})]}):transactions.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-muted p-4\",children:\"No transactions found\"}):/*#__PURE__*/_jsx(\"div\",{className:\"transaction-table-container\",children:/*#__PURE__*/_jsxs(Table,{hover:true,responsive:true,className:\"transaction-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"From/To\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:transactions.map(tx=>/*#__PURE__*/_jsxs(\"tr\",{className:tx.isIncoming?'incoming-tx':'outgoing-tx',children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:tx.isIncoming?'success':'primary',children:tx.isIncoming?'Received':'Sent'})}),/*#__PURE__*/_jsx(\"td\",{className:\"amount-cell\",children:/*#__PURE__*/_jsxs(\"span\",{className:tx.isIncoming?'text-success':'text-primary',children:[tx.isIncoming?'+':'-',tx.value]})}),/*#__PURE__*/_jsx(\"td\",{children:tx.isIncoming?/*#__PURE__*/_jsxs(\"span\",{title:tx.from,children:[\"From: \",formatAddress(tx.from)]}):/*#__PURE__*/_jsxs(\"span\",{title:tx.to,children:[\"To: \",formatAddress(tx.to)]})}),/*#__PURE__*/_jsx(\"td\",{children:formatTime(tx.timestamp)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:tx.status==='confirmed'?'success':tx.status==='pending'?'warning':'danger',children:tx.status==='confirmed'?'Confirmed':tx.status==='pending'?'Pending':'Failed'})})]},tx.hash))})]})})]})});};export default TransactionHistory;","map":{"version":3,"names":["React","useState","useEffect","Card","Table","Badge","Spinner","Button","TransactionHistoryService","WalletService","ErrorDisplay","formatDistance","jsxs","_jsxs","jsx","_jsx","TransactionHistory","_ref","tokenName","transactions","setTransactions","isLoading","setIsLoading","error","setError","loadTransactions","isConnected","Error","initialize","txHistory","fetchTransactionHistory","err","console","cleanup","formatAddress","address","substring","length","formatTime","timestamp","Date","addSuffix","className","children","Body","Title","variant","size","onClick","disabled","onDismiss","onRetry","animation","hover","responsive","map","tx","isIncoming","bg","value","title","from","to","status","hash"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/TransactionHistory.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Table, Badge, Spinner, Button } from 'react-bootstrap';\nimport TransactionHistoryService from '../services/transaction-history-service';\nimport WalletService from '../services/wallet-service';\nimport { ErrorDisplay } from './ErrorDisplay';\nimport { formatDistance } from 'date-fns';\n\nconst TransactionHistory = ({ tokenName }) => {\n  const [transactions, setTransactions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  const loadTransactions = async () => {\n    if (!WalletService.isConnected()) {\n      setError(new Error('Wallet not connected'));\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      await TransactionHistoryService.initialize(tokenName);\n      const txHistory = await TransactionHistoryService.fetchTransactionHistory(tokenName);\n      setTransactions(txHistory);\n    } catch (err) {\n      setError(err);\n      console.error('Failed to load transactions:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  useEffect(() => {\n    if (WalletService.isConnected()) {\n      loadTransactions();\n    }\n    \n    // Cleanup on unmount\n    return () => {\n      TransactionHistoryService.cleanup();\n    };\n  }, [tokenName]);\n  \n  // Format address for display\n  const formatAddress = (address) => {\n    if (!address) return '';\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n  \n  // Format time relative to now\n  const formatTime = (timestamp) => {\n    if (!timestamp) return '';\n    return formatDistance(new Date(timestamp), new Date(), { addSuffix: true });\n  };\n  \n  if (!WalletService.isConnected()) {\n    return (\n      <Card className=\"transaction-history-card\">\n        <Card.Body>\n          <Card.Title>{tokenName} Transaction History</Card.Title>\n          <div className=\"text-center text-muted\">\n            Connect your wallet to view transaction history\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n  \n  return (\n    <Card className=\"transaction-history-card\">\n      <Card.Body>\n        <Card.Title className=\"d-flex justify-content-between align-items-center\">\n          {tokenName} Transaction History\n          <Button \n            variant=\"link\" \n            size=\"sm\" \n            onClick={loadTransactions}\n            disabled={isLoading}\n          >\n            ðŸ”„\n          </Button>\n        </Card.Title>\n        \n        {error && (\n          <ErrorDisplay \n            error={error} \n            onDismiss={() => setError(null)} \n            onRetry={loadTransactions} \n          />\n        )}\n        \n        {isLoading ? (\n          <div className=\"text-center p-4\">\n            <Spinner animation=\"border\" />\n            <p className=\"mt-2\">Loading transactions...</p>\n          </div>\n        ) : transactions.length === 0 ? (\n          <div className=\"text-center text-muted p-4\">\n            No transactions found\n          </div>\n        ) : (\n          <div className=\"transaction-table-container\">\n            <Table hover responsive className=\"transaction-table\">\n              <thead>\n                <tr>\n                  <th>Type</th>\n                  <th>Amount</th>\n                  <th>From/To</th>\n                  <th>Time</th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {transactions.map((tx) => (\n                  <tr key={tx.hash} className={tx.isIncoming ? 'incoming-tx' : 'outgoing-tx'}>\n                    <td>\n                      <Badge bg={tx.isIncoming ? 'success' : 'primary'}>\n                        {tx.isIncoming ? 'Received' : 'Sent'}\n                      </Badge>\n                    </td>\n                    <td className=\"amount-cell\">\n                      <span className={tx.isIncoming ? 'text-success' : 'text-primary'}>\n                        {tx.isIncoming ? '+' : '-'}{tx.value}\n                      </span>\n                    </td>\n                    <td>\n                      {tx.isIncoming ? (\n                        <span title={tx.from}>From: {formatAddress(tx.from)}</span>\n                      ) : (\n                        <span title={tx.to}>To: {formatAddress(tx.to)}</span>\n                      )}\n                    </td>\n                    <td>{formatTime(tx.timestamp)}</td>\n                    <td>\n                      <Badge \n                        bg={\n                          tx.status === 'confirmed' ? 'success' : \n                          tx.status === 'pending' ? 'warning' : \n                          'danger'\n                        }\n                      >\n                        {tx.status === 'confirmed' ? 'Confirmed' : \n                         tx.status === 'pending' ? 'Pending' : \n                         'Failed'}\n                      </Badge>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TransactionHistory; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}