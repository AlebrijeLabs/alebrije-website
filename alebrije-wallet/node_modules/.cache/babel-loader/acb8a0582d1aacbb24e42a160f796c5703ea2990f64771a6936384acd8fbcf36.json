{"ast":null,"code":"import QRCodeUtil from 'qrcode';\nimport { svg } from 'lit';\nconst CONNECTING_ERROR_MARGIN = 0.1;\nconst CIRCLE_SIZE_MODIFIER = 2.5;\nconst QRCODE_MATRIX_MARGIN = 7;\nfunction isAdjecentDots(cy, otherCy, cellSize) {\n  if (cy === otherCy) {\n    return false;\n  }\n  const diff = cy - otherCy < 0 ? otherCy - cy : cy - otherCy;\n  return diff <= cellSize + CONNECTING_ERROR_MARGIN;\n}\nfunction getMatrix(value, errorCorrectionLevel) {\n  const arr = Array.prototype.slice.call(QRCodeUtil.create(value, {\n    errorCorrectionLevel\n  }).modules.data, 0);\n  const sqrt = Math.sqrt(arr.length);\n  return arr.reduce((rows, key, index) => (index % sqrt === 0 ? rows.push([key]) : rows[rows.length - 1].push(key)) && rows, []);\n}\nexport const QrCodeUtil = {\n  generate(_ref) {\n    let {\n      uri,\n      size,\n      logoSize,\n      dotColor = '#141414'\n    } = _ref;\n    const edgeColor = 'transparent';\n    const strokeWidth = 5;\n    const dots = [];\n    const matrix = getMatrix(uri, 'Q');\n    const cellSize = size / matrix.length;\n    const qrList = [{\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }];\n    qrList.forEach(_ref2 => {\n      let {\n        x,\n        y\n      } = _ref2;\n      const x1 = (matrix.length - QRCODE_MATRIX_MARGIN) * cellSize * x;\n      const y1 = (matrix.length - QRCODE_MATRIX_MARGIN) * cellSize * y;\n      const borderRadius = 0.45;\n      for (let i = 0; i < qrList.length; i += 1) {\n        const dotSize = cellSize * (QRCODE_MATRIX_MARGIN - i * 2);\n        dots.push(svg`\n            <rect\n              fill=${i === 2 ? dotColor : edgeColor}\n              width=${i === 0 ? dotSize - strokeWidth : dotSize}\n              rx= ${i === 0 ? (dotSize - strokeWidth) * borderRadius : dotSize * borderRadius}\n              ry= ${i === 0 ? (dotSize - strokeWidth) * borderRadius : dotSize * borderRadius}\n              stroke=${dotColor}\n              stroke-width=${i === 0 ? strokeWidth : 0}\n              height=${i === 0 ? dotSize - strokeWidth : dotSize}\n              x= ${i === 0 ? y1 + cellSize * i + strokeWidth / 2 : y1 + cellSize * i}\n              y= ${i === 0 ? x1 + cellSize * i + strokeWidth / 2 : x1 + cellSize * i}\n            />\n          `);\n      }\n    });\n    const clearArenaSize = Math.floor((logoSize + 25) / cellSize);\n    const matrixMiddleStart = matrix.length / 2 - clearArenaSize / 2;\n    const matrixMiddleEnd = matrix.length / 2 + clearArenaSize / 2 - 1;\n    const circles = [];\n    matrix.forEach((row, i) => {\n      row.forEach((_, j) => {\n        if (matrix[i][j]) {\n          if (!(i < QRCODE_MATRIX_MARGIN && j < QRCODE_MATRIX_MARGIN || i > matrix.length - (QRCODE_MATRIX_MARGIN + 1) && j < QRCODE_MATRIX_MARGIN || i < QRCODE_MATRIX_MARGIN && j > matrix.length - (QRCODE_MATRIX_MARGIN + 1))) {\n            if (!(i > matrixMiddleStart && i < matrixMiddleEnd && j > matrixMiddleStart && j < matrixMiddleEnd)) {\n              const cx = i * cellSize + cellSize / 2;\n              const cy = j * cellSize + cellSize / 2;\n              circles.push([cx, cy]);\n            }\n          }\n        }\n      });\n    });\n    const circlesToConnect = {};\n    circles.forEach(_ref3 => {\n      let [cx, cy] = _ref3;\n      if (circlesToConnect[cx]) {\n        circlesToConnect[cx]?.push(cy);\n      } else {\n        circlesToConnect[cx] = [cy];\n      }\n    });\n    Object.entries(circlesToConnect).map(_ref4 => {\n      let [cx, cys] = _ref4;\n      const newCys = cys.filter(cy => cys.every(otherCy => !isAdjecentDots(cy, otherCy, cellSize)));\n      return [Number(cx), newCys];\n    }).forEach(_ref5 => {\n      let [cx, cys] = _ref5;\n      cys.forEach(cy => {\n        dots.push(svg`<circle cx=${cx} cy=${cy} fill=${dotColor} r=${cellSize / CIRCLE_SIZE_MODIFIER} />`);\n      });\n    });\n    Object.entries(circlesToConnect).filter(_ref6 => {\n      let [_, cys] = _ref6;\n      return cys.length > 1;\n    }).map(_ref7 => {\n      let [cx, cys] = _ref7;\n      const newCys = cys.filter(cy => cys.some(otherCy => isAdjecentDots(cy, otherCy, cellSize)));\n      return [Number(cx), newCys];\n    }).map(_ref8 => {\n      let [cx, cys] = _ref8;\n      cys.sort((a, b) => a < b ? -1 : 1);\n      const groups = [];\n      for (const cy of cys) {\n        const group = groups.find(item => item.some(otherCy => isAdjecentDots(cy, otherCy, cellSize)));\n        if (group) {\n          group.push(cy);\n        } else {\n          groups.push([cy]);\n        }\n      }\n      return [cx, groups.map(item => [item[0], item[item.length - 1]])];\n    }).forEach(_ref9 => {\n      let [cx, groups] = _ref9;\n      groups.forEach(_ref10 => {\n        let [y1, y2] = _ref10;\n        dots.push(svg`\n              <line\n                x1=${cx}\n                x2=${cx}\n                y1=${y1}\n                y2=${y2}\n                stroke=${dotColor}\n                stroke-width=${cellSize / (CIRCLE_SIZE_MODIFIER / 2)}\n                stroke-linecap=\"round\"\n              />\n            `);\n      });\n    });\n    return dots;\n  }\n};","map":{"version":3,"names":["QRCodeUtil","svg","CONNECTING_ERROR_MARGIN","CIRCLE_SIZE_MODIFIER","QRCODE_MATRIX_MARGIN","isAdjecentDots","cy","otherCy","cellSize","diff","getMatrix","value","errorCorrectionLevel","arr","Array","prototype","slice","call","create","modules","data","sqrt","Math","length","reduce","rows","key","index","push","QrCodeUtil","generate","_ref","uri","size","logoSize","dotColor","edgeColor","strokeWidth","dots","matrix","qrList","x","y","forEach","_ref2","x1","y1","borderRadius","i","dotSize","clearArenaSize","floor","matrixMiddleStart","matrixMiddleEnd","circles","row","_","j","cx","circlesToConnect","_ref3","Object","entries","map","_ref4","cys","newCys","filter","every","Number","_ref5","_ref6","_ref7","some","_ref8","sort","a","b","groups","group","find","item","_ref9","_ref10","y2"],"sources":["../../../../src/utils/QrCode.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}