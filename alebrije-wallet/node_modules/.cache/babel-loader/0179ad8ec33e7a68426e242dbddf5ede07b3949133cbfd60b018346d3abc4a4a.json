{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeVersion = exports.isNewerOrEqual = exports.isEqual = exports.isNewer = exports.isVersionArray = void 0;\nconst throwError_1 = require(\"./throwError\");\nconst isVersionArray = arr => Array.isArray(arr) && arr.length === 3 && arr.every(number => typeof number === 'number' && number >= 0);\nexports.isVersionArray = isVersionArray;\nconst tryParse = version => version.match(/^(\\d+)\\.(\\d+)\\.(\\d+)([+-].*)?$/)?.slice(1, 4).map(n => Number(n));\nconst validateArray = version => (0, exports.isVersionArray)(version) ? version : null;\nconst ensureArray = version => (typeof version === 'string' ? tryParse(version) : validateArray(version)) ?? (0, throwError_1.throwError)(`version string is in wrong format: ${version}`);\nconst compare = (_ref, _ref2) => {\n  let [majorX, minorX, patchX] = _ref;\n  let [majorY, minorY, patchY] = _ref2;\n  return majorX - majorY || minorX - minorY || patchX - patchY;\n};\nconst isNewer = (versionX, versionY) => compare(ensureArray(versionX), ensureArray(versionY)) > 0;\nexports.isNewer = isNewer;\nconst isEqual = (versionX, versionY) => compare(ensureArray(versionX), ensureArray(versionY)) === 0;\nexports.isEqual = isEqual;\nconst isNewerOrEqual = (versionX, versionY) => compare(ensureArray(versionX), ensureArray(versionY)) >= 0;\nexports.isNewerOrEqual = isNewerOrEqual;\nconst normalizeVersion = version => version.replace(/\\b0+(\\d)/g, '$1');\nexports.normalizeVersion = normalizeVersion;","map":{"version":3,"names":["Object","defineProperty","exports","value","normalizeVersion","isNewerOrEqual","isEqual","isNewer","isVersionArray","throwError_1","require","arr","Array","isArray","length","every","number","tryParse","version","match","slice","map","n","Number","validateArray","ensureArray","throwError","compare","_ref","_ref2","majorX","minorX","patchX","majorY","minorY","patchY","versionX","versionY","replace"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/node_modules/@trezor/utils/lib/versionUtils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeVersion = exports.isNewerOrEqual = exports.isEqual = exports.isNewer = exports.isVersionArray = void 0;\nconst throwError_1 = require(\"./throwError\");\nconst isVersionArray = (arr) => Array.isArray(arr) &&\n    arr.length === 3 &&\n    arr.every(number => typeof number === 'number' && number >= 0);\nexports.isVersionArray = isVersionArray;\nconst tryParse = (version) => version\n    .match(/^(\\d+)\\.(\\d+)\\.(\\d+)([+-].*)?$/)\n    ?.slice(1, 4)\n    .map(n => Number(n));\nconst validateArray = (version) => ((0, exports.isVersionArray)(version) ? version : null);\nconst ensureArray = (version) => (typeof version === 'string' ? tryParse(version) : validateArray(version)) ??\n    (0, throwError_1.throwError)(`version string is in wrong format: ${version}`);\nconst compare = ([majorX, minorX, patchX], [majorY, minorY, patchY]) => majorX - majorY || minorX - minorY || patchX - patchY;\nconst isNewer = (versionX, versionY) => compare(ensureArray(versionX), ensureArray(versionY)) > 0;\nexports.isNewer = isNewer;\nconst isEqual = (versionX, versionY) => compare(ensureArray(versionX), ensureArray(versionY)) === 0;\nexports.isEqual = isEqual;\nconst isNewerOrEqual = (versionX, versionY) => compare(ensureArray(versionX), ensureArray(versionY)) >= 0;\nexports.isNewerOrEqual = isNewerOrEqual;\nconst normalizeVersion = (version) => version.replace(/\\b0+(\\d)/g, '$1');\nexports.normalizeVersion = normalizeVersion;\n//# sourceMappingURL=versionUtils.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,gBAAgB,GAAGF,OAAO,CAACG,cAAc,GAAGH,OAAO,CAACI,OAAO,GAAGJ,OAAO,CAACK,OAAO,GAAGL,OAAO,CAACM,cAAc,GAAG,KAAK,CAAC;AACvH,MAAMC,YAAY,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC5C,MAAMF,cAAc,GAAIG,GAAG,IAAKC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,IAC9CA,GAAG,CAACG,MAAM,KAAK,CAAC,IAChBH,GAAG,CAACI,KAAK,CAACC,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,IAAI,CAAC,CAAC;AAClEd,OAAO,CAACM,cAAc,GAAGA,cAAc;AACvC,MAAMS,QAAQ,GAAIC,OAAO,IAAKA,OAAO,CAChCC,KAAK,CAAC,gCAAgC,CAAC,EACtCC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CACZC,GAAG,CAACC,CAAC,IAAIC,MAAM,CAACD,CAAC,CAAC,CAAC;AACxB,MAAME,aAAa,GAAIN,OAAO,IAAM,CAAC,CAAC,EAAEhB,OAAO,CAACM,cAAc,EAAEU,OAAO,CAAC,GAAGA,OAAO,GAAG,IAAK;AAC1F,MAAMO,WAAW,GAAIP,OAAO,IAAK,CAAC,OAAOA,OAAO,KAAK,QAAQ,GAAGD,QAAQ,CAACC,OAAO,CAAC,GAAGM,aAAa,CAACN,OAAO,CAAC,KACtG,CAAC,CAAC,EAAET,YAAY,CAACiB,UAAU,EAAE,sCAAsCR,OAAO,EAAE,CAAC;AACjF,MAAMS,OAAO,GAAGA,CAAAC,IAAA,EAAAC,KAAA;EAAA,IAAC,CAACC,MAAM,EAAEC,MAAM,EAAEC,MAAM,CAAC,GAAAJ,IAAA;EAAA,IAAE,CAACK,MAAM,EAAEC,MAAM,EAAEC,MAAM,CAAC,GAAAN,KAAA;EAAA,OAAKC,MAAM,GAAGG,MAAM,IAAIF,MAAM,GAAGG,MAAM,IAAIF,MAAM,GAAGG,MAAM;AAAA;AAC7H,MAAM5B,OAAO,GAAGA,CAAC6B,QAAQ,EAAEC,QAAQ,KAAKV,OAAO,CAACF,WAAW,CAACW,QAAQ,CAAC,EAAEX,WAAW,CAACY,QAAQ,CAAC,CAAC,GAAG,CAAC;AACjGnC,OAAO,CAACK,OAAO,GAAGA,OAAO;AACzB,MAAMD,OAAO,GAAGA,CAAC8B,QAAQ,EAAEC,QAAQ,KAAKV,OAAO,CAACF,WAAW,CAACW,QAAQ,CAAC,EAAEX,WAAW,CAACY,QAAQ,CAAC,CAAC,KAAK,CAAC;AACnGnC,OAAO,CAACI,OAAO,GAAGA,OAAO;AACzB,MAAMD,cAAc,GAAGA,CAAC+B,QAAQ,EAAEC,QAAQ,KAAKV,OAAO,CAACF,WAAW,CAACW,QAAQ,CAAC,EAAEX,WAAW,CAACY,QAAQ,CAAC,CAAC,IAAI,CAAC;AACzGnC,OAAO,CAACG,cAAc,GAAGA,cAAc;AACvC,MAAMD,gBAAgB,GAAIc,OAAO,IAAKA,OAAO,CAACoB,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC;AACxEpC,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}