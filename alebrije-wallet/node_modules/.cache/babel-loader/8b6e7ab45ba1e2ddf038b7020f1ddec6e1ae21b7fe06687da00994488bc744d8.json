{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useWallet}from'../contexts/WalletContext';import WalletConnect from'./WalletConnect';import TokenBalance from'./TokenBalance';import TokenTransfer from'./TokenTransfer';import TransactionHistory from'./TransactionHistory';import BurnToken from'./BurnToken';import TokenService from'../services/token-service';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Dashboard=()=>{const{connected,currentAccount}=useWallet();const[activeTab,setActiveTab]=useState('wallet');const[tokenAddress,setTokenAddress]=useState('');// Initialize token service\nuseEffect(()=>{const network=process.env.REACT_APP_SOLANA_NETWORK||'devnet';const endpoint=process.env.REACT_APP_SOLANA_RPC_URL||`https://api.${network}.solana.com`;TokenService.initialize(endpoint);},[]);const renderTabContent=()=>{switch(activeTab){case'wallet':return/*#__PURE__*/_jsx(TokenBalance,{});case'transfer':return/*#__PURE__*/_jsx(TokenTransfer,{tokenAddress:tokenAddress});case'burn':return/*#__PURE__*/_jsx(BurnToken,{tokenAddress:tokenAddress});case'history':return/*#__PURE__*/_jsx(TransactionHistory,{tokenAddress:tokenAddress});default:return/*#__PURE__*/_jsx(TokenBalance,{});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"p-3 mb-4 border-bottom\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-wrap align-items-center justify-content-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"h4 me-3 mb-0\",children:\"Alebrije Wallet\"}),/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-warning text-dark\",children:process.env.REACT_APP_SOLANA_NETWORK||'devnet'})]}),/*#__PURE__*/_jsx(WalletConnect,{})]})})}),/*#__PURE__*/_jsx(\"main\",{className:\"container py-4\",children:!connected?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center p-5\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Connect Your Wallet\"}),/*#__PURE__*/_jsx(\"p\",{className:\"lead\",children:\"Connect your Solana wallet to access the Alebrije token functionalities.\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"ul\",{className:\"nav nav-tabs mb-4\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"button\",{className:`nav-link ${activeTab==='wallet'?'active':''}`,onClick:()=>setActiveTab('wallet'),children:\"Wallet\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"button\",{className:`nav-link ${activeTab==='transfer'?'active':''}`,onClick:()=>setActiveTab('transfer'),children:\"Transfer\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"button\",{className:`nav-link ${activeTab==='burn'?'active':''}`,onClick:()=>setActiveTab('burn'),children:\"Burn\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"button\",{className:`nav-link ${activeTab==='history'?'active':''}`,onClick:()=>setActiveTab('history'),children:\"History\"})})]}),(activeTab==='transfer'||activeTab==='burn'||activeTab==='history')&&/*#__PURE__*/_jsx(\"div\",{className:\"row mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"input-group-text\",children:\"Token Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:tokenAddress,onChange:e=>setTokenAddress(e.target.value),placeholder:\"Enter token mint address (optional)\"})]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:activeTab==='transfer'?'Enter the mint address of the token you want to transfer':activeTab==='burn'?'Enter the mint address of the token you want to burn':'Enter a token address to filter transactions, or leave empty to see all'})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:renderTabContent()})})]})})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useWallet","WalletConnect","TokenBalance","TokenTransfer","TransactionHistory","BurnToken","TokenService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dashboard","connected","currentAccount","activeTab","setActiveTab","tokenAddress","setTokenAddress","network","process","env","REACT_APP_SOLANA_NETWORK","endpoint","REACT_APP_SOLANA_RPC_URL","initialize","renderTabContent","className","children","onClick","type","value","onChange","e","target","placeholder"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useWallet } from '../contexts/WalletContext';\nimport WalletConnect from './WalletConnect';\nimport TokenBalance from './TokenBalance';\nimport TokenTransfer from './TokenTransfer';\nimport TransactionHistory from './TransactionHistory';\nimport BurnToken from './BurnToken';\nimport TokenService from '../services/token-service';\n\nconst Dashboard = () => {\n  const { connected, currentAccount } = useWallet();\n  const [activeTab, setActiveTab] = useState('wallet');\n  const [tokenAddress, setTokenAddress] = useState('');\n  \n  // Initialize token service\n  useEffect(() => {\n    const network = process.env.REACT_APP_SOLANA_NETWORK || 'devnet';\n    const endpoint = process.env.REACT_APP_SOLANA_RPC_URL || \n                      `https://api.${network}.solana.com`;\n    \n    TokenService.initialize(endpoint);\n  }, []);\n  \n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'wallet':\n        return <TokenBalance />;\n      case 'transfer':\n        return <TokenTransfer tokenAddress={tokenAddress} />;\n      case 'burn':\n        return <BurnToken tokenAddress={tokenAddress} />;\n      case 'history':\n        return <TransactionHistory tokenAddress={tokenAddress} />;\n      default:\n        return <TokenBalance />;\n    }\n  };\n  \n  return (\n    <div className=\"dashboard-container\">\n      <header className=\"p-3 mb-4 border-bottom\">\n        <div className=\"container\">\n          <div className=\"d-flex flex-wrap align-items-center justify-content-between\">\n            <div className=\"d-flex align-items-center\">\n              <h1 className=\"h4 me-3 mb-0\">Alebrije Wallet</h1>\n              <span className=\"badge bg-warning text-dark\">\n                {process.env.REACT_APP_SOLANA_NETWORK || 'devnet'}\n              </span>\n            </div>\n            \n            <WalletConnect />\n          </div>\n        </div>\n      </header>\n      \n      <main className=\"container py-4\">\n        {!connected ? (\n          <div className=\"text-center p-5\">\n            <h2>Connect Your Wallet</h2>\n            <p className=\"lead\">\n              Connect your Solana wallet to access the Alebrije token functionalities.\n            </p>\n          </div>\n        ) : (\n          <>\n            <ul className=\"nav nav-tabs mb-4\">\n              <li className=\"nav-item\">\n                <button \n                  className={`nav-link ${activeTab === 'wallet' ? 'active' : ''}`}\n                  onClick={() => setActiveTab('wallet')}\n                >\n                  Wallet\n                </button>\n              </li>\n              <li className=\"nav-item\">\n                <button \n                  className={`nav-link ${activeTab === 'transfer' ? 'active' : ''}`}\n                  onClick={() => setActiveTab('transfer')}\n                >\n                  Transfer\n                </button>\n              </li>\n              <li className=\"nav-item\">\n                <button \n                  className={`nav-link ${activeTab === 'burn' ? 'active' : ''}`}\n                  onClick={() => setActiveTab('burn')}\n                >\n                  Burn\n                </button>\n              </li>\n              <li className=\"nav-item\">\n                <button \n                  className={`nav-link ${activeTab === 'history' ? 'active' : ''}`}\n                  onClick={() => setActiveTab('history')}\n                >\n                  History\n                </button>\n              </li>\n            </ul>\n            \n            {(activeTab === 'transfer' || activeTab === 'burn' || activeTab === 'history') && (\n              <div className=\"row mb-4\">\n                <div className=\"col\">\n                  <div className=\"input-group\">\n                    <span className=\"input-group-text\">Token Address</span>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={tokenAddress}\n                      onChange={(e) => setTokenAddress(e.target.value)}\n                      placeholder=\"Enter token mint address (optional)\"\n                    />\n                  </div>\n                  <small className=\"text-muted\">\n                    {activeTab === 'transfer' \n                      ? 'Enter the mint address of the token you want to transfer'\n                      : activeTab === 'burn'\n                      ? 'Enter the mint address of the token you want to burn'\n                      : 'Enter a token address to filter transactions, or leave empty to see all'}\n                  </small>\n                </div>\n              </div>\n            )}\n            \n            <div className=\"row\">\n              <div className=\"col\">\n                {renderTabContent()}\n              </div>\n            </div>\n          </>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}