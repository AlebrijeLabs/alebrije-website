{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrezorConnect = exports.CoreInSuiteDesktop = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst ERRORS = tslib_1.__importStar(require(\"@trezor/connect/lib/constants/errors\"));\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst websocket_client_1 = require(\"@trezor/websocket-client\");\nconst client_1 = require(\"@trezor/websocket-client/lib/client\");\nconst connectSettings_1 = require(\"../connectSettings\");\nclass CoreInSuiteDesktop {\n  eventEmitter = (() => new events_1.default())();\n  _settings;\n  ws;\n  constructor() {\n    this._settings = (0, connectSettings_1.parseConnectSettings)();\n  }\n  manifest(data) {\n    this._settings = (0, connectSettings_1.parseConnectSettings)({\n      ...this._settings,\n      manifest: data\n    });\n  }\n  dispose() {\n    this.eventEmitter.removeAllListeners();\n    this._settings = (0, connectSettings_1.parseConnectSettings)();\n    this.ws?.dispose();\n    return Promise.resolve(undefined);\n  }\n  cancel(_error) {}\n  async handshake() {\n    try {\n      const response = await this.ws.sendMessage({\n        type: events_2.POPUP.HANDSHAKE\n      }, {\n        timeout: 1000\n      });\n      if (!response) {\n        throw ERRORS.TypedError('Desktop_ConnectionMissing', 'No response');\n      }\n      return response;\n    } catch (err) {\n      throw ERRORS.TypedError('Desktop_ConnectionMissing', err.message);\n    }\n  }\n  async init() {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const newSettings = (0, connectSettings_1.parseConnectSettings)({\n      ...this._settings,\n      ...settings\n    });\n    if (!newSettings.transports?.length) {\n      newSettings.transports = ['BridgeTransport', 'WebUsbTransport'];\n    }\n    this._settings = newSettings;\n    try {\n      this.ws = new websocket_client_1.WebsocketClient({\n        url: 'ws://localhost:21335/connect-ws'\n      });\n      await this.ws.connect();\n      return await this.handshake();\n    } catch (err) {\n      throw err instanceof client_1.WebsocketError ? ERRORS.TypedError('Desktop_ConnectionMissing', err.message) : err;\n    }\n  }\n  setTransports() {\n    throw new Error('Unsupported');\n  }\n  async call(params) {\n    try {\n      if (!this.ws) {\n        await this.init();\n      } else {\n        await this.handshake();\n      }\n      const response = await this.ws?.sendMessage({\n        type: events_2.IFRAME.CALL,\n        payload: params\n      }, {\n        timeout: Number.MAX_SAFE_INTEGER\n      });\n      if (!response) {\n        throw ERRORS.TypedError('Desktop_ConnectionMissing', 'No response');\n      }\n      return response;\n    } catch (err) {\n      return {\n        success: false,\n        payload: ERRORS.serializeError(err instanceof client_1.WebsocketError ? ERRORS.TypedError('Desktop_ConnectionMissing', err.message) : err)\n      };\n    }\n  }\n  uiResponse(_response) {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  requestLogin() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  disableWebUSB() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  requestWebUSBDevice() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  renderWebUSBButton() {}\n}\nexports.CoreInSuiteDesktop = CoreInSuiteDesktop;\nconst impl = new CoreInSuiteDesktop();\nexports.TrezorConnect = (0, factory_1.factory)({\n  eventEmitter: impl.eventEmitter,\n  init: impl.init.bind(impl),\n  call: impl.call.bind(impl),\n  setTransports: impl.setTransports.bind(impl),\n  manifest: impl.manifest.bind(impl),\n  requestLogin: impl.requestLogin.bind(impl),\n  uiResponse: impl.uiResponse.bind(impl),\n  cancel: impl.cancel.bind(impl),\n  dispose: impl.dispose.bind(impl)\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","TrezorConnect","CoreInSuiteDesktop","tslib_1","require","events_1","__importDefault","ERRORS","__importStar","events_2","factory_1","websocket_client_1","client_1","connectSettings_1","eventEmitter","default","_settings","ws","constructor","parseConnectSettings","manifest","data","dispose","removeAllListeners","Promise","resolve","undefined","cancel","_error","handshake","response","sendMessage","type","POPUP","HANDSHAKE","timeout","TypedError","err","message","init","settings","arguments","length","newSettings","transports","WebsocketClient","url","connect","WebsocketError","setTransports","Error","call","params","IFRAME","CALL","payload","Number","MAX_SAFE_INTEGER","success","serializeError","uiResponse","_response","requestLogin","disableWebUSB","requestWebUSBDevice","renderWebUSBButton","impl","factory","bind"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/node_modules/@trezor/connect-web/lib/impl/core-in-suite-desktop.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrezorConnect = exports.CoreInSuiteDesktop = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst ERRORS = tslib_1.__importStar(require(\"@trezor/connect/lib/constants/errors\"));\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst websocket_client_1 = require(\"@trezor/websocket-client\");\nconst client_1 = require(\"@trezor/websocket-client/lib/client\");\nconst connectSettings_1 = require(\"../connectSettings\");\nclass CoreInSuiteDesktop {\n    eventEmitter = new events_1.default();\n    _settings;\n    ws;\n    constructor() {\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n    }\n    manifest(data) {\n        this._settings = (0, connectSettings_1.parseConnectSettings)({\n            ...this._settings,\n            manifest: data,\n        });\n    }\n    dispose() {\n        this.eventEmitter.removeAllListeners();\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        this.ws?.dispose();\n        return Promise.resolve(undefined);\n    }\n    cancel(_error) { }\n    async handshake() {\n        try {\n            const response = await this.ws.sendMessage({\n                type: events_2.POPUP.HANDSHAKE,\n            }, {\n                timeout: 1000,\n            });\n            if (!response) {\n                throw ERRORS.TypedError('Desktop_ConnectionMissing', 'No response');\n            }\n            return response;\n        }\n        catch (err) {\n            throw ERRORS.TypedError('Desktop_ConnectionMissing', err.message);\n        }\n    }\n    async init(settings = {}) {\n        const newSettings = (0, connectSettings_1.parseConnectSettings)({\n            ...this._settings,\n            ...settings,\n        });\n        if (!newSettings.transports?.length) {\n            newSettings.transports = ['BridgeTransport', 'WebUsbTransport'];\n        }\n        this._settings = newSettings;\n        try {\n            this.ws = new websocket_client_1.WebsocketClient({ url: 'ws://localhost:21335/connect-ws' });\n            await this.ws.connect();\n            return await this.handshake();\n        }\n        catch (err) {\n            throw err instanceof client_1.WebsocketError\n                ? ERRORS.TypedError('Desktop_ConnectionMissing', err.message)\n                : err;\n        }\n    }\n    setTransports() {\n        throw new Error('Unsupported');\n    }\n    async call(params) {\n        try {\n            if (!this.ws) {\n                await this.init();\n            }\n            else {\n                await this.handshake();\n            }\n            const response = await this.ws?.sendMessage({\n                type: events_2.IFRAME.CALL,\n                payload: params,\n            }, {\n                timeout: Number.MAX_SAFE_INTEGER,\n            });\n            if (!response) {\n                throw ERRORS.TypedError('Desktop_ConnectionMissing', 'No response');\n            }\n            return response;\n        }\n        catch (err) {\n            return {\n                success: false,\n                payload: ERRORS.serializeError(err instanceof client_1.WebsocketError\n                    ? ERRORS.TypedError('Desktop_ConnectionMissing', err.message)\n                    : err),\n            };\n        }\n    }\n    uiResponse(_response) {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    requestLogin() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    disableWebUSB() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    requestWebUSBDevice() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    renderWebUSBButton() { }\n}\nexports.CoreInSuiteDesktop = CoreInSuiteDesktop;\nconst impl = new CoreInSuiteDesktop();\nexports.TrezorConnect = (0, factory_1.factory)({\n    eventEmitter: impl.eventEmitter,\n    init: impl.init.bind(impl),\n    call: impl.call.bind(impl),\n    setTransports: impl.setTransports.bind(impl),\n    manifest: impl.manifest.bind(impl),\n    requestLogin: impl.requestLogin.bind(impl),\n    uiResponse: impl.uiResponse.bind(impl),\n    cancel: impl.cancel.bind(impl),\n    dispose: impl.dispose.bind(impl),\n});\n//# sourceMappingURL=core-in-suite-desktop.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}