{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const DarkModeToggle=()=>{const[isDarkMode,setIsDarkMode]=useState(false);useEffect(()=>{// Check if user has a preference stored\nconst storedPreference=localStorage.getItem('darkMode');// Check if user has a system preference\nconst prefersDarkMode=window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches;// Set initial state based on stored preference or system preference\nconst initialDarkMode=storedPreference?storedPreference==='true':prefersDarkMode;setIsDarkMode(initialDarkMode);// Apply the initial theme\nif(initialDarkMode){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}},[]);const toggleDarkMode=()=>{const newDarkMode=!isDarkMode;setIsDarkMode(newDarkMode);// Save preference to localStorage\nlocalStorage.setItem('darkMode',newDarkMode.toString());// Apply or remove the dark-mode class\nif(newDarkMode){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}};return/*#__PURE__*/_jsx(\"button\",{className:\"dark-mode-toggle\",onClick:toggleDarkMode,\"aria-label\":isDarkMode?'Switch to light mode':'Switch to dark mode',children:isDarkMode?'‚òÄÔ∏è':'üåô'});};export default DarkModeToggle;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","DarkModeToggle","isDarkMode","setIsDarkMode","storedPreference","localStorage","getItem","prefersDarkMode","window","matchMedia","matches","initialDarkMode","document","body","classList","add","remove","toggleDarkMode","newDarkMode","setItem","toString","className","onClick","children"],"sources":["/Users/rastavo/alebrije-project/alebrije-wallet/src/components/DarkModeToggle.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst DarkModeToggle = () => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  \n  useEffect(() => {\n    // Check if user has a preference stored\n    const storedPreference = localStorage.getItem('darkMode');\n    \n    // Check if user has a system preference\n    const prefersDarkMode = window.matchMedia && \n      window.matchMedia('(prefers-color-scheme: dark)').matches;\n    \n    // Set initial state based on stored preference or system preference\n    const initialDarkMode = storedPreference \n      ? storedPreference === 'true'\n      : prefersDarkMode;\n    \n    setIsDarkMode(initialDarkMode);\n    \n    // Apply the initial theme\n    if (initialDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, []);\n  \n  const toggleDarkMode = () => {\n    const newDarkMode = !isDarkMode;\n    setIsDarkMode(newDarkMode);\n    \n    // Save preference to localStorage\n    localStorage.setItem('darkMode', newDarkMode.toString());\n    \n    // Apply or remove the dark-mode class\n    if (newDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  };\n  \n  return (\n    <button \n      className=\"dark-mode-toggle\" \n      onClick={toggleDarkMode}\n      aria-label={isDarkMode ? 'Switch to light mode' : 'Switch to dark mode'}\n    >\n      {isDarkMode ? '‚òÄÔ∏è' : 'üåô'}\n    </button>\n  );\n};\n\nexport default DarkModeToggle; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnD,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGL,QAAQ,CAAC,KAAK,CAAC,CAEnDD,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAO,gBAAgB,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAEzD;AACA,KAAM,CAAAC,eAAe,CAAGC,MAAM,CAACC,UAAU,EACvCD,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,CAE3D;AACA,KAAM,CAAAC,eAAe,CAAGP,gBAAgB,CACpCA,gBAAgB,GAAK,MAAM,CAC3BG,eAAe,CAEnBJ,aAAa,CAACQ,eAAe,CAAC,CAE9B;AACA,GAAIA,eAAe,CAAE,CACnBC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CAC1C,CAAC,IAAM,CACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC,CAC7C,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,WAAW,CAAG,CAAChB,UAAU,CAC/BC,aAAa,CAACe,WAAW,CAAC,CAE1B;AACAb,YAAY,CAACc,OAAO,CAAC,UAAU,CAAED,WAAW,CAACE,QAAQ,CAAC,CAAC,CAAC,CAExD;AACA,GAAIF,WAAW,CAAE,CACfN,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CAC1C,CAAC,IAAM,CACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC,CAC7C,CACF,CAAC,CAED,mBACEhB,IAAA,WACEqB,SAAS,CAAC,kBAAkB,CAC5BC,OAAO,CAAEL,cAAe,CACxB,aAAYf,UAAU,CAAG,sBAAsB,CAAG,qBAAsB,CAAAqB,QAAA,CAEvErB,UAAU,CAAG,IAAI,CAAG,IAAI,CACnB,CAAC,CAEb,CAAC,CAED,cAAe,CAAAD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}